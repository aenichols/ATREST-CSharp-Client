/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;using Object = IO.Swagger.Model.Object;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PriceListWorkTypeModifiersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PriceListWorkTypeModifiersApiTests
    {
        private PriceListWorkTypeModifiersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PriceListWorkTypeModifiersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PriceListWorkTypeModifiersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PriceListWorkTypeModifiersApi
            //Assert.IsInstanceOfType(typeof(PriceListWorkTypeModifiersApi), instance, "instance is a PriceListWorkTypeModifiersApi");
        }


        /// <summary>
        /// Test PriceListWorkTypeModifiersPatchEntity
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersPatchEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PriceListWorkTypeModifierModel restModelInput = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersPatchEntity(restModelInput, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQuery
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QueryModel queryModel = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQuery(queryModel, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<QueryActionResultPriceListWorkTypeModifierModelPriceListWorkTypeModifier> (response, "response is QueryActionResultPriceListWorkTypeModifierModelPriceListWorkTypeModifier");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQueryCount
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QueryModel queryModel = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQueryCount(queryModel, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<QueryCountResultModel> (response, "response is QueryCountResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQueryEntityInformation
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryEntityInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQueryEntityInformation(apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<EntityInformationResultModel> (response, "response is EntityInformationResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQueryFieldDefinitions
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryFieldDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQueryFieldDefinitions(apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<FieldInformationResultModel> (response, "response is FieldInformationResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQueryItem
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQueryItem(id, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<ItemQueryResultModelPriceListWorkTypeModifierModelPriceListWorkTypeModifier> (response, "response is ItemQueryResultModelPriceListWorkTypeModifierModelPriceListWorkTypeModifier");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersQueryUserDefinedFieldDefinitions
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersQueryUserDefinedFieldDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersQueryUserDefinedFieldDefinitions(apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<UserDefinedFieldInformationResultModel> (response, "response is UserDefinedFieldInformationResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersUpdateEntity
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersUpdateEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PriceListWorkTypeModifierModel restModelInput = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersUpdateEntity(restModelInput, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersUrlParameterQuery
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersUrlParameterQueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersUrlParameterQuery(search, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<QueryActionResultPriceListWorkTypeModifierModelPriceListWorkTypeModifier> (response, "response is QueryActionResultPriceListWorkTypeModifierModelPriceListWorkTypeModifier");
        }

        /// <summary>
        /// Test PriceListWorkTypeModifiersUrlParameterQueryCount
        /// </summary>
        [Test]
        public void PriceListWorkTypeModifiersUrlParameterQueryCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.PriceListWorkTypeModifiersUrlParameterQueryCount(search, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<QueryCountResultModel> (response, "response is QueryCountResultModel");
        }

    }

}
