/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;using Object = IO.Swagger.Model.Object;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ChecklistLibraryChecklistItemsChildApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ChecklistLibraryChecklistItemsChildApiTests
    {
        private ChecklistLibraryChecklistItemsChildApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ChecklistLibraryChecklistItemsChildApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ChecklistLibraryChecklistItemsChildApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChecklistLibraryChecklistItemsChildApi
            //Assert.IsInstanceOfType(typeof(ChecklistLibraryChecklistItemsChildApi), instance, "instance is a ChecklistLibraryChecklistItemsChildApi");
        }


        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildCreateEntity
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildCreateEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //ChecklistLibraryChecklistItemModel restModelInput = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildCreateEntity(parentId, restModelInput, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildDeleteEntity
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildDeleteEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //long? id = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildDeleteEntity(parentId, id, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildPatchEntity
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildPatchEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //ChecklistLibraryChecklistItemModel restModelInput = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildPatchEntity(parentId, restModelInput, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildQuery
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildQueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildQuery(parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<QueryActionResultChecklistLibraryChecklistItemModelChecklistLibraryChecklistItem> (response, "response is QueryActionResultChecklistLibraryChecklistItemModelChecklistLibraryChecklistItem");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildQueryEntityInformation
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildQueryEntityInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildQueryEntityInformation(parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<EntityInformationResultModel> (response, "response is EntityInformationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildQueryFieldDefinitions
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildQueryFieldDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildQueryFieldDefinitions(parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<FieldInformationResultModel> (response, "response is FieldInformationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildQueryItem
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildQueryItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //long? id = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildQueryItem(parentId, id, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<ItemQueryResultModelChecklistLibraryChecklistItemModelChecklistLibraryChecklistItem> (response, "response is ItemQueryResultModelChecklistLibraryChecklistItemModelChecklistLibraryChecklistItem");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildQueryUserDefinedFieldDefinitions
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildQueryUserDefinedFieldDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildQueryUserDefinedFieldDefinitions(parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<UserDefinedFieldInformationResultModel> (response, "response is UserDefinedFieldInformationResultModel");
        }

        /// <summary>
        /// Test ChecklistLibraryChecklistItemsChildUpdateEntity
        /// </summary>
        [Test]
        public void ChecklistLibraryChecklistItemsChildUpdateEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //ChecklistLibraryChecklistItemModel restModelInput = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ChecklistLibraryChecklistItemsChildUpdateEntity(parentId, restModelInput, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

    }

}
