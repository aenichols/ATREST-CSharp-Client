/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;using Object = IO.Swagger.Model.Object;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ConfigurationItemNoteAttachmentsChildApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ConfigurationItemNoteAttachmentsChildApiTests
    {
        private ConfigurationItemNoteAttachmentsChildApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConfigurationItemNoteAttachmentsChildApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConfigurationItemNoteAttachmentsChildApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ConfigurationItemNoteAttachmentsChildApi
            //Assert.IsInstanceOfType(typeof(ConfigurationItemNoteAttachmentsChildApi), instance, "instance is a ConfigurationItemNoteAttachmentsChildApi");
        }


        /// <summary>
        /// Test ConfigurationItemNoteAttachmentsChildCreateEntity
        /// </summary>
        [Test]
        public void ConfigurationItemNoteAttachmentsChildCreateEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConfigurationItemNoteAttachmentModel restModelInput = null;
            //long? parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ConfigurationItemNoteAttachmentsChildCreateEntity(restModelInput, parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test ConfigurationItemNoteAttachmentsChildDeleteEntity
        /// </summary>
        [Test]
        public void ConfigurationItemNoteAttachmentsChildDeleteEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //long? parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ConfigurationItemNoteAttachmentsChildDeleteEntity(id, parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<OperationResultModel> (response, "response is OperationResultModel");
        }

        /// <summary>
        /// Test ConfigurationItemNoteAttachmentsChildQuery
        /// </summary>
        [Test]
        public void ConfigurationItemNoteAttachmentsChildQueryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ConfigurationItemNoteAttachmentsChildQuery(parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<ConfigurationItemNoteAttachmentModel> (response, "response is ConfigurationItemNoteAttachmentModel");
        }

        /// <summary>
        /// Test ConfigurationItemNoteAttachmentsChildQueryItem
        /// </summary>
        [Test]
        public void ConfigurationItemNoteAttachmentsChildQueryItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //long? parentId = null;
            //string apiIntegrationCode = null;
            //string userName = null;
            //string secret = null;
            //string impersonationResourceId = null;
            //var response = instance.ConfigurationItemNoteAttachmentsChildQueryItem(id, parentId, apiIntegrationCode, userName, secret, impersonationResourceId);
            //Assert.IsInstanceOf<ConfigurationItemNoteAttachmentModel> (response, "response is ConfigurationItemNoteAttachmentModel");
        }

    }

}
