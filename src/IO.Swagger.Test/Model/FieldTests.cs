/*
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;using Object = IO.Swagger.Model.Object;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Field
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class FieldTests
    {
        // TODO uncomment below to declare an instance variable for Field
        //private Field instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Field
            //instance = new Field();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Field
        /// </summary>
        [Test]
        public void FieldInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Field
            //Assert.IsInstanceOfType<Field> (instance, "variable 'instance' is a Field");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Test]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Length'
        /// </summary>
        [Test]
        public void LengthTest()
        {
            // TODO unit test for the property 'Length'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'IsRequired'
        /// </summary>
        [Test]
        public void IsRequiredTest()
        {
            // TODO unit test for the property 'IsRequired'
        }
        /// <summary>
        /// Test the property 'IsReadOnly'
        /// </summary>
        [Test]
        public void IsReadOnlyTest()
        {
            // TODO unit test for the property 'IsReadOnly'
        }
        /// <summary>
        /// Test the property 'IsQueryable'
        /// </summary>
        [Test]
        public void IsQueryableTest()
        {
            // TODO unit test for the property 'IsQueryable'
        }
        /// <summary>
        /// Test the property 'IsReference'
        /// </summary>
        [Test]
        public void IsReferenceTest()
        {
            // TODO unit test for the property 'IsReference'
        }
        /// <summary>
        /// Test the property 'ReferenceEntityType'
        /// </summary>
        [Test]
        public void ReferenceEntityTypeTest()
        {
            // TODO unit test for the property 'ReferenceEntityType'
        }
        /// <summary>
        /// Test the property 'IsPickList'
        /// </summary>
        [Test]
        public void IsPickListTest()
        {
            // TODO unit test for the property 'IsPickList'
        }
        /// <summary>
        /// Test the property 'PicklistValues'
        /// </summary>
        [Test]
        public void PicklistValuesTest()
        {
            // TODO unit test for the property 'PicklistValues'
        }
        /// <summary>
        /// Test the property 'PicklistParentValueField'
        /// </summary>
        [Test]
        public void PicklistParentValueFieldTest()
        {
            // TODO unit test for the property 'PicklistParentValueField'
        }
        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Test]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }
        /// <summary>
        /// Test the property 'IsSupportedWebhookField'
        /// </summary>
        [Test]
        public void IsSupportedWebhookFieldTest()
        {
            // TODO unit test for the property 'IsSupportedWebhookField'
        }

    }

}
