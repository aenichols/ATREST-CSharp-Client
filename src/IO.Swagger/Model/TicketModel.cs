/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TicketModel
    /// </summary>
    [DataContract]
    public partial class TicketModel :  IEquatable<TicketModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TicketModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="apiVendorID">apiVendorID.</param>
        /// <param name="assignedResourceID">assignedResourceID.</param>
        /// <param name="assignedResourceRoleID">assignedResourceRoleID.</param>
        /// <param name="billingCodeID">billingCodeID.</param>
        /// <param name="changeApprovalBoard">changeApprovalBoard.</param>
        /// <param name="changeApprovalStatus">changeApprovalStatus.</param>
        /// <param name="changeApprovalType">changeApprovalType.</param>
        /// <param name="changeInfoField1">changeInfoField1.</param>
        /// <param name="changeInfoField2">changeInfoField2.</param>
        /// <param name="changeInfoField3">changeInfoField3.</param>
        /// <param name="changeInfoField4">changeInfoField4.</param>
        /// <param name="changeInfoField5">changeInfoField5.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="companyLocationID">companyLocationID.</param>
        /// <param name="completedByResourceID">completedByResourceID.</param>
        /// <param name="completedDate">completedDate.</param>
        /// <param name="configurationItemID">configurationItemID.</param>
        /// <param name="contactID">contactID.</param>
        /// <param name="contractID">contractID.</param>
        /// <param name="contractServiceBundleID">contractServiceBundleID.</param>
        /// <param name="contractServiceID">contractServiceID.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="createdByContactID">createdByContactID.</param>
        /// <param name="creatorResourceID">creatorResourceID.</param>
        /// <param name="creatorType">creatorType.</param>
        /// <param name="currentServiceThermometerRating">currentServiceThermometerRating.</param>
        /// <param name="description">description.</param>
        /// <param name="dueDateTime">dueDateTime.</param>
        /// <param name="estimatedHours">estimatedHours.</param>
        /// <param name="externalID">externalID.</param>
        /// <param name="firstResponseAssignedResourceID">firstResponseAssignedResourceID.</param>
        /// <param name="firstResponseDateTime">firstResponseDateTime.</param>
        /// <param name="firstResponseDueDateTime">firstResponseDueDateTime.</param>
        /// <param name="firstResponseInitiatingResourceID">firstResponseInitiatingResourceID.</param>
        /// <param name="hoursToBeScheduled">hoursToBeScheduled.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="issueType">issueType.</param>
        /// <param name="lastActivityDate">lastActivityDate.</param>
        /// <param name="lastActivityPersonType">lastActivityPersonType.</param>
        /// <param name="lastActivityResourceID">lastActivityResourceID.</param>
        /// <param name="lastCustomerNotificationDateTime">lastCustomerNotificationDateTime.</param>
        /// <param name="lastCustomerVisibleActivityDateTime">lastCustomerVisibleActivityDateTime.</param>
        /// <param name="lastTrackedModificationDateTime">lastTrackedModificationDateTime.</param>
        /// <param name="monitorID">monitorID.</param>
        /// <param name="monitorTypeID">monitorTypeID.</param>
        /// <param name="opportunityID">opportunityID.</param>
        /// <param name="organizationalLevelAssociationID">organizationalLevelAssociationID.</param>
        /// <param name="previousServiceThermometerRating">previousServiceThermometerRating.</param>
        /// <param name="priority">priority.</param>
        /// <param name="problemTicketId">problemTicketId.</param>
        /// <param name="projectID">projectID.</param>
        /// <param name="purchaseOrderNumber">purchaseOrderNumber.</param>
        /// <param name="queueID">queueID.</param>
        /// <param name="resolution">resolution.</param>
        /// <param name="resolutionPlanDateTime">resolutionPlanDateTime.</param>
        /// <param name="resolutionPlanDueDateTime">resolutionPlanDueDateTime.</param>
        /// <param name="resolvedDateTime">resolvedDateTime.</param>
        /// <param name="resolvedDueDateTime">resolvedDueDateTime.</param>
        /// <param name="rmaStatus">rmaStatus.</param>
        /// <param name="rmaType">rmaType.</param>
        /// <param name="rmmAlertID">rmmAlertID.</param>
        /// <param name="serviceLevelAgreementHasBeenMet">serviceLevelAgreementHasBeenMet.</param>
        /// <param name="serviceLevelAgreementID">serviceLevelAgreementID.</param>
        /// <param name="serviceLevelAgreementPausedNextEventHours">serviceLevelAgreementPausedNextEventHours.</param>
        /// <param name="serviceThermometerTemperature">serviceThermometerTemperature.</param>
        /// <param name="source">source.</param>
        /// <param name="status">status.</param>
        /// <param name="subIssueType">subIssueType.</param>
        /// <param name="ticketCategory">ticketCategory.</param>
        /// <param name="ticketNumber">ticketNumber.</param>
        /// <param name="ticketType">ticketType.</param>
        /// <param name="title">title.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public TicketModel(long? id = default(long?), int? apiVendorID = default(int?), int? assignedResourceID = default(int?), int? assignedResourceRoleID = default(int?), int? billingCodeID = default(int?), int? changeApprovalBoard = default(int?), int? changeApprovalStatus = default(int?), int? changeApprovalType = default(int?), string changeInfoField1 = default(string), string changeInfoField2 = default(string), string changeInfoField3 = default(string), string changeInfoField4 = default(string), string changeInfoField5 = default(string), int? companyID = default(int?), int? companyLocationID = default(int?), int? completedByResourceID = default(int?), DateTime? completedDate = default(DateTime?), int? configurationItemID = default(int?), int? contactID = default(int?), int? contractID = default(int?), long? contractServiceBundleID = default(long?), long? contractServiceID = default(long?), DateTime? createDate = default(DateTime?), int? createdByContactID = default(int?), int? creatorResourceID = default(int?), int? creatorType = default(int?), int? currentServiceThermometerRating = default(int?), string description = default(string), DateTime? dueDateTime = default(DateTime?), double? estimatedHours = default(double?), string externalID = default(string), int? firstResponseAssignedResourceID = default(int?), DateTime? firstResponseDateTime = default(DateTime?), DateTime? firstResponseDueDateTime = default(DateTime?), int? firstResponseInitiatingResourceID = default(int?), double? hoursToBeScheduled = default(double?), int? impersonatorCreatorResourceID = default(int?), int? issueType = default(int?), DateTime? lastActivityDate = default(DateTime?), int? lastActivityPersonType = default(int?), int? lastActivityResourceID = default(int?), DateTime? lastCustomerNotificationDateTime = default(DateTime?), DateTime? lastCustomerVisibleActivityDateTime = default(DateTime?), DateTime? lastTrackedModificationDateTime = default(DateTime?), long? monitorID = default(long?), int? monitorTypeID = default(int?), int? opportunityID = default(int?), int? organizationalLevelAssociationID = default(int?), int? previousServiceThermometerRating = default(int?), int? priority = default(int?), int? problemTicketId = default(int?), int? projectID = default(int?), string purchaseOrderNumber = default(string), int? queueID = default(int?), string resolution = default(string), DateTime? resolutionPlanDateTime = default(DateTime?), DateTime? resolutionPlanDueDateTime = default(DateTime?), DateTime? resolvedDateTime = default(DateTime?), DateTime? resolvedDueDateTime = default(DateTime?), int? rmaStatus = default(int?), int? rmaType = default(int?), string rmmAlertID = default(string), bool? serviceLevelAgreementHasBeenMet = default(bool?), int? serviceLevelAgreementID = default(int?), double? serviceLevelAgreementPausedNextEventHours = default(double?), int? serviceThermometerTemperature = default(int?), int? source = default(int?), int? status = default(int?), int? subIssueType = default(int?), int? ticketCategory = default(int?), string ticketNumber = default(string), int? ticketType = default(int?), string title = default(string), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.ApiVendorID = apiVendorID;
            this.AssignedResourceID = assignedResourceID;
            this.AssignedResourceRoleID = assignedResourceRoleID;
            this.BillingCodeID = billingCodeID;
            this.ChangeApprovalBoard = changeApprovalBoard;
            this.ChangeApprovalStatus = changeApprovalStatus;
            this.ChangeApprovalType = changeApprovalType;
            this.ChangeInfoField1 = changeInfoField1;
            this.ChangeInfoField2 = changeInfoField2;
            this.ChangeInfoField3 = changeInfoField3;
            this.ChangeInfoField4 = changeInfoField4;
            this.ChangeInfoField5 = changeInfoField5;
            this.CompanyID = companyID;
            this.CompanyLocationID = companyLocationID;
            this.CompletedByResourceID = completedByResourceID;
            this.CompletedDate = completedDate;
            this.ConfigurationItemID = configurationItemID;
            this.ContactID = contactID;
            this.ContractID = contractID;
            this.ContractServiceBundleID = contractServiceBundleID;
            this.ContractServiceID = contractServiceID;
            this.CreateDate = createDate;
            this.CreatedByContactID = createdByContactID;
            this.CreatorResourceID = creatorResourceID;
            this.CreatorType = creatorType;
            this.CurrentServiceThermometerRating = currentServiceThermometerRating;
            this.Description = description;
            this.DueDateTime = dueDateTime;
            this.EstimatedHours = estimatedHours;
            this.ExternalID = externalID;
            this.FirstResponseAssignedResourceID = firstResponseAssignedResourceID;
            this.FirstResponseDateTime = firstResponseDateTime;
            this.FirstResponseDueDateTime = firstResponseDueDateTime;
            this.FirstResponseInitiatingResourceID = firstResponseInitiatingResourceID;
            this.HoursToBeScheduled = hoursToBeScheduled;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.IssueType = issueType;
            this.LastActivityDate = lastActivityDate;
            this.LastActivityPersonType = lastActivityPersonType;
            this.LastActivityResourceID = lastActivityResourceID;
            this.LastCustomerNotificationDateTime = lastCustomerNotificationDateTime;
            this.LastCustomerVisibleActivityDateTime = lastCustomerVisibleActivityDateTime;
            this.LastTrackedModificationDateTime = lastTrackedModificationDateTime;
            this.MonitorID = monitorID;
            this.MonitorTypeID = monitorTypeID;
            this.OpportunityID = opportunityID;
            this.OrganizationalLevelAssociationID = organizationalLevelAssociationID;
            this.PreviousServiceThermometerRating = previousServiceThermometerRating;
            this.Priority = priority;
            this.ProblemTicketId = problemTicketId;
            this.ProjectID = projectID;
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.QueueID = queueID;
            this.Resolution = resolution;
            this.ResolutionPlanDateTime = resolutionPlanDateTime;
            this.ResolutionPlanDueDateTime = resolutionPlanDueDateTime;
            this.ResolvedDateTime = resolvedDateTime;
            this.ResolvedDueDateTime = resolvedDueDateTime;
            this.RmaStatus = rmaStatus;
            this.RmaType = rmaType;
            this.RmmAlertID = rmmAlertID;
            this.ServiceLevelAgreementHasBeenMet = serviceLevelAgreementHasBeenMet;
            this.ServiceLevelAgreementID = serviceLevelAgreementID;
            this.ServiceLevelAgreementPausedNextEventHours = serviceLevelAgreementPausedNextEventHours;
            this.ServiceThermometerTemperature = serviceThermometerTemperature;
            this.Source = source;
            this.Status = status;
            this.SubIssueType = subIssueType;
            this.TicketCategory = ticketCategory;
            this.TicketNumber = ticketNumber;
            this.TicketType = ticketType;
            this.Title = title;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID", EmitDefaultValue=false)]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceID
        /// </summary>
        [DataMember(Name="assignedResourceID", EmitDefaultValue=false)]
        public int? AssignedResourceID { get; set; }

        /// <summary>
        /// Gets or Sets AssignedResourceRoleID
        /// </summary>
        [DataMember(Name="assignedResourceRoleID", EmitDefaultValue=false)]
        public int? AssignedResourceRoleID { get; set; }

        /// <summary>
        /// Gets or Sets BillingCodeID
        /// </summary>
        [DataMember(Name="billingCodeID", EmitDefaultValue=false)]
        public int? BillingCodeID { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalBoard
        /// </summary>
        [DataMember(Name="changeApprovalBoard", EmitDefaultValue=false)]
        public int? ChangeApprovalBoard { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalStatus
        /// </summary>
        [DataMember(Name="changeApprovalStatus", EmitDefaultValue=false)]
        public int? ChangeApprovalStatus { get; set; }

        /// <summary>
        /// Gets or Sets ChangeApprovalType
        /// </summary>
        [DataMember(Name="changeApprovalType", EmitDefaultValue=false)]
        public int? ChangeApprovalType { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField1
        /// </summary>
        [DataMember(Name="changeInfoField1", EmitDefaultValue=false)]
        public string ChangeInfoField1 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField2
        /// </summary>
        [DataMember(Name="changeInfoField2", EmitDefaultValue=false)]
        public string ChangeInfoField2 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField3
        /// </summary>
        [DataMember(Name="changeInfoField3", EmitDefaultValue=false)]
        public string ChangeInfoField3 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField4
        /// </summary>
        [DataMember(Name="changeInfoField4", EmitDefaultValue=false)]
        public string ChangeInfoField4 { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInfoField5
        /// </summary>
        [DataMember(Name="changeInfoField5", EmitDefaultValue=false)]
        public string ChangeInfoField5 { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLocationID
        /// </summary>
        [DataMember(Name="companyLocationID", EmitDefaultValue=false)]
        public int? CompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedByResourceID
        /// </summary>
        [DataMember(Name="completedByResourceID", EmitDefaultValue=false)]
        public int? CompletedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDate
        /// </summary>
        [DataMember(Name="completedDate", EmitDefaultValue=false)]
        public DateTime? CompletedDate { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationItemID
        /// </summary>
        [DataMember(Name="configurationItemID", EmitDefaultValue=false)]
        public int? ConfigurationItemID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="contactID", EmitDefaultValue=false)]
        public int? ContactID { get; set; }

        /// <summary>
        /// Gets or Sets ContractID
        /// </summary>
        [DataMember(Name="contractID", EmitDefaultValue=false)]
        public int? ContractID { get; set; }

        /// <summary>
        /// Gets or Sets ContractServiceBundleID
        /// </summary>
        [DataMember(Name="contractServiceBundleID", EmitDefaultValue=false)]
        public long? ContractServiceBundleID { get; set; }

        /// <summary>
        /// Gets or Sets ContractServiceID
        /// </summary>
        [DataMember(Name="contractServiceID", EmitDefaultValue=false)]
        public long? ContractServiceID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByContactID
        /// </summary>
        [DataMember(Name="createdByContactID", EmitDefaultValue=false)]
        public int? CreatedByContactID { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID", EmitDefaultValue=false)]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CreatorType
        /// </summary>
        [DataMember(Name="creatorType", EmitDefaultValue=false)]
        public int? CreatorType { get; set; }

        /// <summary>
        /// Gets or Sets CurrentServiceThermometerRating
        /// </summary>
        [DataMember(Name="currentServiceThermometerRating", EmitDefaultValue=false)]
        public int? CurrentServiceThermometerRating { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DueDateTime
        /// </summary>
        [DataMember(Name="dueDateTime", EmitDefaultValue=false)]
        public DateTime? DueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedHours
        /// </summary>
        [DataMember(Name="estimatedHours", EmitDefaultValue=false)]
        public double? EstimatedHours { get; set; }

        /// <summary>
        /// Gets or Sets ExternalID
        /// </summary>
        [DataMember(Name="externalID", EmitDefaultValue=false)]
        public string ExternalID { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseAssignedResourceID
        /// </summary>
        [DataMember(Name="firstResponseAssignedResourceID", EmitDefaultValue=false)]
        public int? FirstResponseAssignedResourceID { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseDateTime
        /// </summary>
        [DataMember(Name="firstResponseDateTime", EmitDefaultValue=false)]
        public DateTime? FirstResponseDateTime { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseDueDateTime
        /// </summary>
        [DataMember(Name="firstResponseDueDateTime", EmitDefaultValue=false)]
        public DateTime? FirstResponseDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponseInitiatingResourceID
        /// </summary>
        [DataMember(Name="firstResponseInitiatingResourceID", EmitDefaultValue=false)]
        public int? FirstResponseInitiatingResourceID { get; set; }

        /// <summary>
        /// Gets or Sets HoursToBeScheduled
        /// </summary>
        [DataMember(Name="hoursToBeScheduled", EmitDefaultValue=false)]
        public double? HoursToBeScheduled { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets IssueType
        /// </summary>
        [DataMember(Name="issueType", EmitDefaultValue=false)]
        public int? IssueType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate", EmitDefaultValue=false)]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityPersonType
        /// </summary>
        [DataMember(Name="lastActivityPersonType", EmitDefaultValue=false)]
        public int? LastActivityPersonType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityResourceID
        /// </summary>
        [DataMember(Name="lastActivityResourceID", EmitDefaultValue=false)]
        public int? LastActivityResourceID { get; set; }

        /// <summary>
        /// Gets or Sets LastCustomerNotificationDateTime
        /// </summary>
        [DataMember(Name="lastCustomerNotificationDateTime", EmitDefaultValue=false)]
        public DateTime? LastCustomerNotificationDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastCustomerVisibleActivityDateTime
        /// </summary>
        [DataMember(Name="lastCustomerVisibleActivityDateTime", EmitDefaultValue=false)]
        public DateTime? LastCustomerVisibleActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastTrackedModificationDateTime
        /// </summary>
        [DataMember(Name="lastTrackedModificationDateTime", EmitDefaultValue=false)]
        public DateTime? LastTrackedModificationDateTime { get; set; }

        /// <summary>
        /// Gets or Sets MonitorID
        /// </summary>
        [DataMember(Name="monitorID", EmitDefaultValue=false)]
        public long? MonitorID { get; set; }

        /// <summary>
        /// Gets or Sets MonitorTypeID
        /// </summary>
        [DataMember(Name="monitorTypeID", EmitDefaultValue=false)]
        public int? MonitorTypeID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID", EmitDefaultValue=false)]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID", EmitDefaultValue=false)]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets PreviousServiceThermometerRating
        /// </summary>
        [DataMember(Name="previousServiceThermometerRating", EmitDefaultValue=false)]
        public int? PreviousServiceThermometerRating { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority", EmitDefaultValue=false)]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets or Sets ProblemTicketId
        /// </summary>
        [DataMember(Name="problemTicketId", EmitDefaultValue=false)]
        public int? ProblemTicketId { get; set; }

        /// <summary>
        /// Gets or Sets ProjectID
        /// </summary>
        [DataMember(Name="projectID", EmitDefaultValue=false)]
        public int? ProjectID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber", EmitDefaultValue=false)]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets QueueID
        /// </summary>
        [DataMember(Name="queueID", EmitDefaultValue=false)]
        public int? QueueID { get; set; }

        /// <summary>
        /// Gets or Sets Resolution
        /// </summary>
        [DataMember(Name="resolution", EmitDefaultValue=false)]
        public string Resolution { get; set; }

        /// <summary>
        /// Gets or Sets ResolutionPlanDateTime
        /// </summary>
        [DataMember(Name="resolutionPlanDateTime", EmitDefaultValue=false)]
        public DateTime? ResolutionPlanDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolutionPlanDueDateTime
        /// </summary>
        [DataMember(Name="resolutionPlanDueDateTime", EmitDefaultValue=false)]
        public DateTime? ResolutionPlanDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedDateTime
        /// </summary>
        [DataMember(Name="resolvedDateTime", EmitDefaultValue=false)]
        public DateTime? ResolvedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedDueDateTime
        /// </summary>
        [DataMember(Name="resolvedDueDateTime", EmitDefaultValue=false)]
        public DateTime? ResolvedDueDateTime { get; set; }

        /// <summary>
        /// Gets or Sets RmaStatus
        /// </summary>
        [DataMember(Name="rmaStatus", EmitDefaultValue=false)]
        public int? RmaStatus { get; set; }

        /// <summary>
        /// Gets or Sets RmaType
        /// </summary>
        [DataMember(Name="rmaType", EmitDefaultValue=false)]
        public int? RmaType { get; set; }

        /// <summary>
        /// Gets or Sets RmmAlertID
        /// </summary>
        [DataMember(Name="rmmAlertID", EmitDefaultValue=false)]
        public string RmmAlertID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementHasBeenMet
        /// </summary>
        [DataMember(Name="serviceLevelAgreementHasBeenMet", EmitDefaultValue=false)]
        public bool? ServiceLevelAgreementHasBeenMet { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementID
        /// </summary>
        [DataMember(Name="serviceLevelAgreementID", EmitDefaultValue=false)]
        public int? ServiceLevelAgreementID { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementPausedNextEventHours
        /// </summary>
        [DataMember(Name="serviceLevelAgreementPausedNextEventHours", EmitDefaultValue=false)]
        public double? ServiceLevelAgreementPausedNextEventHours { get; set; }

        /// <summary>
        /// Gets or Sets ServiceThermometerTemperature
        /// </summary>
        [DataMember(Name="serviceThermometerTemperature", EmitDefaultValue=false)]
        public int? ServiceThermometerTemperature { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name="source", EmitDefaultValue=false)]
        public int? Source { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets SubIssueType
        /// </summary>
        [DataMember(Name="subIssueType", EmitDefaultValue=false)]
        public int? SubIssueType { get; set; }

        /// <summary>
        /// Gets or Sets TicketCategory
        /// </summary>
        [DataMember(Name="ticketCategory", EmitDefaultValue=false)]
        public int? TicketCategory { get; set; }

        /// <summary>
        /// Gets or Sets TicketNumber
        /// </summary>
        [DataMember(Name="ticketNumber", EmitDefaultValue=false)]
        public string TicketNumber { get; set; }

        /// <summary>
        /// Gets or Sets TicketType
        /// </summary>
        [DataMember(Name="ticketType", EmitDefaultValue=false)]
        public int? TicketType { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TicketModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  AssignedResourceID: ").Append(AssignedResourceID).Append("\n");
            sb.Append("  AssignedResourceRoleID: ").Append(AssignedResourceRoleID).Append("\n");
            sb.Append("  BillingCodeID: ").Append(BillingCodeID).Append("\n");
            sb.Append("  ChangeApprovalBoard: ").Append(ChangeApprovalBoard).Append("\n");
            sb.Append("  ChangeApprovalStatus: ").Append(ChangeApprovalStatus).Append("\n");
            sb.Append("  ChangeApprovalType: ").Append(ChangeApprovalType).Append("\n");
            sb.Append("  ChangeInfoField1: ").Append(ChangeInfoField1).Append("\n");
            sb.Append("  ChangeInfoField2: ").Append(ChangeInfoField2).Append("\n");
            sb.Append("  ChangeInfoField3: ").Append(ChangeInfoField3).Append("\n");
            sb.Append("  ChangeInfoField4: ").Append(ChangeInfoField4).Append("\n");
            sb.Append("  ChangeInfoField5: ").Append(ChangeInfoField5).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyLocationID: ").Append(CompanyLocationID).Append("\n");
            sb.Append("  CompletedByResourceID: ").Append(CompletedByResourceID).Append("\n");
            sb.Append("  CompletedDate: ").Append(CompletedDate).Append("\n");
            sb.Append("  ConfigurationItemID: ").Append(ConfigurationItemID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  ContractID: ").Append(ContractID).Append("\n");
            sb.Append("  ContractServiceBundleID: ").Append(ContractServiceBundleID).Append("\n");
            sb.Append("  ContractServiceID: ").Append(ContractServiceID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatedByContactID: ").Append(CreatedByContactID).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  CreatorType: ").Append(CreatorType).Append("\n");
            sb.Append("  CurrentServiceThermometerRating: ").Append(CurrentServiceThermometerRating).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DueDateTime: ").Append(DueDateTime).Append("\n");
            sb.Append("  EstimatedHours: ").Append(EstimatedHours).Append("\n");
            sb.Append("  ExternalID: ").Append(ExternalID).Append("\n");
            sb.Append("  FirstResponseAssignedResourceID: ").Append(FirstResponseAssignedResourceID).Append("\n");
            sb.Append("  FirstResponseDateTime: ").Append(FirstResponseDateTime).Append("\n");
            sb.Append("  FirstResponseDueDateTime: ").Append(FirstResponseDueDateTime).Append("\n");
            sb.Append("  FirstResponseInitiatingResourceID: ").Append(FirstResponseInitiatingResourceID).Append("\n");
            sb.Append("  HoursToBeScheduled: ").Append(HoursToBeScheduled).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  IssueType: ").Append(IssueType).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastActivityPersonType: ").Append(LastActivityPersonType).Append("\n");
            sb.Append("  LastActivityResourceID: ").Append(LastActivityResourceID).Append("\n");
            sb.Append("  LastCustomerNotificationDateTime: ").Append(LastCustomerNotificationDateTime).Append("\n");
            sb.Append("  LastCustomerVisibleActivityDateTime: ").Append(LastCustomerVisibleActivityDateTime).Append("\n");
            sb.Append("  LastTrackedModificationDateTime: ").Append(LastTrackedModificationDateTime).Append("\n");
            sb.Append("  MonitorID: ").Append(MonitorID).Append("\n");
            sb.Append("  MonitorTypeID: ").Append(MonitorTypeID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  PreviousServiceThermometerRating: ").Append(PreviousServiceThermometerRating).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  ProblemTicketId: ").Append(ProblemTicketId).Append("\n");
            sb.Append("  ProjectID: ").Append(ProjectID).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  QueueID: ").Append(QueueID).Append("\n");
            sb.Append("  Resolution: ").Append(Resolution).Append("\n");
            sb.Append("  ResolutionPlanDateTime: ").Append(ResolutionPlanDateTime).Append("\n");
            sb.Append("  ResolutionPlanDueDateTime: ").Append(ResolutionPlanDueDateTime).Append("\n");
            sb.Append("  ResolvedDateTime: ").Append(ResolvedDateTime).Append("\n");
            sb.Append("  ResolvedDueDateTime: ").Append(ResolvedDueDateTime).Append("\n");
            sb.Append("  RmaStatus: ").Append(RmaStatus).Append("\n");
            sb.Append("  RmaType: ").Append(RmaType).Append("\n");
            sb.Append("  RmmAlertID: ").Append(RmmAlertID).Append("\n");
            sb.Append("  ServiceLevelAgreementHasBeenMet: ").Append(ServiceLevelAgreementHasBeenMet).Append("\n");
            sb.Append("  ServiceLevelAgreementID: ").Append(ServiceLevelAgreementID).Append("\n");
            sb.Append("  ServiceLevelAgreementPausedNextEventHours: ").Append(ServiceLevelAgreementPausedNextEventHours).Append("\n");
            sb.Append("  ServiceThermometerTemperature: ").Append(ServiceThermometerTemperature).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SubIssueType: ").Append(SubIssueType).Append("\n");
            sb.Append("  TicketCategory: ").Append(TicketCategory).Append("\n");
            sb.Append("  TicketNumber: ").Append(TicketNumber).Append("\n");
            sb.Append("  TicketType: ").Append(TicketType).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TicketModel);
        }

        /// <summary>
        /// Returns true if TicketModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TicketModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TicketModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ApiVendorID == input.ApiVendorID ||
                    (this.ApiVendorID != null &&
                    this.ApiVendorID.Equals(input.ApiVendorID))
                ) && 
                (
                    this.AssignedResourceID == input.AssignedResourceID ||
                    (this.AssignedResourceID != null &&
                    this.AssignedResourceID.Equals(input.AssignedResourceID))
                ) && 
                (
                    this.AssignedResourceRoleID == input.AssignedResourceRoleID ||
                    (this.AssignedResourceRoleID != null &&
                    this.AssignedResourceRoleID.Equals(input.AssignedResourceRoleID))
                ) && 
                (
                    this.BillingCodeID == input.BillingCodeID ||
                    (this.BillingCodeID != null &&
                    this.BillingCodeID.Equals(input.BillingCodeID))
                ) && 
                (
                    this.ChangeApprovalBoard == input.ChangeApprovalBoard ||
                    (this.ChangeApprovalBoard != null &&
                    this.ChangeApprovalBoard.Equals(input.ChangeApprovalBoard))
                ) && 
                (
                    this.ChangeApprovalStatus == input.ChangeApprovalStatus ||
                    (this.ChangeApprovalStatus != null &&
                    this.ChangeApprovalStatus.Equals(input.ChangeApprovalStatus))
                ) && 
                (
                    this.ChangeApprovalType == input.ChangeApprovalType ||
                    (this.ChangeApprovalType != null &&
                    this.ChangeApprovalType.Equals(input.ChangeApprovalType))
                ) && 
                (
                    this.ChangeInfoField1 == input.ChangeInfoField1 ||
                    (this.ChangeInfoField1 != null &&
                    this.ChangeInfoField1.Equals(input.ChangeInfoField1))
                ) && 
                (
                    this.ChangeInfoField2 == input.ChangeInfoField2 ||
                    (this.ChangeInfoField2 != null &&
                    this.ChangeInfoField2.Equals(input.ChangeInfoField2))
                ) && 
                (
                    this.ChangeInfoField3 == input.ChangeInfoField3 ||
                    (this.ChangeInfoField3 != null &&
                    this.ChangeInfoField3.Equals(input.ChangeInfoField3))
                ) && 
                (
                    this.ChangeInfoField4 == input.ChangeInfoField4 ||
                    (this.ChangeInfoField4 != null &&
                    this.ChangeInfoField4.Equals(input.ChangeInfoField4))
                ) && 
                (
                    this.ChangeInfoField5 == input.ChangeInfoField5 ||
                    (this.ChangeInfoField5 != null &&
                    this.ChangeInfoField5.Equals(input.ChangeInfoField5))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.CompanyLocationID == input.CompanyLocationID ||
                    (this.CompanyLocationID != null &&
                    this.CompanyLocationID.Equals(input.CompanyLocationID))
                ) && 
                (
                    this.CompletedByResourceID == input.CompletedByResourceID ||
                    (this.CompletedByResourceID != null &&
                    this.CompletedByResourceID.Equals(input.CompletedByResourceID))
                ) && 
                (
                    this.CompletedDate == input.CompletedDate ||
                    (this.CompletedDate != null &&
                    this.CompletedDate.Equals(input.CompletedDate))
                ) && 
                (
                    this.ConfigurationItemID == input.ConfigurationItemID ||
                    (this.ConfigurationItemID != null &&
                    this.ConfigurationItemID.Equals(input.ConfigurationItemID))
                ) && 
                (
                    this.ContactID == input.ContactID ||
                    (this.ContactID != null &&
                    this.ContactID.Equals(input.ContactID))
                ) && 
                (
                    this.ContractID == input.ContractID ||
                    (this.ContractID != null &&
                    this.ContractID.Equals(input.ContractID))
                ) && 
                (
                    this.ContractServiceBundleID == input.ContractServiceBundleID ||
                    (this.ContractServiceBundleID != null &&
                    this.ContractServiceBundleID.Equals(input.ContractServiceBundleID))
                ) && 
                (
                    this.ContractServiceID == input.ContractServiceID ||
                    (this.ContractServiceID != null &&
                    this.ContractServiceID.Equals(input.ContractServiceID))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.CreatedByContactID == input.CreatedByContactID ||
                    (this.CreatedByContactID != null &&
                    this.CreatedByContactID.Equals(input.CreatedByContactID))
                ) && 
                (
                    this.CreatorResourceID == input.CreatorResourceID ||
                    (this.CreatorResourceID != null &&
                    this.CreatorResourceID.Equals(input.CreatorResourceID))
                ) && 
                (
                    this.CreatorType == input.CreatorType ||
                    (this.CreatorType != null &&
                    this.CreatorType.Equals(input.CreatorType))
                ) && 
                (
                    this.CurrentServiceThermometerRating == input.CurrentServiceThermometerRating ||
                    (this.CurrentServiceThermometerRating != null &&
                    this.CurrentServiceThermometerRating.Equals(input.CurrentServiceThermometerRating))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.DueDateTime == input.DueDateTime ||
                    (this.DueDateTime != null &&
                    this.DueDateTime.Equals(input.DueDateTime))
                ) && 
                (
                    this.EstimatedHours == input.EstimatedHours ||
                    (this.EstimatedHours != null &&
                    this.EstimatedHours.Equals(input.EstimatedHours))
                ) && 
                (
                    this.ExternalID == input.ExternalID ||
                    (this.ExternalID != null &&
                    this.ExternalID.Equals(input.ExternalID))
                ) && 
                (
                    this.FirstResponseAssignedResourceID == input.FirstResponseAssignedResourceID ||
                    (this.FirstResponseAssignedResourceID != null &&
                    this.FirstResponseAssignedResourceID.Equals(input.FirstResponseAssignedResourceID))
                ) && 
                (
                    this.FirstResponseDateTime == input.FirstResponseDateTime ||
                    (this.FirstResponseDateTime != null &&
                    this.FirstResponseDateTime.Equals(input.FirstResponseDateTime))
                ) && 
                (
                    this.FirstResponseDueDateTime == input.FirstResponseDueDateTime ||
                    (this.FirstResponseDueDateTime != null &&
                    this.FirstResponseDueDateTime.Equals(input.FirstResponseDueDateTime))
                ) && 
                (
                    this.FirstResponseInitiatingResourceID == input.FirstResponseInitiatingResourceID ||
                    (this.FirstResponseInitiatingResourceID != null &&
                    this.FirstResponseInitiatingResourceID.Equals(input.FirstResponseInitiatingResourceID))
                ) && 
                (
                    this.HoursToBeScheduled == input.HoursToBeScheduled ||
                    (this.HoursToBeScheduled != null &&
                    this.HoursToBeScheduled.Equals(input.HoursToBeScheduled))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.IssueType == input.IssueType ||
                    (this.IssueType != null &&
                    this.IssueType.Equals(input.IssueType))
                ) && 
                (
                    this.LastActivityDate == input.LastActivityDate ||
                    (this.LastActivityDate != null &&
                    this.LastActivityDate.Equals(input.LastActivityDate))
                ) && 
                (
                    this.LastActivityPersonType == input.LastActivityPersonType ||
                    (this.LastActivityPersonType != null &&
                    this.LastActivityPersonType.Equals(input.LastActivityPersonType))
                ) && 
                (
                    this.LastActivityResourceID == input.LastActivityResourceID ||
                    (this.LastActivityResourceID != null &&
                    this.LastActivityResourceID.Equals(input.LastActivityResourceID))
                ) && 
                (
                    this.LastCustomerNotificationDateTime == input.LastCustomerNotificationDateTime ||
                    (this.LastCustomerNotificationDateTime != null &&
                    this.LastCustomerNotificationDateTime.Equals(input.LastCustomerNotificationDateTime))
                ) && 
                (
                    this.LastCustomerVisibleActivityDateTime == input.LastCustomerVisibleActivityDateTime ||
                    (this.LastCustomerVisibleActivityDateTime != null &&
                    this.LastCustomerVisibleActivityDateTime.Equals(input.LastCustomerVisibleActivityDateTime))
                ) && 
                (
                    this.LastTrackedModificationDateTime == input.LastTrackedModificationDateTime ||
                    (this.LastTrackedModificationDateTime != null &&
                    this.LastTrackedModificationDateTime.Equals(input.LastTrackedModificationDateTime))
                ) && 
                (
                    this.MonitorID == input.MonitorID ||
                    (this.MonitorID != null &&
                    this.MonitorID.Equals(input.MonitorID))
                ) && 
                (
                    this.MonitorTypeID == input.MonitorTypeID ||
                    (this.MonitorTypeID != null &&
                    this.MonitorTypeID.Equals(input.MonitorTypeID))
                ) && 
                (
                    this.OpportunityID == input.OpportunityID ||
                    (this.OpportunityID != null &&
                    this.OpportunityID.Equals(input.OpportunityID))
                ) && 
                (
                    this.OrganizationalLevelAssociationID == input.OrganizationalLevelAssociationID ||
                    (this.OrganizationalLevelAssociationID != null &&
                    this.OrganizationalLevelAssociationID.Equals(input.OrganizationalLevelAssociationID))
                ) && 
                (
                    this.PreviousServiceThermometerRating == input.PreviousServiceThermometerRating ||
                    (this.PreviousServiceThermometerRating != null &&
                    this.PreviousServiceThermometerRating.Equals(input.PreviousServiceThermometerRating))
                ) && 
                (
                    this.Priority == input.Priority ||
                    (this.Priority != null &&
                    this.Priority.Equals(input.Priority))
                ) && 
                (
                    this.ProblemTicketId == input.ProblemTicketId ||
                    (this.ProblemTicketId != null &&
                    this.ProblemTicketId.Equals(input.ProblemTicketId))
                ) && 
                (
                    this.ProjectID == input.ProjectID ||
                    (this.ProjectID != null &&
                    this.ProjectID.Equals(input.ProjectID))
                ) && 
                (
                    this.PurchaseOrderNumber == input.PurchaseOrderNumber ||
                    (this.PurchaseOrderNumber != null &&
                    this.PurchaseOrderNumber.Equals(input.PurchaseOrderNumber))
                ) && 
                (
                    this.QueueID == input.QueueID ||
                    (this.QueueID != null &&
                    this.QueueID.Equals(input.QueueID))
                ) && 
                (
                    this.Resolution == input.Resolution ||
                    (this.Resolution != null &&
                    this.Resolution.Equals(input.Resolution))
                ) && 
                (
                    this.ResolutionPlanDateTime == input.ResolutionPlanDateTime ||
                    (this.ResolutionPlanDateTime != null &&
                    this.ResolutionPlanDateTime.Equals(input.ResolutionPlanDateTime))
                ) && 
                (
                    this.ResolutionPlanDueDateTime == input.ResolutionPlanDueDateTime ||
                    (this.ResolutionPlanDueDateTime != null &&
                    this.ResolutionPlanDueDateTime.Equals(input.ResolutionPlanDueDateTime))
                ) && 
                (
                    this.ResolvedDateTime == input.ResolvedDateTime ||
                    (this.ResolvedDateTime != null &&
                    this.ResolvedDateTime.Equals(input.ResolvedDateTime))
                ) && 
                (
                    this.ResolvedDueDateTime == input.ResolvedDueDateTime ||
                    (this.ResolvedDueDateTime != null &&
                    this.ResolvedDueDateTime.Equals(input.ResolvedDueDateTime))
                ) && 
                (
                    this.RmaStatus == input.RmaStatus ||
                    (this.RmaStatus != null &&
                    this.RmaStatus.Equals(input.RmaStatus))
                ) && 
                (
                    this.RmaType == input.RmaType ||
                    (this.RmaType != null &&
                    this.RmaType.Equals(input.RmaType))
                ) && 
                (
                    this.RmmAlertID == input.RmmAlertID ||
                    (this.RmmAlertID != null &&
                    this.RmmAlertID.Equals(input.RmmAlertID))
                ) && 
                (
                    this.ServiceLevelAgreementHasBeenMet == input.ServiceLevelAgreementHasBeenMet ||
                    (this.ServiceLevelAgreementHasBeenMet != null &&
                    this.ServiceLevelAgreementHasBeenMet.Equals(input.ServiceLevelAgreementHasBeenMet))
                ) && 
                (
                    this.ServiceLevelAgreementID == input.ServiceLevelAgreementID ||
                    (this.ServiceLevelAgreementID != null &&
                    this.ServiceLevelAgreementID.Equals(input.ServiceLevelAgreementID))
                ) && 
                (
                    this.ServiceLevelAgreementPausedNextEventHours == input.ServiceLevelAgreementPausedNextEventHours ||
                    (this.ServiceLevelAgreementPausedNextEventHours != null &&
                    this.ServiceLevelAgreementPausedNextEventHours.Equals(input.ServiceLevelAgreementPausedNextEventHours))
                ) && 
                (
                    this.ServiceThermometerTemperature == input.ServiceThermometerTemperature ||
                    (this.ServiceThermometerTemperature != null &&
                    this.ServiceThermometerTemperature.Equals(input.ServiceThermometerTemperature))
                ) && 
                (
                    this.Source == input.Source ||
                    (this.Source != null &&
                    this.Source.Equals(input.Source))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.SubIssueType == input.SubIssueType ||
                    (this.SubIssueType != null &&
                    this.SubIssueType.Equals(input.SubIssueType))
                ) && 
                (
                    this.TicketCategory == input.TicketCategory ||
                    (this.TicketCategory != null &&
                    this.TicketCategory.Equals(input.TicketCategory))
                ) && 
                (
                    this.TicketNumber == input.TicketNumber ||
                    (this.TicketNumber != null &&
                    this.TicketNumber.Equals(input.TicketNumber))
                ) && 
                (
                    this.TicketType == input.TicketType ||
                    (this.TicketType != null &&
                    this.TicketType.Equals(input.TicketType))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ApiVendorID != null)
                    hashCode = hashCode * 59 + this.ApiVendorID.GetHashCode();
                if (this.AssignedResourceID != null)
                    hashCode = hashCode * 59 + this.AssignedResourceID.GetHashCode();
                if (this.AssignedResourceRoleID != null)
                    hashCode = hashCode * 59 + this.AssignedResourceRoleID.GetHashCode();
                if (this.BillingCodeID != null)
                    hashCode = hashCode * 59 + this.BillingCodeID.GetHashCode();
                if (this.ChangeApprovalBoard != null)
                    hashCode = hashCode * 59 + this.ChangeApprovalBoard.GetHashCode();
                if (this.ChangeApprovalStatus != null)
                    hashCode = hashCode * 59 + this.ChangeApprovalStatus.GetHashCode();
                if (this.ChangeApprovalType != null)
                    hashCode = hashCode * 59 + this.ChangeApprovalType.GetHashCode();
                if (this.ChangeInfoField1 != null)
                    hashCode = hashCode * 59 + this.ChangeInfoField1.GetHashCode();
                if (this.ChangeInfoField2 != null)
                    hashCode = hashCode * 59 + this.ChangeInfoField2.GetHashCode();
                if (this.ChangeInfoField3 != null)
                    hashCode = hashCode * 59 + this.ChangeInfoField3.GetHashCode();
                if (this.ChangeInfoField4 != null)
                    hashCode = hashCode * 59 + this.ChangeInfoField4.GetHashCode();
                if (this.ChangeInfoField5 != null)
                    hashCode = hashCode * 59 + this.ChangeInfoField5.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.CompanyLocationID != null)
                    hashCode = hashCode * 59 + this.CompanyLocationID.GetHashCode();
                if (this.CompletedByResourceID != null)
                    hashCode = hashCode * 59 + this.CompletedByResourceID.GetHashCode();
                if (this.CompletedDate != null)
                    hashCode = hashCode * 59 + this.CompletedDate.GetHashCode();
                if (this.ConfigurationItemID != null)
                    hashCode = hashCode * 59 + this.ConfigurationItemID.GetHashCode();
                if (this.ContactID != null)
                    hashCode = hashCode * 59 + this.ContactID.GetHashCode();
                if (this.ContractID != null)
                    hashCode = hashCode * 59 + this.ContractID.GetHashCode();
                if (this.ContractServiceBundleID != null)
                    hashCode = hashCode * 59 + this.ContractServiceBundleID.GetHashCode();
                if (this.ContractServiceID != null)
                    hashCode = hashCode * 59 + this.ContractServiceID.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.CreatedByContactID != null)
                    hashCode = hashCode * 59 + this.CreatedByContactID.GetHashCode();
                if (this.CreatorResourceID != null)
                    hashCode = hashCode * 59 + this.CreatorResourceID.GetHashCode();
                if (this.CreatorType != null)
                    hashCode = hashCode * 59 + this.CreatorType.GetHashCode();
                if (this.CurrentServiceThermometerRating != null)
                    hashCode = hashCode * 59 + this.CurrentServiceThermometerRating.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.DueDateTime != null)
                    hashCode = hashCode * 59 + this.DueDateTime.GetHashCode();
                if (this.EstimatedHours != null)
                    hashCode = hashCode * 59 + this.EstimatedHours.GetHashCode();
                if (this.ExternalID != null)
                    hashCode = hashCode * 59 + this.ExternalID.GetHashCode();
                if (this.FirstResponseAssignedResourceID != null)
                    hashCode = hashCode * 59 + this.FirstResponseAssignedResourceID.GetHashCode();
                if (this.FirstResponseDateTime != null)
                    hashCode = hashCode * 59 + this.FirstResponseDateTime.GetHashCode();
                if (this.FirstResponseDueDateTime != null)
                    hashCode = hashCode * 59 + this.FirstResponseDueDateTime.GetHashCode();
                if (this.FirstResponseInitiatingResourceID != null)
                    hashCode = hashCode * 59 + this.FirstResponseInitiatingResourceID.GetHashCode();
                if (this.HoursToBeScheduled != null)
                    hashCode = hashCode * 59 + this.HoursToBeScheduled.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.IssueType != null)
                    hashCode = hashCode * 59 + this.IssueType.GetHashCode();
                if (this.LastActivityDate != null)
                    hashCode = hashCode * 59 + this.LastActivityDate.GetHashCode();
                if (this.LastActivityPersonType != null)
                    hashCode = hashCode * 59 + this.LastActivityPersonType.GetHashCode();
                if (this.LastActivityResourceID != null)
                    hashCode = hashCode * 59 + this.LastActivityResourceID.GetHashCode();
                if (this.LastCustomerNotificationDateTime != null)
                    hashCode = hashCode * 59 + this.LastCustomerNotificationDateTime.GetHashCode();
                if (this.LastCustomerVisibleActivityDateTime != null)
                    hashCode = hashCode * 59 + this.LastCustomerVisibleActivityDateTime.GetHashCode();
                if (this.LastTrackedModificationDateTime != null)
                    hashCode = hashCode * 59 + this.LastTrackedModificationDateTime.GetHashCode();
                if (this.MonitorID != null)
                    hashCode = hashCode * 59 + this.MonitorID.GetHashCode();
                if (this.MonitorTypeID != null)
                    hashCode = hashCode * 59 + this.MonitorTypeID.GetHashCode();
                if (this.OpportunityID != null)
                    hashCode = hashCode * 59 + this.OpportunityID.GetHashCode();
                if (this.OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + this.OrganizationalLevelAssociationID.GetHashCode();
                if (this.PreviousServiceThermometerRating != null)
                    hashCode = hashCode * 59 + this.PreviousServiceThermometerRating.GetHashCode();
                if (this.Priority != null)
                    hashCode = hashCode * 59 + this.Priority.GetHashCode();
                if (this.ProblemTicketId != null)
                    hashCode = hashCode * 59 + this.ProblemTicketId.GetHashCode();
                if (this.ProjectID != null)
                    hashCode = hashCode * 59 + this.ProjectID.GetHashCode();
                if (this.PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderNumber.GetHashCode();
                if (this.QueueID != null)
                    hashCode = hashCode * 59 + this.QueueID.GetHashCode();
                if (this.Resolution != null)
                    hashCode = hashCode * 59 + this.Resolution.GetHashCode();
                if (this.ResolutionPlanDateTime != null)
                    hashCode = hashCode * 59 + this.ResolutionPlanDateTime.GetHashCode();
                if (this.ResolutionPlanDueDateTime != null)
                    hashCode = hashCode * 59 + this.ResolutionPlanDueDateTime.GetHashCode();
                if (this.ResolvedDateTime != null)
                    hashCode = hashCode * 59 + this.ResolvedDateTime.GetHashCode();
                if (this.ResolvedDueDateTime != null)
                    hashCode = hashCode * 59 + this.ResolvedDueDateTime.GetHashCode();
                if (this.RmaStatus != null)
                    hashCode = hashCode * 59 + this.RmaStatus.GetHashCode();
                if (this.RmaType != null)
                    hashCode = hashCode * 59 + this.RmaType.GetHashCode();
                if (this.RmmAlertID != null)
                    hashCode = hashCode * 59 + this.RmmAlertID.GetHashCode();
                if (this.ServiceLevelAgreementHasBeenMet != null)
                    hashCode = hashCode * 59 + this.ServiceLevelAgreementHasBeenMet.GetHashCode();
                if (this.ServiceLevelAgreementID != null)
                    hashCode = hashCode * 59 + this.ServiceLevelAgreementID.GetHashCode();
                if (this.ServiceLevelAgreementPausedNextEventHours != null)
                    hashCode = hashCode * 59 + this.ServiceLevelAgreementPausedNextEventHours.GetHashCode();
                if (this.ServiceThermometerTemperature != null)
                    hashCode = hashCode * 59 + this.ServiceThermometerTemperature.GetHashCode();
                if (this.Source != null)
                    hashCode = hashCode * 59 + this.Source.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.SubIssueType != null)
                    hashCode = hashCode * 59 + this.SubIssueType.GetHashCode();
                if (this.TicketCategory != null)
                    hashCode = hashCode * 59 + this.TicketCategory.GetHashCode();
                if (this.TicketNumber != null)
                    hashCode = hashCode * 59 + this.TicketNumber.GetHashCode();
                if (this.TicketType != null)
                    hashCode = hashCode * 59 + this.TicketType.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
