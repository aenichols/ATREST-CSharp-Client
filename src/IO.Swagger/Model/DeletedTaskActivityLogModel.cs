/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DeletedTaskActivityLogModel
    /// </summary>
    [DataContract]
    public partial class DeletedTaskActivityLogModel :  IEquatable<DeletedTaskActivityLogModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeletedTaskActivityLogModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="typeID">typeID.</param>
        /// <param name="taskID">taskID.</param>
        /// <param name="taskNumber">taskNumber.</param>
        /// <param name="noteOrAttachmentTitle">noteOrAttachmentTitle.</param>
        /// <param name="createdByResourceID">createdByResourceID.</param>
        /// <param name="activityDateTime">activityDateTime.</param>
        /// <param name="startDateTime">startDateTime.</param>
        /// <param name="endDateTime">endDateTime.</param>
        /// <param name="hoursWorked">hoursWorked.</param>
        /// <param name="deletedByResourceID">deletedByResourceID.</param>
        /// <param name="deletedDateTime">deletedDateTime.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public DeletedTaskActivityLogModel(long? id = default(long?), int? typeID = default(int?), int? taskID = default(int?), string taskNumber = default(string), string noteOrAttachmentTitle = default(string), int? createdByResourceID = default(int?), DateTime? activityDateTime = default(DateTime?), DateTime? startDateTime = default(DateTime?), DateTime? endDateTime = default(DateTime?), double? hoursWorked = default(double?), int? deletedByResourceID = default(int?), DateTime? deletedDateTime = default(DateTime?), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.TypeID = typeID;
            this.TaskID = taskID;
            this.TaskNumber = taskNumber;
            this.NoteOrAttachmentTitle = noteOrAttachmentTitle;
            this.CreatedByResourceID = createdByResourceID;
            this.ActivityDateTime = activityDateTime;
            this.StartDateTime = startDateTime;
            this.EndDateTime = endDateTime;
            this.HoursWorked = hoursWorked;
            this.DeletedByResourceID = deletedByResourceID;
            this.DeletedDateTime = deletedDateTime;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets TypeID
        /// </summary>
        [DataMember(Name="typeID", EmitDefaultValue=false)]
        public int? TypeID { get; set; }

        /// <summary>
        /// Gets or Sets TaskID
        /// </summary>
        [DataMember(Name="taskID", EmitDefaultValue=false)]
        public int? TaskID { get; set; }

        /// <summary>
        /// Gets or Sets TaskNumber
        /// </summary>
        [DataMember(Name="taskNumber", EmitDefaultValue=false)]
        public string TaskNumber { get; set; }

        /// <summary>
        /// Gets or Sets NoteOrAttachmentTitle
        /// </summary>
        [DataMember(Name="noteOrAttachmentTitle", EmitDefaultValue=false)]
        public string NoteOrAttachmentTitle { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByResourceID
        /// </summary>
        [DataMember(Name="createdByResourceID", EmitDefaultValue=false)]
        public int? CreatedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ActivityDateTime
        /// </summary>
        [DataMember(Name="activityDateTime", EmitDefaultValue=false)]
        public DateTime? ActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets StartDateTime
        /// </summary>
        [DataMember(Name="startDateTime", EmitDefaultValue=false)]
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EndDateTime
        /// </summary>
        [DataMember(Name="endDateTime", EmitDefaultValue=false)]
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets HoursWorked
        /// </summary>
        [DataMember(Name="hoursWorked", EmitDefaultValue=false)]
        public double? HoursWorked { get; set; }

        /// <summary>
        /// Gets or Sets DeletedByResourceID
        /// </summary>
        [DataMember(Name="deletedByResourceID", EmitDefaultValue=false)]
        public int? DeletedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets DeletedDateTime
        /// </summary>
        [DataMember(Name="deletedDateTime", EmitDefaultValue=false)]
        public DateTime? DeletedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeletedTaskActivityLogModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  TypeID: ").Append(TypeID).Append("\n");
            sb.Append("  TaskID: ").Append(TaskID).Append("\n");
            sb.Append("  TaskNumber: ").Append(TaskNumber).Append("\n");
            sb.Append("  NoteOrAttachmentTitle: ").Append(NoteOrAttachmentTitle).Append("\n");
            sb.Append("  CreatedByResourceID: ").Append(CreatedByResourceID).Append("\n");
            sb.Append("  ActivityDateTime: ").Append(ActivityDateTime).Append("\n");
            sb.Append("  StartDateTime: ").Append(StartDateTime).Append("\n");
            sb.Append("  EndDateTime: ").Append(EndDateTime).Append("\n");
            sb.Append("  HoursWorked: ").Append(HoursWorked).Append("\n");
            sb.Append("  DeletedByResourceID: ").Append(DeletedByResourceID).Append("\n");
            sb.Append("  DeletedDateTime: ").Append(DeletedDateTime).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DeletedTaskActivityLogModel);
        }

        /// <summary>
        /// Returns true if DeletedTaskActivityLogModel instances are equal
        /// </summary>
        /// <param name="input">Instance of DeletedTaskActivityLogModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeletedTaskActivityLogModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.TypeID == input.TypeID ||
                    (this.TypeID != null &&
                    this.TypeID.Equals(input.TypeID))
                ) && 
                (
                    this.TaskID == input.TaskID ||
                    (this.TaskID != null &&
                    this.TaskID.Equals(input.TaskID))
                ) && 
                (
                    this.TaskNumber == input.TaskNumber ||
                    (this.TaskNumber != null &&
                    this.TaskNumber.Equals(input.TaskNumber))
                ) && 
                (
                    this.NoteOrAttachmentTitle == input.NoteOrAttachmentTitle ||
                    (this.NoteOrAttachmentTitle != null &&
                    this.NoteOrAttachmentTitle.Equals(input.NoteOrAttachmentTitle))
                ) && 
                (
                    this.CreatedByResourceID == input.CreatedByResourceID ||
                    (this.CreatedByResourceID != null &&
                    this.CreatedByResourceID.Equals(input.CreatedByResourceID))
                ) && 
                (
                    this.ActivityDateTime == input.ActivityDateTime ||
                    (this.ActivityDateTime != null &&
                    this.ActivityDateTime.Equals(input.ActivityDateTime))
                ) && 
                (
                    this.StartDateTime == input.StartDateTime ||
                    (this.StartDateTime != null &&
                    this.StartDateTime.Equals(input.StartDateTime))
                ) && 
                (
                    this.EndDateTime == input.EndDateTime ||
                    (this.EndDateTime != null &&
                    this.EndDateTime.Equals(input.EndDateTime))
                ) && 
                (
                    this.HoursWorked == input.HoursWorked ||
                    (this.HoursWorked != null &&
                    this.HoursWorked.Equals(input.HoursWorked))
                ) && 
                (
                    this.DeletedByResourceID == input.DeletedByResourceID ||
                    (this.DeletedByResourceID != null &&
                    this.DeletedByResourceID.Equals(input.DeletedByResourceID))
                ) && 
                (
                    this.DeletedDateTime == input.DeletedDateTime ||
                    (this.DeletedDateTime != null &&
                    this.DeletedDateTime.Equals(input.DeletedDateTime))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.TypeID != null)
                    hashCode = hashCode * 59 + this.TypeID.GetHashCode();
                if (this.TaskID != null)
                    hashCode = hashCode * 59 + this.TaskID.GetHashCode();
                if (this.TaskNumber != null)
                    hashCode = hashCode * 59 + this.TaskNumber.GetHashCode();
                if (this.NoteOrAttachmentTitle != null)
                    hashCode = hashCode * 59 + this.NoteOrAttachmentTitle.GetHashCode();
                if (this.CreatedByResourceID != null)
                    hashCode = hashCode * 59 + this.CreatedByResourceID.GetHashCode();
                if (this.ActivityDateTime != null)
                    hashCode = hashCode * 59 + this.ActivityDateTime.GetHashCode();
                if (this.StartDateTime != null)
                    hashCode = hashCode * 59 + this.StartDateTime.GetHashCode();
                if (this.EndDateTime != null)
                    hashCode = hashCode * 59 + this.EndDateTime.GetHashCode();
                if (this.HoursWorked != null)
                    hashCode = hashCode * 59 + this.HoursWorked.GetHashCode();
                if (this.DeletedByResourceID != null)
                    hashCode = hashCode * 59 + this.DeletedByResourceID.GetHashCode();
                if (this.DeletedDateTime != null)
                    hashCode = hashCode * 59 + this.DeletedDateTime.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
