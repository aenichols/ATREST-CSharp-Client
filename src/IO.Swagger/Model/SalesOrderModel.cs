/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SalesOrderModel
    /// </summary>
    [DataContract]
    public partial class SalesOrderModel :  IEquatable<SalesOrderModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SalesOrderModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="additionalBillToAddressInformation">additionalBillToAddressInformation.</param>
        /// <param name="additionalShipToAddressInformation">additionalShipToAddressInformation.</param>
        /// <param name="billingAddress1">billingAddress1.</param>
        /// <param name="billingAddress2">billingAddress2.</param>
        /// <param name="billToCity">billToCity.</param>
        /// <param name="billToCountryID">billToCountryID.</param>
        /// <param name="billToPostalCode">billToPostalCode.</param>
        /// <param name="billToState">billToState.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="contactID">contactID.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="opportunityID">opportunityID.</param>
        /// <param name="organizationalLevelAssociationID">organizationalLevelAssociationID.</param>
        /// <param name="ownerResourceID">ownerResourceID.</param>
        /// <param name="promisedFulfillmentDate">promisedFulfillmentDate.</param>
        /// <param name="salesOrderDate">salesOrderDate.</param>
        /// <param name="shipToAddress1">shipToAddress1.</param>
        /// <param name="shipToAddress2">shipToAddress2.</param>
        /// <param name="shipToCity">shipToCity.</param>
        /// <param name="shipToCountryID">shipToCountryID.</param>
        /// <param name="shipToPostalCode">shipToPostalCode.</param>
        /// <param name="shipToState">shipToState.</param>
        /// <param name="status">status.</param>
        /// <param name="title">title.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public SalesOrderModel(long? id = default(long?), string additionalBillToAddressInformation = default(string), string additionalShipToAddressInformation = default(string), string billingAddress1 = default(string), string billingAddress2 = default(string), string billToCity = default(string), int? billToCountryID = default(int?), string billToPostalCode = default(string), string billToState = default(string), int? companyID = default(int?), int? contactID = default(int?), int? impersonatorCreatorResourceID = default(int?), int? opportunityID = default(int?), int? organizationalLevelAssociationID = default(int?), int? ownerResourceID = default(int?), DateTime? promisedFulfillmentDate = default(DateTime?), DateTime? salesOrderDate = default(DateTime?), string shipToAddress1 = default(string), string shipToAddress2 = default(string), string shipToCity = default(string), int? shipToCountryID = default(int?), string shipToPostalCode = default(string), string shipToState = default(string), int? status = default(int?), string title = default(string), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.AdditionalBillToAddressInformation = additionalBillToAddressInformation;
            this.AdditionalShipToAddressInformation = additionalShipToAddressInformation;
            this.BillingAddress1 = billingAddress1;
            this.BillingAddress2 = billingAddress2;
            this.BillToCity = billToCity;
            this.BillToCountryID = billToCountryID;
            this.BillToPostalCode = billToPostalCode;
            this.BillToState = billToState;
            this.CompanyID = companyID;
            this.ContactID = contactID;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.OpportunityID = opportunityID;
            this.OrganizationalLevelAssociationID = organizationalLevelAssociationID;
            this.OwnerResourceID = ownerResourceID;
            this.PromisedFulfillmentDate = promisedFulfillmentDate;
            this.SalesOrderDate = salesOrderDate;
            this.ShipToAddress1 = shipToAddress1;
            this.ShipToAddress2 = shipToAddress2;
            this.ShipToCity = shipToCity;
            this.ShipToCountryID = shipToCountryID;
            this.ShipToPostalCode = shipToPostalCode;
            this.ShipToState = shipToState;
            this.Status = status;
            this.Title = title;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalBillToAddressInformation
        /// </summary>
        [DataMember(Name="additionalBillToAddressInformation", EmitDefaultValue=false)]
        public string AdditionalBillToAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalShipToAddressInformation
        /// </summary>
        [DataMember(Name="additionalShipToAddressInformation", EmitDefaultValue=false)]
        public string AdditionalShipToAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress1
        /// </summary>
        [DataMember(Name="billingAddress1", EmitDefaultValue=false)]
        public string BillingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress2
        /// </summary>
        [DataMember(Name="billingAddress2", EmitDefaultValue=false)]
        public string BillingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity", EmitDefaultValue=false)]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountryID
        /// </summary>
        [DataMember(Name="billToCountryID", EmitDefaultValue=false)]
        public int? BillToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets BillToPostalCode
        /// </summary>
        [DataMember(Name="billToPostalCode", EmitDefaultValue=false)]
        public string BillToPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState", EmitDefaultValue=false)]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="contactID", EmitDefaultValue=false)]
        public int? ContactID { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID", EmitDefaultValue=false)]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID", EmitDefaultValue=false)]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets OwnerResourceID
        /// </summary>
        [DataMember(Name="ownerResourceID", EmitDefaultValue=false)]
        public int? OwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets PromisedFulfillmentDate
        /// </summary>
        [DataMember(Name="promisedFulfillmentDate", EmitDefaultValue=false)]
        public DateTime? PromisedFulfillmentDate { get; set; }

        /// <summary>
        /// Gets or Sets SalesOrderDate
        /// </summary>
        [DataMember(Name="salesOrderDate", EmitDefaultValue=false)]
        public DateTime? SalesOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddress1
        /// </summary>
        [DataMember(Name="shipToAddress1", EmitDefaultValue=false)]
        public string ShipToAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddress2
        /// </summary>
        [DataMember(Name="shipToAddress2", EmitDefaultValue=false)]
        public string ShipToAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCity
        /// </summary>
        [DataMember(Name="shipToCity", EmitDefaultValue=false)]
        public string ShipToCity { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCountryID
        /// </summary>
        [DataMember(Name="shipToCountryID", EmitDefaultValue=false)]
        public int? ShipToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets ShipToPostalCode
        /// </summary>
        [DataMember(Name="shipToPostalCode", EmitDefaultValue=false)]
        public string ShipToPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipToState
        /// </summary>
        [DataMember(Name="shipToState", EmitDefaultValue=false)]
        public string ShipToState { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets SoapParentPropertyId
        /// </summary>
        [DataMember(Name="soapParentPropertyId", EmitDefaultValue=false)]
        public ExpressionFuncSalesOrderInt64 SoapParentPropertyId { get; private set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SalesOrderModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalBillToAddressInformation: ").Append(AdditionalBillToAddressInformation).Append("\n");
            sb.Append("  AdditionalShipToAddressInformation: ").Append(AdditionalShipToAddressInformation).Append("\n");
            sb.Append("  BillingAddress1: ").Append(BillingAddress1).Append("\n");
            sb.Append("  BillingAddress2: ").Append(BillingAddress2).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToCountryID: ").Append(BillToCountryID).Append("\n");
            sb.Append("  BillToPostalCode: ").Append(BillToPostalCode).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  OwnerResourceID: ").Append(OwnerResourceID).Append("\n");
            sb.Append("  PromisedFulfillmentDate: ").Append(PromisedFulfillmentDate).Append("\n");
            sb.Append("  SalesOrderDate: ").Append(SalesOrderDate).Append("\n");
            sb.Append("  ShipToAddress1: ").Append(ShipToAddress1).Append("\n");
            sb.Append("  ShipToAddress2: ").Append(ShipToAddress2).Append("\n");
            sb.Append("  ShipToCity: ").Append(ShipToCity).Append("\n");
            sb.Append("  ShipToCountryID: ").Append(ShipToCountryID).Append("\n");
            sb.Append("  ShipToPostalCode: ").Append(ShipToPostalCode).Append("\n");
            sb.Append("  ShipToState: ").Append(ShipToState).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  SoapParentPropertyId: ").Append(SoapParentPropertyId).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SalesOrderModel);
        }

        /// <summary>
        /// Returns true if SalesOrderModel instances are equal
        /// </summary>
        /// <param name="input">Instance of SalesOrderModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SalesOrderModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AdditionalBillToAddressInformation == input.AdditionalBillToAddressInformation ||
                    (this.AdditionalBillToAddressInformation != null &&
                    this.AdditionalBillToAddressInformation.Equals(input.AdditionalBillToAddressInformation))
                ) && 
                (
                    this.AdditionalShipToAddressInformation == input.AdditionalShipToAddressInformation ||
                    (this.AdditionalShipToAddressInformation != null &&
                    this.AdditionalShipToAddressInformation.Equals(input.AdditionalShipToAddressInformation))
                ) && 
                (
                    this.BillingAddress1 == input.BillingAddress1 ||
                    (this.BillingAddress1 != null &&
                    this.BillingAddress1.Equals(input.BillingAddress1))
                ) && 
                (
                    this.BillingAddress2 == input.BillingAddress2 ||
                    (this.BillingAddress2 != null &&
                    this.BillingAddress2.Equals(input.BillingAddress2))
                ) && 
                (
                    this.BillToCity == input.BillToCity ||
                    (this.BillToCity != null &&
                    this.BillToCity.Equals(input.BillToCity))
                ) && 
                (
                    this.BillToCountryID == input.BillToCountryID ||
                    (this.BillToCountryID != null &&
                    this.BillToCountryID.Equals(input.BillToCountryID))
                ) && 
                (
                    this.BillToPostalCode == input.BillToPostalCode ||
                    (this.BillToPostalCode != null &&
                    this.BillToPostalCode.Equals(input.BillToPostalCode))
                ) && 
                (
                    this.BillToState == input.BillToState ||
                    (this.BillToState != null &&
                    this.BillToState.Equals(input.BillToState))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.ContactID == input.ContactID ||
                    (this.ContactID != null &&
                    this.ContactID.Equals(input.ContactID))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.OpportunityID == input.OpportunityID ||
                    (this.OpportunityID != null &&
                    this.OpportunityID.Equals(input.OpportunityID))
                ) && 
                (
                    this.OrganizationalLevelAssociationID == input.OrganizationalLevelAssociationID ||
                    (this.OrganizationalLevelAssociationID != null &&
                    this.OrganizationalLevelAssociationID.Equals(input.OrganizationalLevelAssociationID))
                ) && 
                (
                    this.OwnerResourceID == input.OwnerResourceID ||
                    (this.OwnerResourceID != null &&
                    this.OwnerResourceID.Equals(input.OwnerResourceID))
                ) && 
                (
                    this.PromisedFulfillmentDate == input.PromisedFulfillmentDate ||
                    (this.PromisedFulfillmentDate != null &&
                    this.PromisedFulfillmentDate.Equals(input.PromisedFulfillmentDate))
                ) && 
                (
                    this.SalesOrderDate == input.SalesOrderDate ||
                    (this.SalesOrderDate != null &&
                    this.SalesOrderDate.Equals(input.SalesOrderDate))
                ) && 
                (
                    this.ShipToAddress1 == input.ShipToAddress1 ||
                    (this.ShipToAddress1 != null &&
                    this.ShipToAddress1.Equals(input.ShipToAddress1))
                ) && 
                (
                    this.ShipToAddress2 == input.ShipToAddress2 ||
                    (this.ShipToAddress2 != null &&
                    this.ShipToAddress2.Equals(input.ShipToAddress2))
                ) && 
                (
                    this.ShipToCity == input.ShipToCity ||
                    (this.ShipToCity != null &&
                    this.ShipToCity.Equals(input.ShipToCity))
                ) && 
                (
                    this.ShipToCountryID == input.ShipToCountryID ||
                    (this.ShipToCountryID != null &&
                    this.ShipToCountryID.Equals(input.ShipToCountryID))
                ) && 
                (
                    this.ShipToPostalCode == input.ShipToPostalCode ||
                    (this.ShipToPostalCode != null &&
                    this.ShipToPostalCode.Equals(input.ShipToPostalCode))
                ) && 
                (
                    this.ShipToState == input.ShipToState ||
                    (this.ShipToState != null &&
                    this.ShipToState.Equals(input.ShipToState))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.SoapParentPropertyId == input.SoapParentPropertyId ||
                    (this.SoapParentPropertyId != null &&
                    this.SoapParentPropertyId.Equals(input.SoapParentPropertyId))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AdditionalBillToAddressInformation != null)
                    hashCode = hashCode * 59 + this.AdditionalBillToAddressInformation.GetHashCode();
                if (this.AdditionalShipToAddressInformation != null)
                    hashCode = hashCode * 59 + this.AdditionalShipToAddressInformation.GetHashCode();
                if (this.BillingAddress1 != null)
                    hashCode = hashCode * 59 + this.BillingAddress1.GetHashCode();
                if (this.BillingAddress2 != null)
                    hashCode = hashCode * 59 + this.BillingAddress2.GetHashCode();
                if (this.BillToCity != null)
                    hashCode = hashCode * 59 + this.BillToCity.GetHashCode();
                if (this.BillToCountryID != null)
                    hashCode = hashCode * 59 + this.BillToCountryID.GetHashCode();
                if (this.BillToPostalCode != null)
                    hashCode = hashCode * 59 + this.BillToPostalCode.GetHashCode();
                if (this.BillToState != null)
                    hashCode = hashCode * 59 + this.BillToState.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.ContactID != null)
                    hashCode = hashCode * 59 + this.ContactID.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.OpportunityID != null)
                    hashCode = hashCode * 59 + this.OpportunityID.GetHashCode();
                if (this.OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + this.OrganizationalLevelAssociationID.GetHashCode();
                if (this.OwnerResourceID != null)
                    hashCode = hashCode * 59 + this.OwnerResourceID.GetHashCode();
                if (this.PromisedFulfillmentDate != null)
                    hashCode = hashCode * 59 + this.PromisedFulfillmentDate.GetHashCode();
                if (this.SalesOrderDate != null)
                    hashCode = hashCode * 59 + this.SalesOrderDate.GetHashCode();
                if (this.ShipToAddress1 != null)
                    hashCode = hashCode * 59 + this.ShipToAddress1.GetHashCode();
                if (this.ShipToAddress2 != null)
                    hashCode = hashCode * 59 + this.ShipToAddress2.GetHashCode();
                if (this.ShipToCity != null)
                    hashCode = hashCode * 59 + this.ShipToCity.GetHashCode();
                if (this.ShipToCountryID != null)
                    hashCode = hashCode * 59 + this.ShipToCountryID.GetHashCode();
                if (this.ShipToPostalCode != null)
                    hashCode = hashCode * 59 + this.ShipToPostalCode.GetHashCode();
                if (this.ShipToState != null)
                    hashCode = hashCode * 59 + this.ShipToState.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.SoapParentPropertyId != null)
                    hashCode = hashCode * 59 + this.SoapParentPropertyId.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
