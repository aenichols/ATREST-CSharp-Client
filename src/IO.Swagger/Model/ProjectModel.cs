/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ProjectModel
    /// </summary>
    [DataContract]
    public partial class ProjectModel :  IEquatable<ProjectModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="actualBilledHours">actualBilledHours.</param>
        /// <param name="actualHours">actualHours.</param>
        /// <param name="changeOrdersBudget">changeOrdersBudget.</param>
        /// <param name="changeOrdersRevenue">changeOrdersRevenue.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="companyOwnerResourceID">companyOwnerResourceID.</param>
        /// <param name="completedDateTime">completedDateTime.</param>
        /// <param name="completedPercentage">completedPercentage.</param>
        /// <param name="contractID">contractID.</param>
        /// <param name="createDateTime">createDateTime.</param>
        /// <param name="creatorResourceID">creatorResourceID.</param>
        /// <param name="department">department.</param>
        /// <param name="description">description.</param>
        /// <param name="duration">duration.</param>
        /// <param name="endDateTime">endDateTime.</param>
        /// <param name="estimatedSalesCost">estimatedSalesCost.</param>
        /// <param name="estimatedTime">estimatedTime.</param>
        /// <param name="extProjectNumber">extProjectNumber.</param>
        /// <param name="extProjectType">extProjectType.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="laborEstimatedCosts">laborEstimatedCosts.</param>
        /// <param name="laborEstimatedMarginPercentage">laborEstimatedMarginPercentage.</param>
        /// <param name="laborEstimatedRevenue">laborEstimatedRevenue.</param>
        /// <param name="lastActivityDateTime">lastActivityDateTime.</param>
        /// <param name="lastActivityPersonType">lastActivityPersonType.</param>
        /// <param name="lastActivityResourceID">lastActivityResourceID.</param>
        /// <param name="opportunityID">opportunityID.</param>
        /// <param name="organizationalLevelAssociationID">organizationalLevelAssociationID.</param>
        /// <param name="originalEstimatedRevenue">originalEstimatedRevenue.</param>
        /// <param name="projectCostEstimatedMarginPercentage">projectCostEstimatedMarginPercentage.</param>
        /// <param name="projectCostsBudget">projectCostsBudget.</param>
        /// <param name="projectCostsRevenue">projectCostsRevenue.</param>
        /// <param name="projectLeadResourceID">projectLeadResourceID.</param>
        /// <param name="projectName">projectName.</param>
        /// <param name="projectNumber">projectNumber.</param>
        /// <param name="projectType">projectType.</param>
        /// <param name="purchaseOrderNumber">purchaseOrderNumber.</param>
        /// <param name="sgda">sgda.</param>
        /// <param name="startDateTime">startDateTime.</param>
        /// <param name="status">status.</param>
        /// <param name="statusDateTime">statusDateTime.</param>
        /// <param name="statusDetail">statusDetail.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public ProjectModel(long? id = default(long?), double? actualBilledHours = default(double?), double? actualHours = default(double?), double? changeOrdersBudget = default(double?), double? changeOrdersRevenue = default(double?), int? companyID = default(int?), int? companyOwnerResourceID = default(int?), DateTime? completedDateTime = default(DateTime?), int? completedPercentage = default(int?), int? contractID = default(int?), DateTime? createDateTime = default(DateTime?), int? creatorResourceID = default(int?), int? department = default(int?), string description = default(string), int? duration = default(int?), DateTime? endDateTime = default(DateTime?), double? estimatedSalesCost = default(double?), double? estimatedTime = default(double?), string extProjectNumber = default(string), int? extProjectType = default(int?), int? impersonatorCreatorResourceID = default(int?), double? laborEstimatedCosts = default(double?), double? laborEstimatedMarginPercentage = default(double?), double? laborEstimatedRevenue = default(double?), DateTime? lastActivityDateTime = default(DateTime?), int? lastActivityPersonType = default(int?), int? lastActivityResourceID = default(int?), int? opportunityID = default(int?), int? organizationalLevelAssociationID = default(int?), double? originalEstimatedRevenue = default(double?), double? projectCostEstimatedMarginPercentage = default(double?), double? projectCostsBudget = default(double?), double? projectCostsRevenue = default(double?), int? projectLeadResourceID = default(int?), string projectName = default(string), string projectNumber = default(string), int? projectType = default(int?), string purchaseOrderNumber = default(string), double? sgda = default(double?), DateTime? startDateTime = default(DateTime?), int? status = default(int?), DateTime? statusDateTime = default(DateTime?), string statusDetail = default(string), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.ActualBilledHours = actualBilledHours;
            this.ActualHours = actualHours;
            this.ChangeOrdersBudget = changeOrdersBudget;
            this.ChangeOrdersRevenue = changeOrdersRevenue;
            this.CompanyID = companyID;
            this.CompanyOwnerResourceID = companyOwnerResourceID;
            this.CompletedDateTime = completedDateTime;
            this.CompletedPercentage = completedPercentage;
            this.ContractID = contractID;
            this.CreateDateTime = createDateTime;
            this.CreatorResourceID = creatorResourceID;
            this.Department = department;
            this.Description = description;
            this.Duration = duration;
            this.EndDateTime = endDateTime;
            this.EstimatedSalesCost = estimatedSalesCost;
            this.EstimatedTime = estimatedTime;
            this.ExtProjectNumber = extProjectNumber;
            this.ExtProjectType = extProjectType;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.LaborEstimatedCosts = laborEstimatedCosts;
            this.LaborEstimatedMarginPercentage = laborEstimatedMarginPercentage;
            this.LaborEstimatedRevenue = laborEstimatedRevenue;
            this.LastActivityDateTime = lastActivityDateTime;
            this.LastActivityPersonType = lastActivityPersonType;
            this.LastActivityResourceID = lastActivityResourceID;
            this.OpportunityID = opportunityID;
            this.OrganizationalLevelAssociationID = organizationalLevelAssociationID;
            this.OriginalEstimatedRevenue = originalEstimatedRevenue;
            this.ProjectCostEstimatedMarginPercentage = projectCostEstimatedMarginPercentage;
            this.ProjectCostsBudget = projectCostsBudget;
            this.ProjectCostsRevenue = projectCostsRevenue;
            this.ProjectLeadResourceID = projectLeadResourceID;
            this.ProjectName = projectName;
            this.ProjectNumber = projectNumber;
            this.ProjectType = projectType;
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.Sgda = sgda;
            this.StartDateTime = startDateTime;
            this.Status = status;
            this.StatusDateTime = statusDateTime;
            this.StatusDetail = statusDetail;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ActualBilledHours
        /// </summary>
        [DataMember(Name="actualBilledHours", EmitDefaultValue=false)]
        public double? ActualBilledHours { get; set; }

        /// <summary>
        /// Gets or Sets ActualHours
        /// </summary>
        [DataMember(Name="actualHours", EmitDefaultValue=false)]
        public double? ActualHours { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrdersBudget
        /// </summary>
        [DataMember(Name="changeOrdersBudget", EmitDefaultValue=false)]
        public double? ChangeOrdersBudget { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrdersRevenue
        /// </summary>
        [DataMember(Name="changeOrdersRevenue", EmitDefaultValue=false)]
        public double? ChangeOrdersRevenue { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyOwnerResourceID
        /// </summary>
        [DataMember(Name="companyOwnerResourceID", EmitDefaultValue=false)]
        public int? CompanyOwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDateTime
        /// </summary>
        [DataMember(Name="completedDateTime", EmitDefaultValue=false)]
        public DateTime? CompletedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CompletedPercentage
        /// </summary>
        [DataMember(Name="completedPercentage", EmitDefaultValue=false)]
        public int? CompletedPercentage { get; set; }

        /// <summary>
        /// Gets or Sets ContractID
        /// </summary>
        [DataMember(Name="contractID", EmitDefaultValue=false)]
        public int? ContractID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDateTime
        /// </summary>
        [DataMember(Name="createDateTime", EmitDefaultValue=false)]
        public DateTime? CreateDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID", EmitDefaultValue=false)]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department", EmitDefaultValue=false)]
        public int? Department { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name="duration", EmitDefaultValue=false)]
        public int? Duration { get; set; }

        /// <summary>
        /// Gets or Sets EndDateTime
        /// </summary>
        [DataMember(Name="endDateTime", EmitDefaultValue=false)]
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedSalesCost
        /// </summary>
        [DataMember(Name="estimatedSalesCost", EmitDefaultValue=false)]
        public double? EstimatedSalesCost { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedTime
        /// </summary>
        [DataMember(Name="estimatedTime", EmitDefaultValue=false)]
        public double? EstimatedTime { get; set; }

        /// <summary>
        /// Gets or Sets ExtProjectNumber
        /// </summary>
        [DataMember(Name="extProjectNumber", EmitDefaultValue=false)]
        public string ExtProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ExtProjectType
        /// </summary>
        [DataMember(Name="extProjectType", EmitDefaultValue=false)]
        public int? ExtProjectType { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedCosts
        /// </summary>
        [DataMember(Name="laborEstimatedCosts", EmitDefaultValue=false)]
        public double? LaborEstimatedCosts { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedMarginPercentage
        /// </summary>
        [DataMember(Name="laborEstimatedMarginPercentage", EmitDefaultValue=false)]
        public double? LaborEstimatedMarginPercentage { get; set; }

        /// <summary>
        /// Gets or Sets LaborEstimatedRevenue
        /// </summary>
        [DataMember(Name="laborEstimatedRevenue", EmitDefaultValue=false)]
        public double? LaborEstimatedRevenue { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDateTime
        /// </summary>
        [DataMember(Name="lastActivityDateTime", EmitDefaultValue=false)]
        public DateTime? LastActivityDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityPersonType
        /// </summary>
        [DataMember(Name="lastActivityPersonType", EmitDefaultValue=false)]
        public int? LastActivityPersonType { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityResourceID
        /// </summary>
        [DataMember(Name="lastActivityResourceID", EmitDefaultValue=false)]
        public int? LastActivityResourceID { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID", EmitDefaultValue=false)]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationalLevelAssociationID
        /// </summary>
        [DataMember(Name="organizationalLevelAssociationID", EmitDefaultValue=false)]
        public int? OrganizationalLevelAssociationID { get; set; }

        /// <summary>
        /// Gets or Sets OriginalEstimatedRevenue
        /// </summary>
        [DataMember(Name="originalEstimatedRevenue", EmitDefaultValue=false)]
        public double? OriginalEstimatedRevenue { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostEstimatedMarginPercentage
        /// </summary>
        [DataMember(Name="projectCostEstimatedMarginPercentage", EmitDefaultValue=false)]
        public double? ProjectCostEstimatedMarginPercentage { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostsBudget
        /// </summary>
        [DataMember(Name="projectCostsBudget", EmitDefaultValue=false)]
        public double? ProjectCostsBudget { get; set; }

        /// <summary>
        /// Gets or Sets ProjectCostsRevenue
        /// </summary>
        [DataMember(Name="projectCostsRevenue", EmitDefaultValue=false)]
        public double? ProjectCostsRevenue { get; set; }

        /// <summary>
        /// Gets or Sets ProjectLeadResourceID
        /// </summary>
        [DataMember(Name="projectLeadResourceID", EmitDefaultValue=false)]
        public int? ProjectLeadResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ProjectName
        /// </summary>
        [DataMember(Name="projectName", EmitDefaultValue=false)]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="projectNumber", EmitDefaultValue=false)]
        public string ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectType
        /// </summary>
        [DataMember(Name="projectType", EmitDefaultValue=false)]
        public int? ProjectType { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber", EmitDefaultValue=false)]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Sgda
        /// </summary>
        [DataMember(Name="sgda", EmitDefaultValue=false)]
        public double? Sgda { get; set; }

        /// <summary>
        /// Gets or Sets StartDateTime
        /// </summary>
        [DataMember(Name="startDateTime", EmitDefaultValue=false)]
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusDateTime
        /// </summary>
        [DataMember(Name="statusDateTime", EmitDefaultValue=false)]
        public DateTime? StatusDateTime { get; set; }

        /// <summary>
        /// Gets or Sets StatusDetail
        /// </summary>
        [DataMember(Name="statusDetail", EmitDefaultValue=false)]
        public string StatusDetail { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProjectModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ActualBilledHours: ").Append(ActualBilledHours).Append("\n");
            sb.Append("  ActualHours: ").Append(ActualHours).Append("\n");
            sb.Append("  ChangeOrdersBudget: ").Append(ChangeOrdersBudget).Append("\n");
            sb.Append("  ChangeOrdersRevenue: ").Append(ChangeOrdersRevenue).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyOwnerResourceID: ").Append(CompanyOwnerResourceID).Append("\n");
            sb.Append("  CompletedDateTime: ").Append(CompletedDateTime).Append("\n");
            sb.Append("  CompletedPercentage: ").Append(CompletedPercentage).Append("\n");
            sb.Append("  ContractID: ").Append(ContractID).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  EndDateTime: ").Append(EndDateTime).Append("\n");
            sb.Append("  EstimatedSalesCost: ").Append(EstimatedSalesCost).Append("\n");
            sb.Append("  EstimatedTime: ").Append(EstimatedTime).Append("\n");
            sb.Append("  ExtProjectNumber: ").Append(ExtProjectNumber).Append("\n");
            sb.Append("  ExtProjectType: ").Append(ExtProjectType).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  LaborEstimatedCosts: ").Append(LaborEstimatedCosts).Append("\n");
            sb.Append("  LaborEstimatedMarginPercentage: ").Append(LaborEstimatedMarginPercentage).Append("\n");
            sb.Append("  LaborEstimatedRevenue: ").Append(LaborEstimatedRevenue).Append("\n");
            sb.Append("  LastActivityDateTime: ").Append(LastActivityDateTime).Append("\n");
            sb.Append("  LastActivityPersonType: ").Append(LastActivityPersonType).Append("\n");
            sb.Append("  LastActivityResourceID: ").Append(LastActivityResourceID).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  OrganizationalLevelAssociationID: ").Append(OrganizationalLevelAssociationID).Append("\n");
            sb.Append("  OriginalEstimatedRevenue: ").Append(OriginalEstimatedRevenue).Append("\n");
            sb.Append("  ProjectCostEstimatedMarginPercentage: ").Append(ProjectCostEstimatedMarginPercentage).Append("\n");
            sb.Append("  ProjectCostsBudget: ").Append(ProjectCostsBudget).Append("\n");
            sb.Append("  ProjectCostsRevenue: ").Append(ProjectCostsRevenue).Append("\n");
            sb.Append("  ProjectLeadResourceID: ").Append(ProjectLeadResourceID).Append("\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectType: ").Append(ProjectType).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  Sgda: ").Append(Sgda).Append("\n");
            sb.Append("  StartDateTime: ").Append(StartDateTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDateTime: ").Append(StatusDateTime).Append("\n");
            sb.Append("  StatusDetail: ").Append(StatusDetail).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProjectModel);
        }

        /// <summary>
        /// Returns true if ProjectModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ProjectModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProjectModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ActualBilledHours == input.ActualBilledHours ||
                    (this.ActualBilledHours != null &&
                    this.ActualBilledHours.Equals(input.ActualBilledHours))
                ) && 
                (
                    this.ActualHours == input.ActualHours ||
                    (this.ActualHours != null &&
                    this.ActualHours.Equals(input.ActualHours))
                ) && 
                (
                    this.ChangeOrdersBudget == input.ChangeOrdersBudget ||
                    (this.ChangeOrdersBudget != null &&
                    this.ChangeOrdersBudget.Equals(input.ChangeOrdersBudget))
                ) && 
                (
                    this.ChangeOrdersRevenue == input.ChangeOrdersRevenue ||
                    (this.ChangeOrdersRevenue != null &&
                    this.ChangeOrdersRevenue.Equals(input.ChangeOrdersRevenue))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.CompanyOwnerResourceID == input.CompanyOwnerResourceID ||
                    (this.CompanyOwnerResourceID != null &&
                    this.CompanyOwnerResourceID.Equals(input.CompanyOwnerResourceID))
                ) && 
                (
                    this.CompletedDateTime == input.CompletedDateTime ||
                    (this.CompletedDateTime != null &&
                    this.CompletedDateTime.Equals(input.CompletedDateTime))
                ) && 
                (
                    this.CompletedPercentage == input.CompletedPercentage ||
                    (this.CompletedPercentage != null &&
                    this.CompletedPercentage.Equals(input.CompletedPercentage))
                ) && 
                (
                    this.ContractID == input.ContractID ||
                    (this.ContractID != null &&
                    this.ContractID.Equals(input.ContractID))
                ) && 
                (
                    this.CreateDateTime == input.CreateDateTime ||
                    (this.CreateDateTime != null &&
                    this.CreateDateTime.Equals(input.CreateDateTime))
                ) && 
                (
                    this.CreatorResourceID == input.CreatorResourceID ||
                    (this.CreatorResourceID != null &&
                    this.CreatorResourceID.Equals(input.CreatorResourceID))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Duration == input.Duration ||
                    (this.Duration != null &&
                    this.Duration.Equals(input.Duration))
                ) && 
                (
                    this.EndDateTime == input.EndDateTime ||
                    (this.EndDateTime != null &&
                    this.EndDateTime.Equals(input.EndDateTime))
                ) && 
                (
                    this.EstimatedSalesCost == input.EstimatedSalesCost ||
                    (this.EstimatedSalesCost != null &&
                    this.EstimatedSalesCost.Equals(input.EstimatedSalesCost))
                ) && 
                (
                    this.EstimatedTime == input.EstimatedTime ||
                    (this.EstimatedTime != null &&
                    this.EstimatedTime.Equals(input.EstimatedTime))
                ) && 
                (
                    this.ExtProjectNumber == input.ExtProjectNumber ||
                    (this.ExtProjectNumber != null &&
                    this.ExtProjectNumber.Equals(input.ExtProjectNumber))
                ) && 
                (
                    this.ExtProjectType == input.ExtProjectType ||
                    (this.ExtProjectType != null &&
                    this.ExtProjectType.Equals(input.ExtProjectType))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.LaborEstimatedCosts == input.LaborEstimatedCosts ||
                    (this.LaborEstimatedCosts != null &&
                    this.LaborEstimatedCosts.Equals(input.LaborEstimatedCosts))
                ) && 
                (
                    this.LaborEstimatedMarginPercentage == input.LaborEstimatedMarginPercentage ||
                    (this.LaborEstimatedMarginPercentage != null &&
                    this.LaborEstimatedMarginPercentage.Equals(input.LaborEstimatedMarginPercentage))
                ) && 
                (
                    this.LaborEstimatedRevenue == input.LaborEstimatedRevenue ||
                    (this.LaborEstimatedRevenue != null &&
                    this.LaborEstimatedRevenue.Equals(input.LaborEstimatedRevenue))
                ) && 
                (
                    this.LastActivityDateTime == input.LastActivityDateTime ||
                    (this.LastActivityDateTime != null &&
                    this.LastActivityDateTime.Equals(input.LastActivityDateTime))
                ) && 
                (
                    this.LastActivityPersonType == input.LastActivityPersonType ||
                    (this.LastActivityPersonType != null &&
                    this.LastActivityPersonType.Equals(input.LastActivityPersonType))
                ) && 
                (
                    this.LastActivityResourceID == input.LastActivityResourceID ||
                    (this.LastActivityResourceID != null &&
                    this.LastActivityResourceID.Equals(input.LastActivityResourceID))
                ) && 
                (
                    this.OpportunityID == input.OpportunityID ||
                    (this.OpportunityID != null &&
                    this.OpportunityID.Equals(input.OpportunityID))
                ) && 
                (
                    this.OrganizationalLevelAssociationID == input.OrganizationalLevelAssociationID ||
                    (this.OrganizationalLevelAssociationID != null &&
                    this.OrganizationalLevelAssociationID.Equals(input.OrganizationalLevelAssociationID))
                ) && 
                (
                    this.OriginalEstimatedRevenue == input.OriginalEstimatedRevenue ||
                    (this.OriginalEstimatedRevenue != null &&
                    this.OriginalEstimatedRevenue.Equals(input.OriginalEstimatedRevenue))
                ) && 
                (
                    this.ProjectCostEstimatedMarginPercentage == input.ProjectCostEstimatedMarginPercentage ||
                    (this.ProjectCostEstimatedMarginPercentage != null &&
                    this.ProjectCostEstimatedMarginPercentage.Equals(input.ProjectCostEstimatedMarginPercentage))
                ) && 
                (
                    this.ProjectCostsBudget == input.ProjectCostsBudget ||
                    (this.ProjectCostsBudget != null &&
                    this.ProjectCostsBudget.Equals(input.ProjectCostsBudget))
                ) && 
                (
                    this.ProjectCostsRevenue == input.ProjectCostsRevenue ||
                    (this.ProjectCostsRevenue != null &&
                    this.ProjectCostsRevenue.Equals(input.ProjectCostsRevenue))
                ) && 
                (
                    this.ProjectLeadResourceID == input.ProjectLeadResourceID ||
                    (this.ProjectLeadResourceID != null &&
                    this.ProjectLeadResourceID.Equals(input.ProjectLeadResourceID))
                ) && 
                (
                    this.ProjectName == input.ProjectName ||
                    (this.ProjectName != null &&
                    this.ProjectName.Equals(input.ProjectName))
                ) && 
                (
                    this.ProjectNumber == input.ProjectNumber ||
                    (this.ProjectNumber != null &&
                    this.ProjectNumber.Equals(input.ProjectNumber))
                ) && 
                (
                    this.ProjectType == input.ProjectType ||
                    (this.ProjectType != null &&
                    this.ProjectType.Equals(input.ProjectType))
                ) && 
                (
                    this.PurchaseOrderNumber == input.PurchaseOrderNumber ||
                    (this.PurchaseOrderNumber != null &&
                    this.PurchaseOrderNumber.Equals(input.PurchaseOrderNumber))
                ) && 
                (
                    this.Sgda == input.Sgda ||
                    (this.Sgda != null &&
                    this.Sgda.Equals(input.Sgda))
                ) && 
                (
                    this.StartDateTime == input.StartDateTime ||
                    (this.StartDateTime != null &&
                    this.StartDateTime.Equals(input.StartDateTime))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusDateTime == input.StatusDateTime ||
                    (this.StatusDateTime != null &&
                    this.StatusDateTime.Equals(input.StatusDateTime))
                ) && 
                (
                    this.StatusDetail == input.StatusDetail ||
                    (this.StatusDetail != null &&
                    this.StatusDetail.Equals(input.StatusDetail))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ActualBilledHours != null)
                    hashCode = hashCode * 59 + this.ActualBilledHours.GetHashCode();
                if (this.ActualHours != null)
                    hashCode = hashCode * 59 + this.ActualHours.GetHashCode();
                if (this.ChangeOrdersBudget != null)
                    hashCode = hashCode * 59 + this.ChangeOrdersBudget.GetHashCode();
                if (this.ChangeOrdersRevenue != null)
                    hashCode = hashCode * 59 + this.ChangeOrdersRevenue.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.CompanyOwnerResourceID != null)
                    hashCode = hashCode * 59 + this.CompanyOwnerResourceID.GetHashCode();
                if (this.CompletedDateTime != null)
                    hashCode = hashCode * 59 + this.CompletedDateTime.GetHashCode();
                if (this.CompletedPercentage != null)
                    hashCode = hashCode * 59 + this.CompletedPercentage.GetHashCode();
                if (this.ContractID != null)
                    hashCode = hashCode * 59 + this.ContractID.GetHashCode();
                if (this.CreateDateTime != null)
                    hashCode = hashCode * 59 + this.CreateDateTime.GetHashCode();
                if (this.CreatorResourceID != null)
                    hashCode = hashCode * 59 + this.CreatorResourceID.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Duration != null)
                    hashCode = hashCode * 59 + this.Duration.GetHashCode();
                if (this.EndDateTime != null)
                    hashCode = hashCode * 59 + this.EndDateTime.GetHashCode();
                if (this.EstimatedSalesCost != null)
                    hashCode = hashCode * 59 + this.EstimatedSalesCost.GetHashCode();
                if (this.EstimatedTime != null)
                    hashCode = hashCode * 59 + this.EstimatedTime.GetHashCode();
                if (this.ExtProjectNumber != null)
                    hashCode = hashCode * 59 + this.ExtProjectNumber.GetHashCode();
                if (this.ExtProjectType != null)
                    hashCode = hashCode * 59 + this.ExtProjectType.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.LaborEstimatedCosts != null)
                    hashCode = hashCode * 59 + this.LaborEstimatedCosts.GetHashCode();
                if (this.LaborEstimatedMarginPercentage != null)
                    hashCode = hashCode * 59 + this.LaborEstimatedMarginPercentage.GetHashCode();
                if (this.LaborEstimatedRevenue != null)
                    hashCode = hashCode * 59 + this.LaborEstimatedRevenue.GetHashCode();
                if (this.LastActivityDateTime != null)
                    hashCode = hashCode * 59 + this.LastActivityDateTime.GetHashCode();
                if (this.LastActivityPersonType != null)
                    hashCode = hashCode * 59 + this.LastActivityPersonType.GetHashCode();
                if (this.LastActivityResourceID != null)
                    hashCode = hashCode * 59 + this.LastActivityResourceID.GetHashCode();
                if (this.OpportunityID != null)
                    hashCode = hashCode * 59 + this.OpportunityID.GetHashCode();
                if (this.OrganizationalLevelAssociationID != null)
                    hashCode = hashCode * 59 + this.OrganizationalLevelAssociationID.GetHashCode();
                if (this.OriginalEstimatedRevenue != null)
                    hashCode = hashCode * 59 + this.OriginalEstimatedRevenue.GetHashCode();
                if (this.ProjectCostEstimatedMarginPercentage != null)
                    hashCode = hashCode * 59 + this.ProjectCostEstimatedMarginPercentage.GetHashCode();
                if (this.ProjectCostsBudget != null)
                    hashCode = hashCode * 59 + this.ProjectCostsBudget.GetHashCode();
                if (this.ProjectCostsRevenue != null)
                    hashCode = hashCode * 59 + this.ProjectCostsRevenue.GetHashCode();
                if (this.ProjectLeadResourceID != null)
                    hashCode = hashCode * 59 + this.ProjectLeadResourceID.GetHashCode();
                if (this.ProjectName != null)
                    hashCode = hashCode * 59 + this.ProjectName.GetHashCode();
                if (this.ProjectNumber != null)
                    hashCode = hashCode * 59 + this.ProjectNumber.GetHashCode();
                if (this.ProjectType != null)
                    hashCode = hashCode * 59 + this.ProjectType.GetHashCode();
                if (this.PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderNumber.GetHashCode();
                if (this.Sgda != null)
                    hashCode = hashCode * 59 + this.Sgda.GetHashCode();
                if (this.StartDateTime != null)
                    hashCode = hashCode * 59 + this.StartDateTime.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusDateTime != null)
                    hashCode = hashCode * 59 + this.StatusDateTime.GetHashCode();
                if (this.StatusDetail != null)
                    hashCode = hashCode * 59 + this.StatusDetail.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
