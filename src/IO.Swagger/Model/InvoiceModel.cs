/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InvoiceModel
    /// </summary>
    [DataContract]
    public partial class InvoiceModel :  IEquatable<InvoiceModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="batchID">batchID.</param>
        /// <param name="comments">comments.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="createDateTime">createDateTime.</param>
        /// <param name="creatorResourceID">creatorResourceID.</param>
        /// <param name="dueDate">dueDate.</param>
        /// <param name="fromDate">fromDate.</param>
        /// <param name="invoiceDateTime">invoiceDateTime.</param>
        /// <param name="invoiceEditorTemplateID">invoiceEditorTemplateID.</param>
        /// <param name="invoiceNumber">invoiceNumber.</param>
        /// <param name="invoiceTotal">invoiceTotal.</param>
        /// <param name="isVoided">isVoided.</param>
        /// <param name="orderNumber">orderNumber.</param>
        /// <param name="paidDate">paidDate.</param>
        /// <param name="paymentTerm">paymentTerm.</param>
        /// <param name="taxGroup">taxGroup.</param>
        /// <param name="taxRegionName">taxRegionName.</param>
        /// <param name="toDate">toDate.</param>
        /// <param name="totalTaxValue">totalTaxValue.</param>
        /// <param name="voidedByResourceID">voidedByResourceID.</param>
        /// <param name="voidedDate">voidedDate.</param>
        /// <param name="webServiceDate">webServiceDate.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public InvoiceModel(long? id = default(long?), int? batchID = default(int?), string comments = default(string), int? companyID = default(int?), DateTime? createDateTime = default(DateTime?), int? creatorResourceID = default(int?), DateTime? dueDate = default(DateTime?), DateTime? fromDate = default(DateTime?), DateTime? invoiceDateTime = default(DateTime?), int? invoiceEditorTemplateID = default(int?), string invoiceNumber = default(string), double? invoiceTotal = default(double?), bool? isVoided = default(bool?), string orderNumber = default(string), DateTime? paidDate = default(DateTime?), int? paymentTerm = default(int?), int? taxGroup = default(int?), string taxRegionName = default(string), DateTime? toDate = default(DateTime?), double? totalTaxValue = default(double?), int? voidedByResourceID = default(int?), DateTime? voidedDate = default(DateTime?), DateTime? webServiceDate = default(DateTime?), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.BatchID = batchID;
            this.Comments = comments;
            this.CompanyID = companyID;
            this.CreateDateTime = createDateTime;
            this.CreatorResourceID = creatorResourceID;
            this.DueDate = dueDate;
            this.FromDate = fromDate;
            this.InvoiceDateTime = invoiceDateTime;
            this.InvoiceEditorTemplateID = invoiceEditorTemplateID;
            this.InvoiceNumber = invoiceNumber;
            this.InvoiceTotal = invoiceTotal;
            this.IsVoided = isVoided;
            this.OrderNumber = orderNumber;
            this.PaidDate = paidDate;
            this.PaymentTerm = paymentTerm;
            this.TaxGroup = taxGroup;
            this.TaxRegionName = taxRegionName;
            this.ToDate = toDate;
            this.TotalTaxValue = totalTaxValue;
            this.VoidedByResourceID = voidedByResourceID;
            this.VoidedDate = voidedDate;
            this.WebServiceDate = webServiceDate;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets BatchID
        /// </summary>
        [DataMember(Name="batchID", EmitDefaultValue=false)]
        public int? BatchID { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDateTime
        /// </summary>
        [DataMember(Name="createDateTime", EmitDefaultValue=false)]
        public DateTime? CreateDateTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID", EmitDefaultValue=false)]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets DueDate
        /// </summary>
        [DataMember(Name="dueDate", EmitDefaultValue=false)]
        public DateTime? DueDate { get; set; }

        /// <summary>
        /// Gets or Sets FromDate
        /// </summary>
        [DataMember(Name="fromDate", EmitDefaultValue=false)]
        public DateTime? FromDate { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceDateTime
        /// </summary>
        [DataMember(Name="invoiceDateTime", EmitDefaultValue=false)]
        public DateTime? InvoiceDateTime { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceEditorTemplateID
        /// </summary>
        [DataMember(Name="invoiceEditorTemplateID", EmitDefaultValue=false)]
        public int? InvoiceEditorTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNumber
        /// </summary>
        [DataMember(Name="invoiceNumber", EmitDefaultValue=false)]
        public string InvoiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTotal
        /// </summary>
        [DataMember(Name="invoiceTotal", EmitDefaultValue=false)]
        public double? InvoiceTotal { get; set; }

        /// <summary>
        /// Gets or Sets IsVoided
        /// </summary>
        [DataMember(Name="isVoided", EmitDefaultValue=false)]
        public bool? IsVoided { get; set; }

        /// <summary>
        /// Gets or Sets OrderNumber
        /// </summary>
        [DataMember(Name="orderNumber", EmitDefaultValue=false)]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets PaidDate
        /// </summary>
        [DataMember(Name="paidDate", EmitDefaultValue=false)]
        public DateTime? PaidDate { get; set; }

        /// <summary>
        /// Gets or Sets PaymentTerm
        /// </summary>
        [DataMember(Name="paymentTerm", EmitDefaultValue=false)]
        public int? PaymentTerm { get; set; }

        /// <summary>
        /// Gets or Sets TaxGroup
        /// </summary>
        [DataMember(Name="taxGroup", EmitDefaultValue=false)]
        public int? TaxGroup { get; set; }

        /// <summary>
        /// Gets or Sets TaxRegionName
        /// </summary>
        [DataMember(Name="taxRegionName", EmitDefaultValue=false)]
        public string TaxRegionName { get; set; }

        /// <summary>
        /// Gets or Sets ToDate
        /// </summary>
        [DataMember(Name="toDate", EmitDefaultValue=false)]
        public DateTime? ToDate { get; set; }

        /// <summary>
        /// Gets or Sets TotalTaxValue
        /// </summary>
        [DataMember(Name="totalTaxValue", EmitDefaultValue=false)]
        public double? TotalTaxValue { get; set; }

        /// <summary>
        /// Gets or Sets VoidedByResourceID
        /// </summary>
        [DataMember(Name="voidedByResourceID", EmitDefaultValue=false)]
        public int? VoidedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets VoidedDate
        /// </summary>
        [DataMember(Name="voidedDate", EmitDefaultValue=false)]
        public DateTime? VoidedDate { get; set; }

        /// <summary>
        /// Gets or Sets WebServiceDate
        /// </summary>
        [DataMember(Name="webServiceDate", EmitDefaultValue=false)]
        public DateTime? WebServiceDate { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InvoiceModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BatchID: ").Append(BatchID).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  DueDate: ").Append(DueDate).Append("\n");
            sb.Append("  FromDate: ").Append(FromDate).Append("\n");
            sb.Append("  InvoiceDateTime: ").Append(InvoiceDateTime).Append("\n");
            sb.Append("  InvoiceEditorTemplateID: ").Append(InvoiceEditorTemplateID).Append("\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  InvoiceTotal: ").Append(InvoiceTotal).Append("\n");
            sb.Append("  IsVoided: ").Append(IsVoided).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  PaidDate: ").Append(PaidDate).Append("\n");
            sb.Append("  PaymentTerm: ").Append(PaymentTerm).Append("\n");
            sb.Append("  TaxGroup: ").Append(TaxGroup).Append("\n");
            sb.Append("  TaxRegionName: ").Append(TaxRegionName).Append("\n");
            sb.Append("  ToDate: ").Append(ToDate).Append("\n");
            sb.Append("  TotalTaxValue: ").Append(TotalTaxValue).Append("\n");
            sb.Append("  VoidedByResourceID: ").Append(VoidedByResourceID).Append("\n");
            sb.Append("  VoidedDate: ").Append(VoidedDate).Append("\n");
            sb.Append("  WebServiceDate: ").Append(WebServiceDate).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InvoiceModel);
        }

        /// <summary>
        /// Returns true if InvoiceModel instances are equal
        /// </summary>
        /// <param name="input">Instance of InvoiceModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InvoiceModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.BatchID == input.BatchID ||
                    (this.BatchID != null &&
                    this.BatchID.Equals(input.BatchID))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.CreateDateTime == input.CreateDateTime ||
                    (this.CreateDateTime != null &&
                    this.CreateDateTime.Equals(input.CreateDateTime))
                ) && 
                (
                    this.CreatorResourceID == input.CreatorResourceID ||
                    (this.CreatorResourceID != null &&
                    this.CreatorResourceID.Equals(input.CreatorResourceID))
                ) && 
                (
                    this.DueDate == input.DueDate ||
                    (this.DueDate != null &&
                    this.DueDate.Equals(input.DueDate))
                ) && 
                (
                    this.FromDate == input.FromDate ||
                    (this.FromDate != null &&
                    this.FromDate.Equals(input.FromDate))
                ) && 
                (
                    this.InvoiceDateTime == input.InvoiceDateTime ||
                    (this.InvoiceDateTime != null &&
                    this.InvoiceDateTime.Equals(input.InvoiceDateTime))
                ) && 
                (
                    this.InvoiceEditorTemplateID == input.InvoiceEditorTemplateID ||
                    (this.InvoiceEditorTemplateID != null &&
                    this.InvoiceEditorTemplateID.Equals(input.InvoiceEditorTemplateID))
                ) && 
                (
                    this.InvoiceNumber == input.InvoiceNumber ||
                    (this.InvoiceNumber != null &&
                    this.InvoiceNumber.Equals(input.InvoiceNumber))
                ) && 
                (
                    this.InvoiceTotal == input.InvoiceTotal ||
                    (this.InvoiceTotal != null &&
                    this.InvoiceTotal.Equals(input.InvoiceTotal))
                ) && 
                (
                    this.IsVoided == input.IsVoided ||
                    (this.IsVoided != null &&
                    this.IsVoided.Equals(input.IsVoided))
                ) && 
                (
                    this.OrderNumber == input.OrderNumber ||
                    (this.OrderNumber != null &&
                    this.OrderNumber.Equals(input.OrderNumber))
                ) && 
                (
                    this.PaidDate == input.PaidDate ||
                    (this.PaidDate != null &&
                    this.PaidDate.Equals(input.PaidDate))
                ) && 
                (
                    this.PaymentTerm == input.PaymentTerm ||
                    (this.PaymentTerm != null &&
                    this.PaymentTerm.Equals(input.PaymentTerm))
                ) && 
                (
                    this.TaxGroup == input.TaxGroup ||
                    (this.TaxGroup != null &&
                    this.TaxGroup.Equals(input.TaxGroup))
                ) && 
                (
                    this.TaxRegionName == input.TaxRegionName ||
                    (this.TaxRegionName != null &&
                    this.TaxRegionName.Equals(input.TaxRegionName))
                ) && 
                (
                    this.ToDate == input.ToDate ||
                    (this.ToDate != null &&
                    this.ToDate.Equals(input.ToDate))
                ) && 
                (
                    this.TotalTaxValue == input.TotalTaxValue ||
                    (this.TotalTaxValue != null &&
                    this.TotalTaxValue.Equals(input.TotalTaxValue))
                ) && 
                (
                    this.VoidedByResourceID == input.VoidedByResourceID ||
                    (this.VoidedByResourceID != null &&
                    this.VoidedByResourceID.Equals(input.VoidedByResourceID))
                ) && 
                (
                    this.VoidedDate == input.VoidedDate ||
                    (this.VoidedDate != null &&
                    this.VoidedDate.Equals(input.VoidedDate))
                ) && 
                (
                    this.WebServiceDate == input.WebServiceDate ||
                    (this.WebServiceDate != null &&
                    this.WebServiceDate.Equals(input.WebServiceDate))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.BatchID != null)
                    hashCode = hashCode * 59 + this.BatchID.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.CreateDateTime != null)
                    hashCode = hashCode * 59 + this.CreateDateTime.GetHashCode();
                if (this.CreatorResourceID != null)
                    hashCode = hashCode * 59 + this.CreatorResourceID.GetHashCode();
                if (this.DueDate != null)
                    hashCode = hashCode * 59 + this.DueDate.GetHashCode();
                if (this.FromDate != null)
                    hashCode = hashCode * 59 + this.FromDate.GetHashCode();
                if (this.InvoiceDateTime != null)
                    hashCode = hashCode * 59 + this.InvoiceDateTime.GetHashCode();
                if (this.InvoiceEditorTemplateID != null)
                    hashCode = hashCode * 59 + this.InvoiceEditorTemplateID.GetHashCode();
                if (this.InvoiceNumber != null)
                    hashCode = hashCode * 59 + this.InvoiceNumber.GetHashCode();
                if (this.InvoiceTotal != null)
                    hashCode = hashCode * 59 + this.InvoiceTotal.GetHashCode();
                if (this.IsVoided != null)
                    hashCode = hashCode * 59 + this.IsVoided.GetHashCode();
                if (this.OrderNumber != null)
                    hashCode = hashCode * 59 + this.OrderNumber.GetHashCode();
                if (this.PaidDate != null)
                    hashCode = hashCode * 59 + this.PaidDate.GetHashCode();
                if (this.PaymentTerm != null)
                    hashCode = hashCode * 59 + this.PaymentTerm.GetHashCode();
                if (this.TaxGroup != null)
                    hashCode = hashCode * 59 + this.TaxGroup.GetHashCode();
                if (this.TaxRegionName != null)
                    hashCode = hashCode * 59 + this.TaxRegionName.GetHashCode();
                if (this.ToDate != null)
                    hashCode = hashCode * 59 + this.ToDate.GetHashCode();
                if (this.TotalTaxValue != null)
                    hashCode = hashCode * 59 + this.TotalTaxValue.GetHashCode();
                if (this.VoidedByResourceID != null)
                    hashCode = hashCode * 59 + this.VoidedByResourceID.GetHashCode();
                if (this.VoidedDate != null)
                    hashCode = hashCode * 59 + this.VoidedDate.GetHashCode();
                if (this.WebServiceDate != null)
                    hashCode = hashCode * 59 + this.WebServiceDate.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
