/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CompanyModel
    /// </summary>
    [DataContract]
    public partial class CompanyModel :  IEquatable<CompanyModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompanyModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="additionalAddressInformation">additionalAddressInformation.</param>
        /// <param name="address1">address1.</param>
        /// <param name="address2">address2.</param>
        /// <param name="alternatePhone1">alternatePhone1.</param>
        /// <param name="alternatePhone2">alternatePhone2.</param>
        /// <param name="apiVendorID">apiVendorID.</param>
        /// <param name="assetValue">assetValue.</param>
        /// <param name="billToCompanyLocationID">billToCompanyLocationID.</param>
        /// <param name="billToAdditionalAddressInformation">billToAdditionalAddressInformation.</param>
        /// <param name="billingAddress1">billingAddress1.</param>
        /// <param name="billingAddress2">billingAddress2.</param>
        /// <param name="billToAddressToUse">billToAddressToUse.</param>
        /// <param name="billToAttention">billToAttention.</param>
        /// <param name="billToCity">billToCity.</param>
        /// <param name="billToCountryID">billToCountryID.</param>
        /// <param name="billToState">billToState.</param>
        /// <param name="billToZipCode">billToZipCode.</param>
        /// <param name="city">city.</param>
        /// <param name="classification">classification.</param>
        /// <param name="companyName">companyName.</param>
        /// <param name="companyNumber">companyNumber.</param>
        /// <param name="companyType">companyType.</param>
        /// <param name="competitorID">competitorID.</param>
        /// <param name="countryID">countryID.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="createdByResourceID">createdByResourceID.</param>
        /// <param name="currencyID">currencyID.</param>
        /// <param name="fax">fax.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="invoiceEmailMessageID">invoiceEmailMessageID.</param>
        /// <param name="invoiceMethod">invoiceMethod.</param>
        /// <param name="invoiceNonContractItemsToParentCompany">invoiceNonContractItemsToParentCompany.</param>
        /// <param name="invoiceTemplateID">invoiceTemplateID.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="isClientPortalActive">isClientPortalActive.</param>
        /// <param name="isEnabledForComanaged">isEnabledForComanaged.</param>
        /// <param name="isTaskFireActive">isTaskFireActive.</param>
        /// <param name="isTaxExempt">isTaxExempt.</param>
        /// <param name="lastActivityDate">lastActivityDate.</param>
        /// <param name="lastTrackedModifiedDateTime">lastTrackedModifiedDateTime.</param>
        /// <param name="marketSegmentID">marketSegmentID.</param>
        /// <param name="ownerResourceID">ownerResourceID.</param>
        /// <param name="parentCompanyID">parentCompanyID.</param>
        /// <param name="phone">phone.</param>
        /// <param name="postalCode">postalCode.</param>
        /// <param name="purchaseOrderTemplateID">purchaseOrderTemplateID.</param>
        /// <param name="quoteEmailMessageID">quoteEmailMessageID.</param>
        /// <param name="quoteTemplateID">quoteTemplateID.</param>
        /// <param name="sicCode">sicCode.</param>
        /// <param name="state">state.</param>
        /// <param name="stockMarket">stockMarket.</param>
        /// <param name="stockSymbol">stockSymbol.</param>
        /// <param name="surveyCompanyRating">surveyCompanyRating.</param>
        /// <param name="taxID">taxID.</param>
        /// <param name="taxRegionID">taxRegionID.</param>
        /// <param name="territoryID">territoryID.</param>
        /// <param name="webAddress">webAddress.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public CompanyModel(long? id = default(long?), string additionalAddressInformation = default(string), string address1 = default(string), string address2 = default(string), string alternatePhone1 = default(string), string alternatePhone2 = default(string), int? apiVendorID = default(int?), double? assetValue = default(double?), int? billToCompanyLocationID = default(int?), string billToAdditionalAddressInformation = default(string), string billingAddress1 = default(string), string billingAddress2 = default(string), int? billToAddressToUse = default(int?), string billToAttention = default(string), string billToCity = default(string), int? billToCountryID = default(int?), string billToState = default(string), string billToZipCode = default(string), string city = default(string), int? classification = default(int?), string companyName = default(string), string companyNumber = default(string), int? companyType = default(int?), int? competitorID = default(int?), int? countryID = default(int?), DateTime? createDate = default(DateTime?), int? createdByResourceID = default(int?), int? currencyID = default(int?), string fax = default(string), int? impersonatorCreatorResourceID = default(int?), int? invoiceEmailMessageID = default(int?), int? invoiceMethod = default(int?), bool? invoiceNonContractItemsToParentCompany = default(bool?), int? invoiceTemplateID = default(int?), bool? isActive = default(bool?), bool? isClientPortalActive = default(bool?), bool? isEnabledForComanaged = default(bool?), bool? isTaskFireActive = default(bool?), bool? isTaxExempt = default(bool?), DateTime? lastActivityDate = default(DateTime?), DateTime? lastTrackedModifiedDateTime = default(DateTime?), int? marketSegmentID = default(int?), int? ownerResourceID = default(int?), int? parentCompanyID = default(int?), string phone = default(string), string postalCode = default(string), int? purchaseOrderTemplateID = default(int?), int? quoteEmailMessageID = default(int?), int? quoteTemplateID = default(int?), string sicCode = default(string), string state = default(string), string stockMarket = default(string), string stockSymbol = default(string), double? surveyCompanyRating = default(double?), string taxID = default(string), int? taxRegionID = default(int?), int? territoryID = default(int?), string webAddress = default(string), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.AdditionalAddressInformation = additionalAddressInformation;
            this.Address1 = address1;
            this.Address2 = address2;
            this.AlternatePhone1 = alternatePhone1;
            this.AlternatePhone2 = alternatePhone2;
            this.ApiVendorID = apiVendorID;
            this.AssetValue = assetValue;
            this.BillToCompanyLocationID = billToCompanyLocationID;
            this.BillToAdditionalAddressInformation = billToAdditionalAddressInformation;
            this.BillingAddress1 = billingAddress1;
            this.BillingAddress2 = billingAddress2;
            this.BillToAddressToUse = billToAddressToUse;
            this.BillToAttention = billToAttention;
            this.BillToCity = billToCity;
            this.BillToCountryID = billToCountryID;
            this.BillToState = billToState;
            this.BillToZipCode = billToZipCode;
            this.City = city;
            this.Classification = classification;
            this.CompanyName = companyName;
            this.CompanyNumber = companyNumber;
            this.CompanyType = companyType;
            this.CompetitorID = competitorID;
            this.CountryID = countryID;
            this.CreateDate = createDate;
            this.CreatedByResourceID = createdByResourceID;
            this.CurrencyID = currencyID;
            this.Fax = fax;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.InvoiceEmailMessageID = invoiceEmailMessageID;
            this.InvoiceMethod = invoiceMethod;
            this.InvoiceNonContractItemsToParentCompany = invoiceNonContractItemsToParentCompany;
            this.InvoiceTemplateID = invoiceTemplateID;
            this.IsActive = isActive;
            this.IsClientPortalActive = isClientPortalActive;
            this.IsEnabledForComanaged = isEnabledForComanaged;
            this.IsTaskFireActive = isTaskFireActive;
            this.IsTaxExempt = isTaxExempt;
            this.LastActivityDate = lastActivityDate;
            this.LastTrackedModifiedDateTime = lastTrackedModifiedDateTime;
            this.MarketSegmentID = marketSegmentID;
            this.OwnerResourceID = ownerResourceID;
            this.ParentCompanyID = parentCompanyID;
            this.Phone = phone;
            this.PostalCode = postalCode;
            this.PurchaseOrderTemplateID = purchaseOrderTemplateID;
            this.QuoteEmailMessageID = quoteEmailMessageID;
            this.QuoteTemplateID = quoteTemplateID;
            this.SicCode = sicCode;
            this.State = state;
            this.StockMarket = stockMarket;
            this.StockSymbol = stockSymbol;
            this.SurveyCompanyRating = surveyCompanyRating;
            this.TaxID = taxID;
            this.TaxRegionID = taxRegionID;
            this.TerritoryID = territoryID;
            this.WebAddress = webAddress;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAddressInformation
        /// </summary>
        [DataMember(Name="additionalAddressInformation", EmitDefaultValue=false)]
        public string AdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name="address1", EmitDefaultValue=false)]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone1
        /// </summary>
        [DataMember(Name="alternatePhone1", EmitDefaultValue=false)]
        public string AlternatePhone1 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone2
        /// </summary>
        [DataMember(Name="alternatePhone2", EmitDefaultValue=false)]
        public string AlternatePhone2 { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID", EmitDefaultValue=false)]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets AssetValue
        /// </summary>
        [DataMember(Name="assetValue", EmitDefaultValue=false)]
        public double? AssetValue { get; set; }

        /// <summary>
        /// Gets or Sets BillToCompanyLocationID
        /// </summary>
        [DataMember(Name="billToCompanyLocationID", EmitDefaultValue=false)]
        public int? BillToCompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets BillToAdditionalAddressInformation
        /// </summary>
        [DataMember(Name="billToAdditionalAddressInformation", EmitDefaultValue=false)]
        public string BillToAdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress1
        /// </summary>
        [DataMember(Name="billingAddress1", EmitDefaultValue=false)]
        public string BillingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress2
        /// </summary>
        [DataMember(Name="billingAddress2", EmitDefaultValue=false)]
        public string BillingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressToUse
        /// </summary>
        [DataMember(Name="billToAddressToUse", EmitDefaultValue=false)]
        public int? BillToAddressToUse { get; set; }

        /// <summary>
        /// Gets or Sets BillToAttention
        /// </summary>
        [DataMember(Name="billToAttention", EmitDefaultValue=false)]
        public string BillToAttention { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity", EmitDefaultValue=false)]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountryID
        /// </summary>
        [DataMember(Name="billToCountryID", EmitDefaultValue=false)]
        public int? BillToCountryID { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState", EmitDefaultValue=false)]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets BillToZipCode
        /// </summary>
        [DataMember(Name="billToZipCode", EmitDefaultValue=false)]
        public string BillToZipCode { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Classification
        /// </summary>
        [DataMember(Name="classification", EmitDefaultValue=false)]
        public int? Classification { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyNumber
        /// </summary>
        [DataMember(Name="companyNumber", EmitDefaultValue=false)]
        public string CompanyNumber { get; set; }

        /// <summary>
        /// Gets or Sets CompanyType
        /// </summary>
        [DataMember(Name="companyType", EmitDefaultValue=false)]
        public int? CompanyType { get; set; }

        /// <summary>
        /// Gets or Sets CompetitorID
        /// </summary>
        [DataMember(Name="competitorID", EmitDefaultValue=false)]
        public int? CompetitorID { get; set; }

        /// <summary>
        /// Gets or Sets CountryID
        /// </summary>
        [DataMember(Name="countryID", EmitDefaultValue=false)]
        public int? CountryID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByResourceID
        /// </summary>
        [DataMember(Name="createdByResourceID", EmitDefaultValue=false)]
        public int? CreatedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyID
        /// </summary>
        [DataMember(Name="currencyID", EmitDefaultValue=false)]
        public int? CurrencyID { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceEmailMessageID
        /// </summary>
        [DataMember(Name="invoiceEmailMessageID", EmitDefaultValue=false)]
        public int? InvoiceEmailMessageID { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceMethod
        /// </summary>
        [DataMember(Name="invoiceMethod", EmitDefaultValue=false)]
        public int? InvoiceMethod { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNonContractItemsToParentCompany
        /// </summary>
        [DataMember(Name="invoiceNonContractItemsToParentCompany", EmitDefaultValue=false)]
        public bool? InvoiceNonContractItemsToParentCompany { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTemplateID
        /// </summary>
        [DataMember(Name="invoiceTemplateID", EmitDefaultValue=false)]
        public int? InvoiceTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive", EmitDefaultValue=false)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsClientPortalActive
        /// </summary>
        [DataMember(Name="isClientPortalActive", EmitDefaultValue=false)]
        public bool? IsClientPortalActive { get; set; }

        /// <summary>
        /// Gets or Sets IsEnabledForComanaged
        /// </summary>
        [DataMember(Name="isEnabledForComanaged", EmitDefaultValue=false)]
        public bool? IsEnabledForComanaged { get; set; }

        /// <summary>
        /// Gets or Sets IsTaskFireActive
        /// </summary>
        [DataMember(Name="isTaskFireActive", EmitDefaultValue=false)]
        public bool? IsTaskFireActive { get; set; }

        /// <summary>
        /// Gets or Sets IsTaxExempt
        /// </summary>
        [DataMember(Name="isTaxExempt", EmitDefaultValue=false)]
        public bool? IsTaxExempt { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate", EmitDefaultValue=false)]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastTrackedModifiedDateTime
        /// </summary>
        [DataMember(Name="lastTrackedModifiedDateTime", EmitDefaultValue=false)]
        public DateTime? LastTrackedModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets MarketSegmentID
        /// </summary>
        [DataMember(Name="marketSegmentID", EmitDefaultValue=false)]
        public int? MarketSegmentID { get; set; }

        /// <summary>
        /// Gets or Sets OwnerResourceID
        /// </summary>
        [DataMember(Name="ownerResourceID", EmitDefaultValue=false)]
        public int? OwnerResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ParentCompanyID
        /// </summary>
        [DataMember(Name="parentCompanyID", EmitDefaultValue=false)]
        public int? ParentCompanyID { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderTemplateID
        /// </summary>
        [DataMember(Name="purchaseOrderTemplateID", EmitDefaultValue=false)]
        public int? PurchaseOrderTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets QuoteEmailMessageID
        /// </summary>
        [DataMember(Name="quoteEmailMessageID", EmitDefaultValue=false)]
        public int? QuoteEmailMessageID { get; set; }

        /// <summary>
        /// Gets or Sets QuoteTemplateID
        /// </summary>
        [DataMember(Name="quoteTemplateID", EmitDefaultValue=false)]
        public int? QuoteTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets SicCode
        /// </summary>
        [DataMember(Name="sicCode", EmitDefaultValue=false)]
        public string SicCode { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets StockMarket
        /// </summary>
        [DataMember(Name="stockMarket", EmitDefaultValue=false)]
        public string StockMarket { get; set; }

        /// <summary>
        /// Gets or Sets StockSymbol
        /// </summary>
        [DataMember(Name="stockSymbol", EmitDefaultValue=false)]
        public string StockSymbol { get; set; }

        /// <summary>
        /// Gets or Sets SurveyCompanyRating
        /// </summary>
        [DataMember(Name="surveyCompanyRating", EmitDefaultValue=false)]
        public double? SurveyCompanyRating { get; set; }

        /// <summary>
        /// Gets or Sets TaxID
        /// </summary>
        [DataMember(Name="taxID", EmitDefaultValue=false)]
        public string TaxID { get; set; }

        /// <summary>
        /// Gets or Sets TaxRegionID
        /// </summary>
        [DataMember(Name="taxRegionID", EmitDefaultValue=false)]
        public int? TaxRegionID { get; set; }

        /// <summary>
        /// Gets or Sets TerritoryID
        /// </summary>
        [DataMember(Name="territoryID", EmitDefaultValue=false)]
        public int? TerritoryID { get; set; }

        /// <summary>
        /// Gets or Sets WebAddress
        /// </summary>
        [DataMember(Name="webAddress", EmitDefaultValue=false)]
        public string WebAddress { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompanyModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalAddressInformation: ").Append(AdditionalAddressInformation).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  AlternatePhone1: ").Append(AlternatePhone1).Append("\n");
            sb.Append("  AlternatePhone2: ").Append(AlternatePhone2).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  AssetValue: ").Append(AssetValue).Append("\n");
            sb.Append("  BillToCompanyLocationID: ").Append(BillToCompanyLocationID).Append("\n");
            sb.Append("  BillToAdditionalAddressInformation: ").Append(BillToAdditionalAddressInformation).Append("\n");
            sb.Append("  BillingAddress1: ").Append(BillingAddress1).Append("\n");
            sb.Append("  BillingAddress2: ").Append(BillingAddress2).Append("\n");
            sb.Append("  BillToAddressToUse: ").Append(BillToAddressToUse).Append("\n");
            sb.Append("  BillToAttention: ").Append(BillToAttention).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToCountryID: ").Append(BillToCountryID).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  BillToZipCode: ").Append(BillToZipCode).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Classification: ").Append(Classification).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyNumber: ").Append(CompanyNumber).Append("\n");
            sb.Append("  CompanyType: ").Append(CompanyType).Append("\n");
            sb.Append("  CompetitorID: ").Append(CompetitorID).Append("\n");
            sb.Append("  CountryID: ").Append(CountryID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatedByResourceID: ").Append(CreatedByResourceID).Append("\n");
            sb.Append("  CurrencyID: ").Append(CurrencyID).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  InvoiceEmailMessageID: ").Append(InvoiceEmailMessageID).Append("\n");
            sb.Append("  InvoiceMethod: ").Append(InvoiceMethod).Append("\n");
            sb.Append("  InvoiceNonContractItemsToParentCompany: ").Append(InvoiceNonContractItemsToParentCompany).Append("\n");
            sb.Append("  InvoiceTemplateID: ").Append(InvoiceTemplateID).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsClientPortalActive: ").Append(IsClientPortalActive).Append("\n");
            sb.Append("  IsEnabledForComanaged: ").Append(IsEnabledForComanaged).Append("\n");
            sb.Append("  IsTaskFireActive: ").Append(IsTaskFireActive).Append("\n");
            sb.Append("  IsTaxExempt: ").Append(IsTaxExempt).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastTrackedModifiedDateTime: ").Append(LastTrackedModifiedDateTime).Append("\n");
            sb.Append("  MarketSegmentID: ").Append(MarketSegmentID).Append("\n");
            sb.Append("  OwnerResourceID: ").Append(OwnerResourceID).Append("\n");
            sb.Append("  ParentCompanyID: ").Append(ParentCompanyID).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  PurchaseOrderTemplateID: ").Append(PurchaseOrderTemplateID).Append("\n");
            sb.Append("  QuoteEmailMessageID: ").Append(QuoteEmailMessageID).Append("\n");
            sb.Append("  QuoteTemplateID: ").Append(QuoteTemplateID).Append("\n");
            sb.Append("  SicCode: ").Append(SicCode).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  StockMarket: ").Append(StockMarket).Append("\n");
            sb.Append("  StockSymbol: ").Append(StockSymbol).Append("\n");
            sb.Append("  SurveyCompanyRating: ").Append(SurveyCompanyRating).Append("\n");
            sb.Append("  TaxID: ").Append(TaxID).Append("\n");
            sb.Append("  TaxRegionID: ").Append(TaxRegionID).Append("\n");
            sb.Append("  TerritoryID: ").Append(TerritoryID).Append("\n");
            sb.Append("  WebAddress: ").Append(WebAddress).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompanyModel);
        }

        /// <summary>
        /// Returns true if CompanyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of CompanyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompanyModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AdditionalAddressInformation == input.AdditionalAddressInformation ||
                    (this.AdditionalAddressInformation != null &&
                    this.AdditionalAddressInformation.Equals(input.AdditionalAddressInformation))
                ) && 
                (
                    this.Address1 == input.Address1 ||
                    (this.Address1 != null &&
                    this.Address1.Equals(input.Address1))
                ) && 
                (
                    this.Address2 == input.Address2 ||
                    (this.Address2 != null &&
                    this.Address2.Equals(input.Address2))
                ) && 
                (
                    this.AlternatePhone1 == input.AlternatePhone1 ||
                    (this.AlternatePhone1 != null &&
                    this.AlternatePhone1.Equals(input.AlternatePhone1))
                ) && 
                (
                    this.AlternatePhone2 == input.AlternatePhone2 ||
                    (this.AlternatePhone2 != null &&
                    this.AlternatePhone2.Equals(input.AlternatePhone2))
                ) && 
                (
                    this.ApiVendorID == input.ApiVendorID ||
                    (this.ApiVendorID != null &&
                    this.ApiVendorID.Equals(input.ApiVendorID))
                ) && 
                (
                    this.AssetValue == input.AssetValue ||
                    (this.AssetValue != null &&
                    this.AssetValue.Equals(input.AssetValue))
                ) && 
                (
                    this.BillToCompanyLocationID == input.BillToCompanyLocationID ||
                    (this.BillToCompanyLocationID != null &&
                    this.BillToCompanyLocationID.Equals(input.BillToCompanyLocationID))
                ) && 
                (
                    this.BillToAdditionalAddressInformation == input.BillToAdditionalAddressInformation ||
                    (this.BillToAdditionalAddressInformation != null &&
                    this.BillToAdditionalAddressInformation.Equals(input.BillToAdditionalAddressInformation))
                ) && 
                (
                    this.BillingAddress1 == input.BillingAddress1 ||
                    (this.BillingAddress1 != null &&
                    this.BillingAddress1.Equals(input.BillingAddress1))
                ) && 
                (
                    this.BillingAddress2 == input.BillingAddress2 ||
                    (this.BillingAddress2 != null &&
                    this.BillingAddress2.Equals(input.BillingAddress2))
                ) && 
                (
                    this.BillToAddressToUse == input.BillToAddressToUse ||
                    (this.BillToAddressToUse != null &&
                    this.BillToAddressToUse.Equals(input.BillToAddressToUse))
                ) && 
                (
                    this.BillToAttention == input.BillToAttention ||
                    (this.BillToAttention != null &&
                    this.BillToAttention.Equals(input.BillToAttention))
                ) && 
                (
                    this.BillToCity == input.BillToCity ||
                    (this.BillToCity != null &&
                    this.BillToCity.Equals(input.BillToCity))
                ) && 
                (
                    this.BillToCountryID == input.BillToCountryID ||
                    (this.BillToCountryID != null &&
                    this.BillToCountryID.Equals(input.BillToCountryID))
                ) && 
                (
                    this.BillToState == input.BillToState ||
                    (this.BillToState != null &&
                    this.BillToState.Equals(input.BillToState))
                ) && 
                (
                    this.BillToZipCode == input.BillToZipCode ||
                    (this.BillToZipCode != null &&
                    this.BillToZipCode.Equals(input.BillToZipCode))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.Classification == input.Classification ||
                    (this.Classification != null &&
                    this.Classification.Equals(input.Classification))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyNumber == input.CompanyNumber ||
                    (this.CompanyNumber != null &&
                    this.CompanyNumber.Equals(input.CompanyNumber))
                ) && 
                (
                    this.CompanyType == input.CompanyType ||
                    (this.CompanyType != null &&
                    this.CompanyType.Equals(input.CompanyType))
                ) && 
                (
                    this.CompetitorID == input.CompetitorID ||
                    (this.CompetitorID != null &&
                    this.CompetitorID.Equals(input.CompetitorID))
                ) && 
                (
                    this.CountryID == input.CountryID ||
                    (this.CountryID != null &&
                    this.CountryID.Equals(input.CountryID))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.CreatedByResourceID == input.CreatedByResourceID ||
                    (this.CreatedByResourceID != null &&
                    this.CreatedByResourceID.Equals(input.CreatedByResourceID))
                ) && 
                (
                    this.CurrencyID == input.CurrencyID ||
                    (this.CurrencyID != null &&
                    this.CurrencyID.Equals(input.CurrencyID))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.InvoiceEmailMessageID == input.InvoiceEmailMessageID ||
                    (this.InvoiceEmailMessageID != null &&
                    this.InvoiceEmailMessageID.Equals(input.InvoiceEmailMessageID))
                ) && 
                (
                    this.InvoiceMethod == input.InvoiceMethod ||
                    (this.InvoiceMethod != null &&
                    this.InvoiceMethod.Equals(input.InvoiceMethod))
                ) && 
                (
                    this.InvoiceNonContractItemsToParentCompany == input.InvoiceNonContractItemsToParentCompany ||
                    (this.InvoiceNonContractItemsToParentCompany != null &&
                    this.InvoiceNonContractItemsToParentCompany.Equals(input.InvoiceNonContractItemsToParentCompany))
                ) && 
                (
                    this.InvoiceTemplateID == input.InvoiceTemplateID ||
                    (this.InvoiceTemplateID != null &&
                    this.InvoiceTemplateID.Equals(input.InvoiceTemplateID))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.IsClientPortalActive == input.IsClientPortalActive ||
                    (this.IsClientPortalActive != null &&
                    this.IsClientPortalActive.Equals(input.IsClientPortalActive))
                ) && 
                (
                    this.IsEnabledForComanaged == input.IsEnabledForComanaged ||
                    (this.IsEnabledForComanaged != null &&
                    this.IsEnabledForComanaged.Equals(input.IsEnabledForComanaged))
                ) && 
                (
                    this.IsTaskFireActive == input.IsTaskFireActive ||
                    (this.IsTaskFireActive != null &&
                    this.IsTaskFireActive.Equals(input.IsTaskFireActive))
                ) && 
                (
                    this.IsTaxExempt == input.IsTaxExempt ||
                    (this.IsTaxExempt != null &&
                    this.IsTaxExempt.Equals(input.IsTaxExempt))
                ) && 
                (
                    this.LastActivityDate == input.LastActivityDate ||
                    (this.LastActivityDate != null &&
                    this.LastActivityDate.Equals(input.LastActivityDate))
                ) && 
                (
                    this.LastTrackedModifiedDateTime == input.LastTrackedModifiedDateTime ||
                    (this.LastTrackedModifiedDateTime != null &&
                    this.LastTrackedModifiedDateTime.Equals(input.LastTrackedModifiedDateTime))
                ) && 
                (
                    this.MarketSegmentID == input.MarketSegmentID ||
                    (this.MarketSegmentID != null &&
                    this.MarketSegmentID.Equals(input.MarketSegmentID))
                ) && 
                (
                    this.OwnerResourceID == input.OwnerResourceID ||
                    (this.OwnerResourceID != null &&
                    this.OwnerResourceID.Equals(input.OwnerResourceID))
                ) && 
                (
                    this.ParentCompanyID == input.ParentCompanyID ||
                    (this.ParentCompanyID != null &&
                    this.ParentCompanyID.Equals(input.ParentCompanyID))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.PurchaseOrderTemplateID == input.PurchaseOrderTemplateID ||
                    (this.PurchaseOrderTemplateID != null &&
                    this.PurchaseOrderTemplateID.Equals(input.PurchaseOrderTemplateID))
                ) && 
                (
                    this.QuoteEmailMessageID == input.QuoteEmailMessageID ||
                    (this.QuoteEmailMessageID != null &&
                    this.QuoteEmailMessageID.Equals(input.QuoteEmailMessageID))
                ) && 
                (
                    this.QuoteTemplateID == input.QuoteTemplateID ||
                    (this.QuoteTemplateID != null &&
                    this.QuoteTemplateID.Equals(input.QuoteTemplateID))
                ) && 
                (
                    this.SicCode == input.SicCode ||
                    (this.SicCode != null &&
                    this.SicCode.Equals(input.SicCode))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.StockMarket == input.StockMarket ||
                    (this.StockMarket != null &&
                    this.StockMarket.Equals(input.StockMarket))
                ) && 
                (
                    this.StockSymbol == input.StockSymbol ||
                    (this.StockSymbol != null &&
                    this.StockSymbol.Equals(input.StockSymbol))
                ) && 
                (
                    this.SurveyCompanyRating == input.SurveyCompanyRating ||
                    (this.SurveyCompanyRating != null &&
                    this.SurveyCompanyRating.Equals(input.SurveyCompanyRating))
                ) && 
                (
                    this.TaxID == input.TaxID ||
                    (this.TaxID != null &&
                    this.TaxID.Equals(input.TaxID))
                ) && 
                (
                    this.TaxRegionID == input.TaxRegionID ||
                    (this.TaxRegionID != null &&
                    this.TaxRegionID.Equals(input.TaxRegionID))
                ) && 
                (
                    this.TerritoryID == input.TerritoryID ||
                    (this.TerritoryID != null &&
                    this.TerritoryID.Equals(input.TerritoryID))
                ) && 
                (
                    this.WebAddress == input.WebAddress ||
                    (this.WebAddress != null &&
                    this.WebAddress.Equals(input.WebAddress))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + this.AdditionalAddressInformation.GetHashCode();
                if (this.Address1 != null)
                    hashCode = hashCode * 59 + this.Address1.GetHashCode();
                if (this.Address2 != null)
                    hashCode = hashCode * 59 + this.Address2.GetHashCode();
                if (this.AlternatePhone1 != null)
                    hashCode = hashCode * 59 + this.AlternatePhone1.GetHashCode();
                if (this.AlternatePhone2 != null)
                    hashCode = hashCode * 59 + this.AlternatePhone2.GetHashCode();
                if (this.ApiVendorID != null)
                    hashCode = hashCode * 59 + this.ApiVendorID.GetHashCode();
                if (this.AssetValue != null)
                    hashCode = hashCode * 59 + this.AssetValue.GetHashCode();
                if (this.BillToCompanyLocationID != null)
                    hashCode = hashCode * 59 + this.BillToCompanyLocationID.GetHashCode();
                if (this.BillToAdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + this.BillToAdditionalAddressInformation.GetHashCode();
                if (this.BillingAddress1 != null)
                    hashCode = hashCode * 59 + this.BillingAddress1.GetHashCode();
                if (this.BillingAddress2 != null)
                    hashCode = hashCode * 59 + this.BillingAddress2.GetHashCode();
                if (this.BillToAddressToUse != null)
                    hashCode = hashCode * 59 + this.BillToAddressToUse.GetHashCode();
                if (this.BillToAttention != null)
                    hashCode = hashCode * 59 + this.BillToAttention.GetHashCode();
                if (this.BillToCity != null)
                    hashCode = hashCode * 59 + this.BillToCity.GetHashCode();
                if (this.BillToCountryID != null)
                    hashCode = hashCode * 59 + this.BillToCountryID.GetHashCode();
                if (this.BillToState != null)
                    hashCode = hashCode * 59 + this.BillToState.GetHashCode();
                if (this.BillToZipCode != null)
                    hashCode = hashCode * 59 + this.BillToZipCode.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.Classification != null)
                    hashCode = hashCode * 59 + this.Classification.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyNumber != null)
                    hashCode = hashCode * 59 + this.CompanyNumber.GetHashCode();
                if (this.CompanyType != null)
                    hashCode = hashCode * 59 + this.CompanyType.GetHashCode();
                if (this.CompetitorID != null)
                    hashCode = hashCode * 59 + this.CompetitorID.GetHashCode();
                if (this.CountryID != null)
                    hashCode = hashCode * 59 + this.CountryID.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.CreatedByResourceID != null)
                    hashCode = hashCode * 59 + this.CreatedByResourceID.GetHashCode();
                if (this.CurrencyID != null)
                    hashCode = hashCode * 59 + this.CurrencyID.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.InvoiceEmailMessageID != null)
                    hashCode = hashCode * 59 + this.InvoiceEmailMessageID.GetHashCode();
                if (this.InvoiceMethod != null)
                    hashCode = hashCode * 59 + this.InvoiceMethod.GetHashCode();
                if (this.InvoiceNonContractItemsToParentCompany != null)
                    hashCode = hashCode * 59 + this.InvoiceNonContractItemsToParentCompany.GetHashCode();
                if (this.InvoiceTemplateID != null)
                    hashCode = hashCode * 59 + this.InvoiceTemplateID.GetHashCode();
                if (this.IsActive != null)
                    hashCode = hashCode * 59 + this.IsActive.GetHashCode();
                if (this.IsClientPortalActive != null)
                    hashCode = hashCode * 59 + this.IsClientPortalActive.GetHashCode();
                if (this.IsEnabledForComanaged != null)
                    hashCode = hashCode * 59 + this.IsEnabledForComanaged.GetHashCode();
                if (this.IsTaskFireActive != null)
                    hashCode = hashCode * 59 + this.IsTaskFireActive.GetHashCode();
                if (this.IsTaxExempt != null)
                    hashCode = hashCode * 59 + this.IsTaxExempt.GetHashCode();
                if (this.LastActivityDate != null)
                    hashCode = hashCode * 59 + this.LastActivityDate.GetHashCode();
                if (this.LastTrackedModifiedDateTime != null)
                    hashCode = hashCode * 59 + this.LastTrackedModifiedDateTime.GetHashCode();
                if (this.MarketSegmentID != null)
                    hashCode = hashCode * 59 + this.MarketSegmentID.GetHashCode();
                if (this.OwnerResourceID != null)
                    hashCode = hashCode * 59 + this.OwnerResourceID.GetHashCode();
                if (this.ParentCompanyID != null)
                    hashCode = hashCode * 59 + this.ParentCompanyID.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.PurchaseOrderTemplateID != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderTemplateID.GetHashCode();
                if (this.QuoteEmailMessageID != null)
                    hashCode = hashCode * 59 + this.QuoteEmailMessageID.GetHashCode();
                if (this.QuoteTemplateID != null)
                    hashCode = hashCode * 59 + this.QuoteTemplateID.GetHashCode();
                if (this.SicCode != null)
                    hashCode = hashCode * 59 + this.SicCode.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.StockMarket != null)
                    hashCode = hashCode * 59 + this.StockMarket.GetHashCode();
                if (this.StockSymbol != null)
                    hashCode = hashCode * 59 + this.StockSymbol.GetHashCode();
                if (this.SurveyCompanyRating != null)
                    hashCode = hashCode * 59 + this.SurveyCompanyRating.GetHashCode();
                if (this.TaxID != null)
                    hashCode = hashCode * 59 + this.TaxID.GetHashCode();
                if (this.TaxRegionID != null)
                    hashCode = hashCode * 59 + this.TaxRegionID.GetHashCode();
                if (this.TerritoryID != null)
                    hashCode = hashCode * 59 + this.TerritoryID.GetHashCode();
                if (this.WebAddress != null)
                    hashCode = hashCode * 59 + this.WebAddress.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
