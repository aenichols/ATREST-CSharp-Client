/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// QuoteModel
    /// </summary>
    [DataContract]
    public partial class QuoteModel :  IEquatable<QuoteModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuoteModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="approvalStatus">approvalStatus.</param>
        /// <param name="approvalStatusChangedByResourceID">approvalStatusChangedByResourceID.</param>
        /// <param name="approvalStatusChangedDate">approvalStatusChangedDate.</param>
        /// <param name="billToLocationID">billToLocationID.</param>
        /// <param name="calculateTaxSeparately">calculateTaxSeparately.</param>
        /// <param name="comment">comment.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="contactID">contactID.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="creatorResourceID">creatorResourceID.</param>
        /// <param name="description">description.</param>
        /// <param name="effectiveDate">effectiveDate.</param>
        /// <param name="expirationDate">expirationDate.</param>
        /// <param name="extApprovalContactResponse">extApprovalContactResponse.</param>
        /// <param name="extApprovalResponseDate">extApprovalResponseDate.</param>
        /// <param name="extApprovalResponseSignature">extApprovalResponseSignature.</param>
        /// <param name="externalQuoteNumber">externalQuoteNumber.</param>
        /// <param name="groupByID">groupByID.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="lastActivityDate">lastActivityDate.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        /// <param name="name">name.</param>
        /// <param name="opportunityID">opportunityID.</param>
        /// <param name="paymentTerm">paymentTerm.</param>
        /// <param name="paymentType">paymentType.</param>
        /// <param name="primaryQuote">primaryQuote.</param>
        /// <param name="proposalProjectID">proposalProjectID.</param>
        /// <param name="purchaseOrderNumber">purchaseOrderNumber.</param>
        /// <param name="quoteNumber">quoteNumber.</param>
        /// <param name="quoteTemplateID">quoteTemplateID.</param>
        /// <param name="shippingType">shippingType.</param>
        /// <param name="shipToLocationID">shipToLocationID.</param>
        /// <param name="showEachTaxInGroup">showEachTaxInGroup.</param>
        /// <param name="showTaxCategory">showTaxCategory.</param>
        /// <param name="soldToLocationID">soldToLocationID.</param>
        /// <param name="taxRegionID">taxRegionID.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public QuoteModel(long? id = default(long?), int? approvalStatus = default(int?), int? approvalStatusChangedByResourceID = default(int?), DateTime? approvalStatusChangedDate = default(DateTime?), int? billToLocationID = default(int?), bool? calculateTaxSeparately = default(bool?), string comment = default(string), int? companyID = default(int?), int? contactID = default(int?), DateTime? createDate = default(DateTime?), int? creatorResourceID = default(int?), string description = default(string), DateTime? effectiveDate = default(DateTime?), DateTime? expirationDate = default(DateTime?), int? extApprovalContactResponse = default(int?), DateTime? extApprovalResponseDate = default(DateTime?), string extApprovalResponseSignature = default(string), string externalQuoteNumber = default(string), int? groupByID = default(int?), int? impersonatorCreatorResourceID = default(int?), bool? isActive = default(bool?), DateTime? lastActivityDate = default(DateTime?), int? lastModifiedBy = default(int?), string name = default(string), int? opportunityID = default(int?), int? paymentTerm = default(int?), int? paymentType = default(int?), bool? primaryQuote = default(bool?), int? proposalProjectID = default(int?), string purchaseOrderNumber = default(string), int? quoteNumber = default(int?), int? quoteTemplateID = default(int?), int? shippingType = default(int?), int? shipToLocationID = default(int?), bool? showEachTaxInGroup = default(bool?), bool? showTaxCategory = default(bool?), int? soldToLocationID = default(int?), int? taxRegionID = default(int?), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.ApprovalStatus = approvalStatus;
            this.ApprovalStatusChangedByResourceID = approvalStatusChangedByResourceID;
            this.ApprovalStatusChangedDate = approvalStatusChangedDate;
            this.BillToLocationID = billToLocationID;
            this.CalculateTaxSeparately = calculateTaxSeparately;
            this.Comment = comment;
            this.CompanyID = companyID;
            this.ContactID = contactID;
            this.CreateDate = createDate;
            this.CreatorResourceID = creatorResourceID;
            this.Description = description;
            this.EffectiveDate = effectiveDate;
            this.ExpirationDate = expirationDate;
            this.ExtApprovalContactResponse = extApprovalContactResponse;
            this.ExtApprovalResponseDate = extApprovalResponseDate;
            this.ExtApprovalResponseSignature = extApprovalResponseSignature;
            this.ExternalQuoteNumber = externalQuoteNumber;
            this.GroupByID = groupByID;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.IsActive = isActive;
            this.LastActivityDate = lastActivityDate;
            this.LastModifiedBy = lastModifiedBy;
            this.Name = name;
            this.OpportunityID = opportunityID;
            this.PaymentTerm = paymentTerm;
            this.PaymentType = paymentType;
            this.PrimaryQuote = primaryQuote;
            this.ProposalProjectID = proposalProjectID;
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.QuoteNumber = quoteNumber;
            this.QuoteTemplateID = quoteTemplateID;
            this.ShippingType = shippingType;
            this.ShipToLocationID = shipToLocationID;
            this.ShowEachTaxInGroup = showEachTaxInGroup;
            this.ShowTaxCategory = showTaxCategory;
            this.SoldToLocationID = soldToLocationID;
            this.TaxRegionID = taxRegionID;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets ApprovalStatus
        /// </summary>
        [DataMember(Name="approvalStatus", EmitDefaultValue=false)]
        public int? ApprovalStatus { get; set; }

        /// <summary>
        /// Gets or Sets ApprovalStatusChangedByResourceID
        /// </summary>
        [DataMember(Name="approvalStatusChangedByResourceID", EmitDefaultValue=false)]
        public int? ApprovalStatusChangedByResourceID { get; set; }

        /// <summary>
        /// Gets or Sets ApprovalStatusChangedDate
        /// </summary>
        [DataMember(Name="approvalStatusChangedDate", EmitDefaultValue=false)]
        public DateTime? ApprovalStatusChangedDate { get; set; }

        /// <summary>
        /// Gets or Sets BillToLocationID
        /// </summary>
        [DataMember(Name="billToLocationID", EmitDefaultValue=false)]
        public int? BillToLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CalculateTaxSeparately
        /// </summary>
        [DataMember(Name="calculateTaxSeparately", EmitDefaultValue=false)]
        public bool? CalculateTaxSeparately { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="contactID", EmitDefaultValue=false)]
        public int? ContactID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID", EmitDefaultValue=false)]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveDate
        /// </summary>
        [DataMember(Name="effectiveDate", EmitDefaultValue=false)]
        public DateTime? EffectiveDate { get; set; }

        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name="expirationDate", EmitDefaultValue=false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets ExtApprovalContactResponse
        /// </summary>
        [DataMember(Name="extApprovalContactResponse", EmitDefaultValue=false)]
        public int? ExtApprovalContactResponse { get; set; }

        /// <summary>
        /// Gets or Sets ExtApprovalResponseDate
        /// </summary>
        [DataMember(Name="extApprovalResponseDate", EmitDefaultValue=false)]
        public DateTime? ExtApprovalResponseDate { get; set; }

        /// <summary>
        /// Gets or Sets ExtApprovalResponseSignature
        /// </summary>
        [DataMember(Name="extApprovalResponseSignature", EmitDefaultValue=false)]
        public string ExtApprovalResponseSignature { get; set; }

        /// <summary>
        /// Gets or Sets ExternalQuoteNumber
        /// </summary>
        [DataMember(Name="externalQuoteNumber", EmitDefaultValue=false)]
        public string ExternalQuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets GroupByID
        /// </summary>
        [DataMember(Name="groupByID", EmitDefaultValue=false)]
        public int? GroupByID { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive", EmitDefaultValue=false)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate", EmitDefaultValue=false)]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name="lastModifiedBy", EmitDefaultValue=false)]
        public int? LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityID
        /// </summary>
        [DataMember(Name="opportunityID", EmitDefaultValue=false)]
        public int? OpportunityID { get; set; }

        /// <summary>
        /// Gets or Sets PaymentTerm
        /// </summary>
        [DataMember(Name="paymentTerm", EmitDefaultValue=false)]
        public int? PaymentTerm { get; set; }

        /// <summary>
        /// Gets or Sets PaymentType
        /// </summary>
        [DataMember(Name="paymentType", EmitDefaultValue=false)]
        public int? PaymentType { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryQuote
        /// </summary>
        [DataMember(Name="primaryQuote", EmitDefaultValue=false)]
        public bool? PrimaryQuote { get; set; }

        /// <summary>
        /// Gets or Sets ProposalProjectID
        /// </summary>
        [DataMember(Name="proposalProjectID", EmitDefaultValue=false)]
        public int? ProposalProjectID { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="purchaseOrderNumber", EmitDefaultValue=false)]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets QuoteNumber
        /// </summary>
        [DataMember(Name="quoteNumber", EmitDefaultValue=false)]
        public int? QuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets QuoteTemplateID
        /// </summary>
        [DataMember(Name="quoteTemplateID", EmitDefaultValue=false)]
        public int? QuoteTemplateID { get; set; }

        /// <summary>
        /// Gets or Sets ShippingType
        /// </summary>
        [DataMember(Name="shippingType", EmitDefaultValue=false)]
        public int? ShippingType { get; set; }

        /// <summary>
        /// Gets or Sets ShipToLocationID
        /// </summary>
        [DataMember(Name="shipToLocationID", EmitDefaultValue=false)]
        public int? ShipToLocationID { get; set; }

        /// <summary>
        /// Gets or Sets ShowEachTaxInGroup
        /// </summary>
        [DataMember(Name="showEachTaxInGroup", EmitDefaultValue=false)]
        public bool? ShowEachTaxInGroup { get; set; }

        /// <summary>
        /// Gets or Sets ShowTaxCategory
        /// </summary>
        [DataMember(Name="showTaxCategory", EmitDefaultValue=false)]
        public bool? ShowTaxCategory { get; set; }

        /// <summary>
        /// Gets or Sets SoldToLocationID
        /// </summary>
        [DataMember(Name="soldToLocationID", EmitDefaultValue=false)]
        public int? SoldToLocationID { get; set; }

        /// <summary>
        /// Gets or Sets TaxRegionID
        /// </summary>
        [DataMember(Name="taxRegionID", EmitDefaultValue=false)]
        public int? TaxRegionID { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QuoteModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ApprovalStatus: ").Append(ApprovalStatus).Append("\n");
            sb.Append("  ApprovalStatusChangedByResourceID: ").Append(ApprovalStatusChangedByResourceID).Append("\n");
            sb.Append("  ApprovalStatusChangedDate: ").Append(ApprovalStatusChangedDate).Append("\n");
            sb.Append("  BillToLocationID: ").Append(BillToLocationID).Append("\n");
            sb.Append("  CalculateTaxSeparately: ").Append(CalculateTaxSeparately).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  EffectiveDate: ").Append(EffectiveDate).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  ExtApprovalContactResponse: ").Append(ExtApprovalContactResponse).Append("\n");
            sb.Append("  ExtApprovalResponseDate: ").Append(ExtApprovalResponseDate).Append("\n");
            sb.Append("  ExtApprovalResponseSignature: ").Append(ExtApprovalResponseSignature).Append("\n");
            sb.Append("  ExternalQuoteNumber: ").Append(ExternalQuoteNumber).Append("\n");
            sb.Append("  GroupByID: ").Append(GroupByID).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OpportunityID: ").Append(OpportunityID).Append("\n");
            sb.Append("  PaymentTerm: ").Append(PaymentTerm).Append("\n");
            sb.Append("  PaymentType: ").Append(PaymentType).Append("\n");
            sb.Append("  PrimaryQuote: ").Append(PrimaryQuote).Append("\n");
            sb.Append("  ProposalProjectID: ").Append(ProposalProjectID).Append("\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  QuoteNumber: ").Append(QuoteNumber).Append("\n");
            sb.Append("  QuoteTemplateID: ").Append(QuoteTemplateID).Append("\n");
            sb.Append("  ShippingType: ").Append(ShippingType).Append("\n");
            sb.Append("  ShipToLocationID: ").Append(ShipToLocationID).Append("\n");
            sb.Append("  ShowEachTaxInGroup: ").Append(ShowEachTaxInGroup).Append("\n");
            sb.Append("  ShowTaxCategory: ").Append(ShowTaxCategory).Append("\n");
            sb.Append("  SoldToLocationID: ").Append(SoldToLocationID).Append("\n");
            sb.Append("  TaxRegionID: ").Append(TaxRegionID).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QuoteModel);
        }

        /// <summary>
        /// Returns true if QuoteModel instances are equal
        /// </summary>
        /// <param name="input">Instance of QuoteModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QuoteModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ApprovalStatus == input.ApprovalStatus ||
                    (this.ApprovalStatus != null &&
                    this.ApprovalStatus.Equals(input.ApprovalStatus))
                ) && 
                (
                    this.ApprovalStatusChangedByResourceID == input.ApprovalStatusChangedByResourceID ||
                    (this.ApprovalStatusChangedByResourceID != null &&
                    this.ApprovalStatusChangedByResourceID.Equals(input.ApprovalStatusChangedByResourceID))
                ) && 
                (
                    this.ApprovalStatusChangedDate == input.ApprovalStatusChangedDate ||
                    (this.ApprovalStatusChangedDate != null &&
                    this.ApprovalStatusChangedDate.Equals(input.ApprovalStatusChangedDate))
                ) && 
                (
                    this.BillToLocationID == input.BillToLocationID ||
                    (this.BillToLocationID != null &&
                    this.BillToLocationID.Equals(input.BillToLocationID))
                ) && 
                (
                    this.CalculateTaxSeparately == input.CalculateTaxSeparately ||
                    (this.CalculateTaxSeparately != null &&
                    this.CalculateTaxSeparately.Equals(input.CalculateTaxSeparately))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.ContactID == input.ContactID ||
                    (this.ContactID != null &&
                    this.ContactID.Equals(input.ContactID))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.CreatorResourceID == input.CreatorResourceID ||
                    (this.CreatorResourceID != null &&
                    this.CreatorResourceID.Equals(input.CreatorResourceID))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.EffectiveDate == input.EffectiveDate ||
                    (this.EffectiveDate != null &&
                    this.EffectiveDate.Equals(input.EffectiveDate))
                ) && 
                (
                    this.ExpirationDate == input.ExpirationDate ||
                    (this.ExpirationDate != null &&
                    this.ExpirationDate.Equals(input.ExpirationDate))
                ) && 
                (
                    this.ExtApprovalContactResponse == input.ExtApprovalContactResponse ||
                    (this.ExtApprovalContactResponse != null &&
                    this.ExtApprovalContactResponse.Equals(input.ExtApprovalContactResponse))
                ) && 
                (
                    this.ExtApprovalResponseDate == input.ExtApprovalResponseDate ||
                    (this.ExtApprovalResponseDate != null &&
                    this.ExtApprovalResponseDate.Equals(input.ExtApprovalResponseDate))
                ) && 
                (
                    this.ExtApprovalResponseSignature == input.ExtApprovalResponseSignature ||
                    (this.ExtApprovalResponseSignature != null &&
                    this.ExtApprovalResponseSignature.Equals(input.ExtApprovalResponseSignature))
                ) && 
                (
                    this.ExternalQuoteNumber == input.ExternalQuoteNumber ||
                    (this.ExternalQuoteNumber != null &&
                    this.ExternalQuoteNumber.Equals(input.ExternalQuoteNumber))
                ) && 
                (
                    this.GroupByID == input.GroupByID ||
                    (this.GroupByID != null &&
                    this.GroupByID.Equals(input.GroupByID))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.LastActivityDate == input.LastActivityDate ||
                    (this.LastActivityDate != null &&
                    this.LastActivityDate.Equals(input.LastActivityDate))
                ) && 
                (
                    this.LastModifiedBy == input.LastModifiedBy ||
                    (this.LastModifiedBy != null &&
                    this.LastModifiedBy.Equals(input.LastModifiedBy))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.OpportunityID == input.OpportunityID ||
                    (this.OpportunityID != null &&
                    this.OpportunityID.Equals(input.OpportunityID))
                ) && 
                (
                    this.PaymentTerm == input.PaymentTerm ||
                    (this.PaymentTerm != null &&
                    this.PaymentTerm.Equals(input.PaymentTerm))
                ) && 
                (
                    this.PaymentType == input.PaymentType ||
                    (this.PaymentType != null &&
                    this.PaymentType.Equals(input.PaymentType))
                ) && 
                (
                    this.PrimaryQuote == input.PrimaryQuote ||
                    (this.PrimaryQuote != null &&
                    this.PrimaryQuote.Equals(input.PrimaryQuote))
                ) && 
                (
                    this.ProposalProjectID == input.ProposalProjectID ||
                    (this.ProposalProjectID != null &&
                    this.ProposalProjectID.Equals(input.ProposalProjectID))
                ) && 
                (
                    this.PurchaseOrderNumber == input.PurchaseOrderNumber ||
                    (this.PurchaseOrderNumber != null &&
                    this.PurchaseOrderNumber.Equals(input.PurchaseOrderNumber))
                ) && 
                (
                    this.QuoteNumber == input.QuoteNumber ||
                    (this.QuoteNumber != null &&
                    this.QuoteNumber.Equals(input.QuoteNumber))
                ) && 
                (
                    this.QuoteTemplateID == input.QuoteTemplateID ||
                    (this.QuoteTemplateID != null &&
                    this.QuoteTemplateID.Equals(input.QuoteTemplateID))
                ) && 
                (
                    this.ShippingType == input.ShippingType ||
                    (this.ShippingType != null &&
                    this.ShippingType.Equals(input.ShippingType))
                ) && 
                (
                    this.ShipToLocationID == input.ShipToLocationID ||
                    (this.ShipToLocationID != null &&
                    this.ShipToLocationID.Equals(input.ShipToLocationID))
                ) && 
                (
                    this.ShowEachTaxInGroup == input.ShowEachTaxInGroup ||
                    (this.ShowEachTaxInGroup != null &&
                    this.ShowEachTaxInGroup.Equals(input.ShowEachTaxInGroup))
                ) && 
                (
                    this.ShowTaxCategory == input.ShowTaxCategory ||
                    (this.ShowTaxCategory != null &&
                    this.ShowTaxCategory.Equals(input.ShowTaxCategory))
                ) && 
                (
                    this.SoldToLocationID == input.SoldToLocationID ||
                    (this.SoldToLocationID != null &&
                    this.SoldToLocationID.Equals(input.SoldToLocationID))
                ) && 
                (
                    this.TaxRegionID == input.TaxRegionID ||
                    (this.TaxRegionID != null &&
                    this.TaxRegionID.Equals(input.TaxRegionID))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ApprovalStatus != null)
                    hashCode = hashCode * 59 + this.ApprovalStatus.GetHashCode();
                if (this.ApprovalStatusChangedByResourceID != null)
                    hashCode = hashCode * 59 + this.ApprovalStatusChangedByResourceID.GetHashCode();
                if (this.ApprovalStatusChangedDate != null)
                    hashCode = hashCode * 59 + this.ApprovalStatusChangedDate.GetHashCode();
                if (this.BillToLocationID != null)
                    hashCode = hashCode * 59 + this.BillToLocationID.GetHashCode();
                if (this.CalculateTaxSeparately != null)
                    hashCode = hashCode * 59 + this.CalculateTaxSeparately.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.ContactID != null)
                    hashCode = hashCode * 59 + this.ContactID.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.CreatorResourceID != null)
                    hashCode = hashCode * 59 + this.CreatorResourceID.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.EffectiveDate != null)
                    hashCode = hashCode * 59 + this.EffectiveDate.GetHashCode();
                if (this.ExpirationDate != null)
                    hashCode = hashCode * 59 + this.ExpirationDate.GetHashCode();
                if (this.ExtApprovalContactResponse != null)
                    hashCode = hashCode * 59 + this.ExtApprovalContactResponse.GetHashCode();
                if (this.ExtApprovalResponseDate != null)
                    hashCode = hashCode * 59 + this.ExtApprovalResponseDate.GetHashCode();
                if (this.ExtApprovalResponseSignature != null)
                    hashCode = hashCode * 59 + this.ExtApprovalResponseSignature.GetHashCode();
                if (this.ExternalQuoteNumber != null)
                    hashCode = hashCode * 59 + this.ExternalQuoteNumber.GetHashCode();
                if (this.GroupByID != null)
                    hashCode = hashCode * 59 + this.GroupByID.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.IsActive != null)
                    hashCode = hashCode * 59 + this.IsActive.GetHashCode();
                if (this.LastActivityDate != null)
                    hashCode = hashCode * 59 + this.LastActivityDate.GetHashCode();
                if (this.LastModifiedBy != null)
                    hashCode = hashCode * 59 + this.LastModifiedBy.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.OpportunityID != null)
                    hashCode = hashCode * 59 + this.OpportunityID.GetHashCode();
                if (this.PaymentTerm != null)
                    hashCode = hashCode * 59 + this.PaymentTerm.GetHashCode();
                if (this.PaymentType != null)
                    hashCode = hashCode * 59 + this.PaymentType.GetHashCode();
                if (this.PrimaryQuote != null)
                    hashCode = hashCode * 59 + this.PrimaryQuote.GetHashCode();
                if (this.ProposalProjectID != null)
                    hashCode = hashCode * 59 + this.ProposalProjectID.GetHashCode();
                if (this.PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderNumber.GetHashCode();
                if (this.QuoteNumber != null)
                    hashCode = hashCode * 59 + this.QuoteNumber.GetHashCode();
                if (this.QuoteTemplateID != null)
                    hashCode = hashCode * 59 + this.QuoteTemplateID.GetHashCode();
                if (this.ShippingType != null)
                    hashCode = hashCode * 59 + this.ShippingType.GetHashCode();
                if (this.ShipToLocationID != null)
                    hashCode = hashCode * 59 + this.ShipToLocationID.GetHashCode();
                if (this.ShowEachTaxInGroup != null)
                    hashCode = hashCode * 59 + this.ShowEachTaxInGroup.GetHashCode();
                if (this.ShowTaxCategory != null)
                    hashCode = hashCode * 59 + this.ShowTaxCategory.GetHashCode();
                if (this.SoldToLocationID != null)
                    hashCode = hashCode * 59 + this.SoldToLocationID.GetHashCode();
                if (this.TaxRegionID != null)
                    hashCode = hashCode * 59 + this.TaxRegionID.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
