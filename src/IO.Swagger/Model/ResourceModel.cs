/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ResourceModel
    /// </summary>
    [DataContract]
    public partial class ResourceModel :  IEquatable<ResourceModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResourceModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="accountingReferenceID">accountingReferenceID.</param>
        /// <param name="dateFormat">dateFormat.</param>
        /// <param name="defaultServiceDeskRoleID">defaultServiceDeskRoleID.</param>
        /// <param name="email">email.</param>
        /// <param name="email2">email2.</param>
        /// <param name="email3">email3.</param>
        /// <param name="emailTypeCode">emailTypeCode.</param>
        /// <param name="emailTypeCode2">emailTypeCode2.</param>
        /// <param name="emailTypeCode3">emailTypeCode3.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="gender">gender.</param>
        /// <param name="greeting">greeting.</param>
        /// <param name="hireDate">hireDate.</param>
        /// <param name="homePhone">homePhone.</param>
        /// <param name="initials">initials.</param>
        /// <param name="internalCost">internalCost.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="licenseType">licenseType.</param>
        /// <param name="locationID">locationID.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="mobilePhone">mobilePhone.</param>
        /// <param name="numberFormat">numberFormat.</param>
        /// <param name="officeExtension">officeExtension.</param>
        /// <param name="officePhone">officePhone.</param>
        /// <param name="payrollType">payrollType.</param>
        /// <param name="resourceType">resourceType.</param>
        /// <param name="suffix">suffix.</param>
        /// <param name="surveyResourceRating">surveyResourceRating.</param>
        /// <param name="timeFormat">timeFormat.</param>
        /// <param name="title">title.</param>
        /// <param name="travelAvailabilityPct">travelAvailabilityPct.</param>
        /// <param name="userName">userName.</param>
        /// <param name="userType">userType.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public ResourceModel(long? id = default(long?), string accountingReferenceID = default(string), string dateFormat = default(string), long? defaultServiceDeskRoleID = default(long?), string email = default(string), string email2 = default(string), string email3 = default(string), string emailTypeCode = default(string), string emailTypeCode2 = default(string), string emailTypeCode3 = default(string), string firstName = default(string), string gender = default(string), int? greeting = default(int?), DateTime? hireDate = default(DateTime?), string homePhone = default(string), string initials = default(string), double? internalCost = default(double?), bool? isActive = default(bool?), string lastName = default(string), int? licenseType = default(int?), int? locationID = default(int?), string middleName = default(string), string mobilePhone = default(string), string numberFormat = default(string), string officeExtension = default(string), string officePhone = default(string), int? payrollType = default(int?), string resourceType = default(string), int? suffix = default(int?), double? surveyResourceRating = default(double?), string timeFormat = default(string), string title = default(string), string travelAvailabilityPct = default(string), string userName = default(string), int? userType = default(int?), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.AccountingReferenceID = accountingReferenceID;
            this.DateFormat = dateFormat;
            this.DefaultServiceDeskRoleID = defaultServiceDeskRoleID;
            this.Email = email;
            this.Email2 = email2;
            this.Email3 = email3;
            this.EmailTypeCode = emailTypeCode;
            this.EmailTypeCode2 = emailTypeCode2;
            this.EmailTypeCode3 = emailTypeCode3;
            this.FirstName = firstName;
            this.Gender = gender;
            this.Greeting = greeting;
            this.HireDate = hireDate;
            this.HomePhone = homePhone;
            this.Initials = initials;
            this.InternalCost = internalCost;
            this.IsActive = isActive;
            this.LastName = lastName;
            this.LicenseType = licenseType;
            this.LocationID = locationID;
            this.MiddleName = middleName;
            this.MobilePhone = mobilePhone;
            this.NumberFormat = numberFormat;
            this.OfficeExtension = officeExtension;
            this.OfficePhone = officePhone;
            this.PayrollType = payrollType;
            this.ResourceType = resourceType;
            this.Suffix = suffix;
            this.SurveyResourceRating = surveyResourceRating;
            this.TimeFormat = timeFormat;
            this.Title = title;
            this.TravelAvailabilityPct = travelAvailabilityPct;
            this.UserName = userName;
            this.UserType = userType;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AccountingReferenceID
        /// </summary>
        [DataMember(Name="accountingReferenceID", EmitDefaultValue=false)]
        public string AccountingReferenceID { get; set; }

        /// <summary>
        /// Gets or Sets DateFormat
        /// </summary>
        [DataMember(Name="dateFormat", EmitDefaultValue=false)]
        public string DateFormat { get; set; }

        /// <summary>
        /// Gets or Sets DefaultServiceDeskRoleID
        /// </summary>
        [DataMember(Name="defaultServiceDeskRoleID", EmitDefaultValue=false)]
        public long? DefaultServiceDeskRoleID { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Email2
        /// </summary>
        [DataMember(Name="email2", EmitDefaultValue=false)]
        public string Email2 { get; set; }

        /// <summary>
        /// Gets or Sets Email3
        /// </summary>
        [DataMember(Name="email3", EmitDefaultValue=false)]
        public string Email3 { get; set; }

        /// <summary>
        /// Gets or Sets EmailTypeCode
        /// </summary>
        [DataMember(Name="emailTypeCode", EmitDefaultValue=false)]
        public string EmailTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets EmailTypeCode2
        /// </summary>
        [DataMember(Name="emailTypeCode2", EmitDefaultValue=false)]
        public string EmailTypeCode2 { get; set; }

        /// <summary>
        /// Gets or Sets EmailTypeCode3
        /// </summary>
        [DataMember(Name="emailTypeCode3", EmitDefaultValue=false)]
        public string EmailTypeCode3 { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=false)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets Greeting
        /// </summary>
        [DataMember(Name="greeting", EmitDefaultValue=false)]
        public int? Greeting { get; set; }

        /// <summary>
        /// Gets or Sets HireDate
        /// </summary>
        [DataMember(Name="hireDate", EmitDefaultValue=false)]
        public DateTime? HireDate { get; set; }

        /// <summary>
        /// Gets or Sets HomePhone
        /// </summary>
        [DataMember(Name="homePhone", EmitDefaultValue=false)]
        public string HomePhone { get; set; }

        /// <summary>
        /// Gets or Sets Initials
        /// </summary>
        [DataMember(Name="initials", EmitDefaultValue=false)]
        public string Initials { get; set; }

        /// <summary>
        /// Gets or Sets InternalCost
        /// </summary>
        [DataMember(Name="internalCost", EmitDefaultValue=false)]
        public double? InternalCost { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive", EmitDefaultValue=false)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets LicenseType
        /// </summary>
        [DataMember(Name="licenseType", EmitDefaultValue=false)]
        public int? LicenseType { get; set; }

        /// <summary>
        /// Gets or Sets LocationID
        /// </summary>
        [DataMember(Name="locationID", EmitDefaultValue=false)]
        public int? LocationID { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middleName", EmitDefaultValue=false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets NumberFormat
        /// </summary>
        [DataMember(Name="numberFormat", EmitDefaultValue=false)]
        public string NumberFormat { get; set; }

        /// <summary>
        /// Gets or Sets OfficeExtension
        /// </summary>
        [DataMember(Name="officeExtension", EmitDefaultValue=false)]
        public string OfficeExtension { get; set; }

        /// <summary>
        /// Gets or Sets OfficePhone
        /// </summary>
        [DataMember(Name="officePhone", EmitDefaultValue=false)]
        public string OfficePhone { get; set; }

        /// <summary>
        /// Gets or Sets PayrollType
        /// </summary>
        [DataMember(Name="payrollType", EmitDefaultValue=false)]
        public int? PayrollType { get; set; }

        /// <summary>
        /// Gets or Sets ResourceType
        /// </summary>
        [DataMember(Name="resourceType", EmitDefaultValue=false)]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or Sets Suffix
        /// </summary>
        [DataMember(Name="suffix", EmitDefaultValue=false)]
        public int? Suffix { get; set; }

        /// <summary>
        /// Gets or Sets SurveyResourceRating
        /// </summary>
        [DataMember(Name="surveyResourceRating", EmitDefaultValue=false)]
        public double? SurveyResourceRating { get; set; }

        /// <summary>
        /// Gets or Sets TimeFormat
        /// </summary>
        [DataMember(Name="timeFormat", EmitDefaultValue=false)]
        public string TimeFormat { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TravelAvailabilityPct
        /// </summary>
        [DataMember(Name="travelAvailabilityPct", EmitDefaultValue=false)]
        public string TravelAvailabilityPct { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name="userName", EmitDefaultValue=false)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets UserType
        /// </summary>
        [DataMember(Name="userType", EmitDefaultValue=false)]
        public int? UserType { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResourceModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AccountingReferenceID: ").Append(AccountingReferenceID).Append("\n");
            sb.Append("  DateFormat: ").Append(DateFormat).Append("\n");
            sb.Append("  DefaultServiceDeskRoleID: ").Append(DefaultServiceDeskRoleID).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Email2: ").Append(Email2).Append("\n");
            sb.Append("  Email3: ").Append(Email3).Append("\n");
            sb.Append("  EmailTypeCode: ").Append(EmailTypeCode).Append("\n");
            sb.Append("  EmailTypeCode2: ").Append(EmailTypeCode2).Append("\n");
            sb.Append("  EmailTypeCode3: ").Append(EmailTypeCode3).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Greeting: ").Append(Greeting).Append("\n");
            sb.Append("  HireDate: ").Append(HireDate).Append("\n");
            sb.Append("  HomePhone: ").Append(HomePhone).Append("\n");
            sb.Append("  Initials: ").Append(Initials).Append("\n");
            sb.Append("  InternalCost: ").Append(InternalCost).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LicenseType: ").Append(LicenseType).Append("\n");
            sb.Append("  LocationID: ").Append(LocationID).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  NumberFormat: ").Append(NumberFormat).Append("\n");
            sb.Append("  OfficeExtension: ").Append(OfficeExtension).Append("\n");
            sb.Append("  OfficePhone: ").Append(OfficePhone).Append("\n");
            sb.Append("  PayrollType: ").Append(PayrollType).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  Suffix: ").Append(Suffix).Append("\n");
            sb.Append("  SurveyResourceRating: ").Append(SurveyResourceRating).Append("\n");
            sb.Append("  TimeFormat: ").Append(TimeFormat).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TravelAvailabilityPct: ").Append(TravelAvailabilityPct).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  UserType: ").Append(UserType).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResourceModel);
        }

        /// <summary>
        /// Returns true if ResourceModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ResourceModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResourceModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AccountingReferenceID == input.AccountingReferenceID ||
                    (this.AccountingReferenceID != null &&
                    this.AccountingReferenceID.Equals(input.AccountingReferenceID))
                ) && 
                (
                    this.DateFormat == input.DateFormat ||
                    (this.DateFormat != null &&
                    this.DateFormat.Equals(input.DateFormat))
                ) && 
                (
                    this.DefaultServiceDeskRoleID == input.DefaultServiceDeskRoleID ||
                    (this.DefaultServiceDeskRoleID != null &&
                    this.DefaultServiceDeskRoleID.Equals(input.DefaultServiceDeskRoleID))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Email2 == input.Email2 ||
                    (this.Email2 != null &&
                    this.Email2.Equals(input.Email2))
                ) && 
                (
                    this.Email3 == input.Email3 ||
                    (this.Email3 != null &&
                    this.Email3.Equals(input.Email3))
                ) && 
                (
                    this.EmailTypeCode == input.EmailTypeCode ||
                    (this.EmailTypeCode != null &&
                    this.EmailTypeCode.Equals(input.EmailTypeCode))
                ) && 
                (
                    this.EmailTypeCode2 == input.EmailTypeCode2 ||
                    (this.EmailTypeCode2 != null &&
                    this.EmailTypeCode2.Equals(input.EmailTypeCode2))
                ) && 
                (
                    this.EmailTypeCode3 == input.EmailTypeCode3 ||
                    (this.EmailTypeCode3 != null &&
                    this.EmailTypeCode3.Equals(input.EmailTypeCode3))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.Gender == input.Gender ||
                    (this.Gender != null &&
                    this.Gender.Equals(input.Gender))
                ) && 
                (
                    this.Greeting == input.Greeting ||
                    (this.Greeting != null &&
                    this.Greeting.Equals(input.Greeting))
                ) && 
                (
                    this.HireDate == input.HireDate ||
                    (this.HireDate != null &&
                    this.HireDate.Equals(input.HireDate))
                ) && 
                (
                    this.HomePhone == input.HomePhone ||
                    (this.HomePhone != null &&
                    this.HomePhone.Equals(input.HomePhone))
                ) && 
                (
                    this.Initials == input.Initials ||
                    (this.Initials != null &&
                    this.Initials.Equals(input.Initials))
                ) && 
                (
                    this.InternalCost == input.InternalCost ||
                    (this.InternalCost != null &&
                    this.InternalCost.Equals(input.InternalCost))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.LicenseType == input.LicenseType ||
                    (this.LicenseType != null &&
                    this.LicenseType.Equals(input.LicenseType))
                ) && 
                (
                    this.LocationID == input.LocationID ||
                    (this.LocationID != null &&
                    this.LocationID.Equals(input.LocationID))
                ) && 
                (
                    this.MiddleName == input.MiddleName ||
                    (this.MiddleName != null &&
                    this.MiddleName.Equals(input.MiddleName))
                ) && 
                (
                    this.MobilePhone == input.MobilePhone ||
                    (this.MobilePhone != null &&
                    this.MobilePhone.Equals(input.MobilePhone))
                ) && 
                (
                    this.NumberFormat == input.NumberFormat ||
                    (this.NumberFormat != null &&
                    this.NumberFormat.Equals(input.NumberFormat))
                ) && 
                (
                    this.OfficeExtension == input.OfficeExtension ||
                    (this.OfficeExtension != null &&
                    this.OfficeExtension.Equals(input.OfficeExtension))
                ) && 
                (
                    this.OfficePhone == input.OfficePhone ||
                    (this.OfficePhone != null &&
                    this.OfficePhone.Equals(input.OfficePhone))
                ) && 
                (
                    this.PayrollType == input.PayrollType ||
                    (this.PayrollType != null &&
                    this.PayrollType.Equals(input.PayrollType))
                ) && 
                (
                    this.ResourceType == input.ResourceType ||
                    (this.ResourceType != null &&
                    this.ResourceType.Equals(input.ResourceType))
                ) && 
                (
                    this.Suffix == input.Suffix ||
                    (this.Suffix != null &&
                    this.Suffix.Equals(input.Suffix))
                ) && 
                (
                    this.SurveyResourceRating == input.SurveyResourceRating ||
                    (this.SurveyResourceRating != null &&
                    this.SurveyResourceRating.Equals(input.SurveyResourceRating))
                ) && 
                (
                    this.TimeFormat == input.TimeFormat ||
                    (this.TimeFormat != null &&
                    this.TimeFormat.Equals(input.TimeFormat))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.TravelAvailabilityPct == input.TravelAvailabilityPct ||
                    (this.TravelAvailabilityPct != null &&
                    this.TravelAvailabilityPct.Equals(input.TravelAvailabilityPct))
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.UserType == input.UserType ||
                    (this.UserType != null &&
                    this.UserType.Equals(input.UserType))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AccountingReferenceID != null)
                    hashCode = hashCode * 59 + this.AccountingReferenceID.GetHashCode();
                if (this.DateFormat != null)
                    hashCode = hashCode * 59 + this.DateFormat.GetHashCode();
                if (this.DefaultServiceDeskRoleID != null)
                    hashCode = hashCode * 59 + this.DefaultServiceDeskRoleID.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Email2 != null)
                    hashCode = hashCode * 59 + this.Email2.GetHashCode();
                if (this.Email3 != null)
                    hashCode = hashCode * 59 + this.Email3.GetHashCode();
                if (this.EmailTypeCode != null)
                    hashCode = hashCode * 59 + this.EmailTypeCode.GetHashCode();
                if (this.EmailTypeCode2 != null)
                    hashCode = hashCode * 59 + this.EmailTypeCode2.GetHashCode();
                if (this.EmailTypeCode3 != null)
                    hashCode = hashCode * 59 + this.EmailTypeCode3.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.Gender != null)
                    hashCode = hashCode * 59 + this.Gender.GetHashCode();
                if (this.Greeting != null)
                    hashCode = hashCode * 59 + this.Greeting.GetHashCode();
                if (this.HireDate != null)
                    hashCode = hashCode * 59 + this.HireDate.GetHashCode();
                if (this.HomePhone != null)
                    hashCode = hashCode * 59 + this.HomePhone.GetHashCode();
                if (this.Initials != null)
                    hashCode = hashCode * 59 + this.Initials.GetHashCode();
                if (this.InternalCost != null)
                    hashCode = hashCode * 59 + this.InternalCost.GetHashCode();
                if (this.IsActive != null)
                    hashCode = hashCode * 59 + this.IsActive.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.LicenseType != null)
                    hashCode = hashCode * 59 + this.LicenseType.GetHashCode();
                if (this.LocationID != null)
                    hashCode = hashCode * 59 + this.LocationID.GetHashCode();
                if (this.MiddleName != null)
                    hashCode = hashCode * 59 + this.MiddleName.GetHashCode();
                if (this.MobilePhone != null)
                    hashCode = hashCode * 59 + this.MobilePhone.GetHashCode();
                if (this.NumberFormat != null)
                    hashCode = hashCode * 59 + this.NumberFormat.GetHashCode();
                if (this.OfficeExtension != null)
                    hashCode = hashCode * 59 + this.OfficeExtension.GetHashCode();
                if (this.OfficePhone != null)
                    hashCode = hashCode * 59 + this.OfficePhone.GetHashCode();
                if (this.PayrollType != null)
                    hashCode = hashCode * 59 + this.PayrollType.GetHashCode();
                if (this.ResourceType != null)
                    hashCode = hashCode * 59 + this.ResourceType.GetHashCode();
                if (this.Suffix != null)
                    hashCode = hashCode * 59 + this.Suffix.GetHashCode();
                if (this.SurveyResourceRating != null)
                    hashCode = hashCode * 59 + this.SurveyResourceRating.GetHashCode();
                if (this.TimeFormat != null)
                    hashCode = hashCode * 59 + this.TimeFormat.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.TravelAvailabilityPct != null)
                    hashCode = hashCode * 59 + this.TravelAvailabilityPct.GetHashCode();
                if (this.UserName != null)
                    hashCode = hashCode * 59 + this.UserName.GetHashCode();
                if (this.UserType != null)
                    hashCode = hashCode * 59 + this.UserType.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
