/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ContactModel
    /// </summary>
    [DataContract]
    public partial class ContactModel :  IEquatable<ContactModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="additionalAddressInformation">additionalAddressInformation.</param>
        /// <param name="addressLine">addressLine.</param>
        /// <param name="addressLine1">addressLine1.</param>
        /// <param name="alternatePhone">alternatePhone.</param>
        /// <param name="apiVendorID">apiVendorID.</param>
        /// <param name="bulkEmailOptOutTime">bulkEmailOptOutTime.</param>
        /// <param name="city">city.</param>
        /// <param name="companyID">companyID.</param>
        /// <param name="companyLocationID">companyLocationID.</param>
        /// <param name="countryID">countryID.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="emailAddress">emailAddress.</param>
        /// <param name="emailAddress2">emailAddress2.</param>
        /// <param name="emailAddress3">emailAddress3.</param>
        /// <param name="extension">extension.</param>
        /// <param name="externalID">externalID.</param>
        /// <param name="facebookUrl">facebookUrl.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="impersonatorCreatorResourceID">impersonatorCreatorResourceID.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="isOptedOutFromBulkEmail">isOptedOutFromBulkEmail.</param>
        /// <param name="lastActivityDate">lastActivityDate.</param>
        /// <param name="lastModifiedDate">lastModifiedDate.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="linkedInUrl">linkedInUrl.</param>
        /// <param name="middleInitial">middleInitial.</param>
        /// <param name="mobilePhone">mobilePhone.</param>
        /// <param name="namePrefix">namePrefix.</param>
        /// <param name="nameSuffix">nameSuffix.</param>
        /// <param name="note">note.</param>
        /// <param name="receivesEmailNotifications">receivesEmailNotifications.</param>
        /// <param name="phone">phone.</param>
        /// <param name="primaryContact">primaryContact.</param>
        /// <param name="roomNumber">roomNumber.</param>
        /// <param name="solicitationOptOut">solicitationOptOut.</param>
        /// <param name="solicitationOptOutTime">solicitationOptOutTime.</param>
        /// <param name="state">state.</param>
        /// <param name="surveyOptOut">surveyOptOut.</param>
        /// <param name="title">title.</param>
        /// <param name="twitterUrl">twitterUrl.</param>
        /// <param name="zipCode">zipCode.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public ContactModel(long? id = default(long?), string additionalAddressInformation = default(string), string addressLine = default(string), string addressLine1 = default(string), string alternatePhone = default(string), int? apiVendorID = default(int?), DateTime? bulkEmailOptOutTime = default(DateTime?), string city = default(string), int? companyID = default(int?), int? companyLocationID = default(int?), int? countryID = default(int?), DateTime? createDate = default(DateTime?), string emailAddress = default(string), string emailAddress2 = default(string), string emailAddress3 = default(string), string extension = default(string), string externalID = default(string), string facebookUrl = default(string), string faxNumber = default(string), string firstName = default(string), int? impersonatorCreatorResourceID = default(int?), int? isActive = default(int?), bool? isOptedOutFromBulkEmail = default(bool?), DateTime? lastActivityDate = default(DateTime?), DateTime? lastModifiedDate = default(DateTime?), string lastName = default(string), string linkedInUrl = default(string), string middleInitial = default(string), string mobilePhone = default(string), int? namePrefix = default(int?), int? nameSuffix = default(int?), string note = default(string), bool? receivesEmailNotifications = default(bool?), string phone = default(string), bool? primaryContact = default(bool?), string roomNumber = default(string), bool? solicitationOptOut = default(bool?), DateTime? solicitationOptOutTime = default(DateTime?), string state = default(string), bool? surveyOptOut = default(bool?), string title = default(string), string twitterUrl = default(string), string zipCode = default(string), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.AdditionalAddressInformation = additionalAddressInformation;
            this.AddressLine = addressLine;
            this.AddressLine1 = addressLine1;
            this.AlternatePhone = alternatePhone;
            this.ApiVendorID = apiVendorID;
            this.BulkEmailOptOutTime = bulkEmailOptOutTime;
            this.City = city;
            this.CompanyID = companyID;
            this.CompanyLocationID = companyLocationID;
            this.CountryID = countryID;
            this.CreateDate = createDate;
            this.EmailAddress = emailAddress;
            this.EmailAddress2 = emailAddress2;
            this.EmailAddress3 = emailAddress3;
            this.Extension = extension;
            this.ExternalID = externalID;
            this.FacebookUrl = facebookUrl;
            this.FaxNumber = faxNumber;
            this.FirstName = firstName;
            this.ImpersonatorCreatorResourceID = impersonatorCreatorResourceID;
            this.IsActive = isActive;
            this.IsOptedOutFromBulkEmail = isOptedOutFromBulkEmail;
            this.LastActivityDate = lastActivityDate;
            this.LastModifiedDate = lastModifiedDate;
            this.LastName = lastName;
            this.LinkedInUrl = linkedInUrl;
            this.MiddleInitial = middleInitial;
            this.MobilePhone = mobilePhone;
            this.NamePrefix = namePrefix;
            this.NameSuffix = nameSuffix;
            this.Note = note;
            this.ReceivesEmailNotifications = receivesEmailNotifications;
            this.Phone = phone;
            this.PrimaryContact = primaryContact;
            this.RoomNumber = roomNumber;
            this.SolicitationOptOut = solicitationOptOut;
            this.SolicitationOptOutTime = solicitationOptOutTime;
            this.State = state;
            this.SurveyOptOut = surveyOptOut;
            this.Title = title;
            this.TwitterUrl = twitterUrl;
            this.ZipCode = zipCode;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAddressInformation
        /// </summary>
        [DataMember(Name="additionalAddressInformation", EmitDefaultValue=false)]
        public string AdditionalAddressInformation { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine
        /// </summary>
        [DataMember(Name="addressLine", EmitDefaultValue=false)]
        public string AddressLine { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1", EmitDefaultValue=false)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhone
        /// </summary>
        [DataMember(Name="alternatePhone", EmitDefaultValue=false)]
        public string AlternatePhone { get; set; }

        /// <summary>
        /// Gets or Sets ApiVendorID
        /// </summary>
        [DataMember(Name="apiVendorID", EmitDefaultValue=false)]
        public int? ApiVendorID { get; set; }

        /// <summary>
        /// Gets or Sets BulkEmailOptOutTime
        /// </summary>
        [DataMember(Name="bulkEmailOptOutTime", EmitDefaultValue=false)]
        public DateTime? BulkEmailOptOutTime { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public int? CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLocationID
        /// </summary>
        [DataMember(Name="companyLocationID", EmitDefaultValue=false)]
        public int? CompanyLocationID { get; set; }

        /// <summary>
        /// Gets or Sets CountryID
        /// </summary>
        [DataMember(Name="countryID", EmitDefaultValue=false)]
        public int? CountryID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress", EmitDefaultValue=false)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress2
        /// </summary>
        [DataMember(Name="emailAddress2", EmitDefaultValue=false)]
        public string EmailAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress3
        /// </summary>
        [DataMember(Name="emailAddress3", EmitDefaultValue=false)]
        public string EmailAddress3 { get; set; }

        /// <summary>
        /// Gets or Sets Extension
        /// </summary>
        [DataMember(Name="extension", EmitDefaultValue=false)]
        public string Extension { get; set; }

        /// <summary>
        /// Gets or Sets ExternalID
        /// </summary>
        [DataMember(Name="externalID", EmitDefaultValue=false)]
        public string ExternalID { get; set; }

        /// <summary>
        /// Gets or Sets FacebookUrl
        /// </summary>
        [DataMember(Name="facebookUrl", EmitDefaultValue=false)]
        public string FacebookUrl { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="faxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets ImpersonatorCreatorResourceID
        /// </summary>
        [DataMember(Name="impersonatorCreatorResourceID", EmitDefaultValue=false)]
        public int? ImpersonatorCreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive", EmitDefaultValue=false)]
        public int? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsOptedOutFromBulkEmail
        /// </summary>
        [DataMember(Name="isOptedOutFromBulkEmail", EmitDefaultValue=false)]
        public bool? IsOptedOutFromBulkEmail { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate", EmitDefaultValue=false)]
        public DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDate
        /// </summary>
        [DataMember(Name="lastModifiedDate", EmitDefaultValue=false)]
        public DateTime? LastModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets LinkedInUrl
        /// </summary>
        [DataMember(Name="linkedInUrl", EmitDefaultValue=false)]
        public string LinkedInUrl { get; set; }

        /// <summary>
        /// Gets or Sets MiddleInitial
        /// </summary>
        [DataMember(Name="middleInitial", EmitDefaultValue=false)]
        public string MiddleInitial { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets NamePrefix
        /// </summary>
        [DataMember(Name="namePrefix", EmitDefaultValue=false)]
        public int? NamePrefix { get; set; }

        /// <summary>
        /// Gets or Sets NameSuffix
        /// </summary>
        [DataMember(Name="nameSuffix", EmitDefaultValue=false)]
        public int? NameSuffix { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        [DataMember(Name="note", EmitDefaultValue=false)]
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets ReceivesEmailNotifications
        /// </summary>
        [DataMember(Name="receivesEmailNotifications", EmitDefaultValue=false)]
        public bool? ReceivesEmailNotifications { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContact
        /// </summary>
        [DataMember(Name="primaryContact", EmitDefaultValue=false)]
        public bool? PrimaryContact { get; set; }

        /// <summary>
        /// Gets or Sets RoomNumber
        /// </summary>
        [DataMember(Name="roomNumber", EmitDefaultValue=false)]
        public string RoomNumber { get; set; }

        /// <summary>
        /// Gets or Sets SolicitationOptOut
        /// </summary>
        [DataMember(Name="solicitationOptOut", EmitDefaultValue=false)]
        public bool? SolicitationOptOut { get; set; }

        /// <summary>
        /// Gets or Sets SolicitationOptOutTime
        /// </summary>
        [DataMember(Name="solicitationOptOutTime", EmitDefaultValue=false)]
        public DateTime? SolicitationOptOutTime { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets SurveyOptOut
        /// </summary>
        [DataMember(Name="surveyOptOut", EmitDefaultValue=false)]
        public bool? SurveyOptOut { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TwitterUrl
        /// </summary>
        [DataMember(Name="twitterUrl", EmitDefaultValue=false)]
        public string TwitterUrl { get; set; }

        /// <summary>
        /// Gets or Sets ZipCode
        /// </summary>
        [DataMember(Name="zipCode", EmitDefaultValue=false)]
        public string ZipCode { get; set; }

        /// <summary>
        /// Gets or Sets SoapParentPropertyId
        /// </summary>
        [DataMember(Name="soapParentPropertyId", EmitDefaultValue=false)]
        public ExpressionFuncContactInt64 SoapParentPropertyId { get; private set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContactModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalAddressInformation: ").Append(AdditionalAddressInformation).Append("\n");
            sb.Append("  AddressLine: ").Append(AddressLine).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AlternatePhone: ").Append(AlternatePhone).Append("\n");
            sb.Append("  ApiVendorID: ").Append(ApiVendorID).Append("\n");
            sb.Append("  BulkEmailOptOutTime: ").Append(BulkEmailOptOutTime).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyLocationID: ").Append(CompanyLocationID).Append("\n");
            sb.Append("  CountryID: ").Append(CountryID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  EmailAddress2: ").Append(EmailAddress2).Append("\n");
            sb.Append("  EmailAddress3: ").Append(EmailAddress3).Append("\n");
            sb.Append("  Extension: ").Append(Extension).Append("\n");
            sb.Append("  ExternalID: ").Append(ExternalID).Append("\n");
            sb.Append("  FacebookUrl: ").Append(FacebookUrl).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  ImpersonatorCreatorResourceID: ").Append(ImpersonatorCreatorResourceID).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsOptedOutFromBulkEmail: ").Append(IsOptedOutFromBulkEmail).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LinkedInUrl: ").Append(LinkedInUrl).Append("\n");
            sb.Append("  MiddleInitial: ").Append(MiddleInitial).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  NamePrefix: ").Append(NamePrefix).Append("\n");
            sb.Append("  NameSuffix: ").Append(NameSuffix).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  ReceivesEmailNotifications: ").Append(ReceivesEmailNotifications).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PrimaryContact: ").Append(PrimaryContact).Append("\n");
            sb.Append("  RoomNumber: ").Append(RoomNumber).Append("\n");
            sb.Append("  SolicitationOptOut: ").Append(SolicitationOptOut).Append("\n");
            sb.Append("  SolicitationOptOutTime: ").Append(SolicitationOptOutTime).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  SurveyOptOut: ").Append(SurveyOptOut).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TwitterUrl: ").Append(TwitterUrl).Append("\n");
            sb.Append("  ZipCode: ").Append(ZipCode).Append("\n");
            sb.Append("  SoapParentPropertyId: ").Append(SoapParentPropertyId).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ContactModel);
        }

        /// <summary>
        /// Returns true if ContactModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ContactModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContactModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AdditionalAddressInformation == input.AdditionalAddressInformation ||
                    (this.AdditionalAddressInformation != null &&
                    this.AdditionalAddressInformation.Equals(input.AdditionalAddressInformation))
                ) && 
                (
                    this.AddressLine == input.AddressLine ||
                    (this.AddressLine != null &&
                    this.AddressLine.Equals(input.AddressLine))
                ) && 
                (
                    this.AddressLine1 == input.AddressLine1 ||
                    (this.AddressLine1 != null &&
                    this.AddressLine1.Equals(input.AddressLine1))
                ) && 
                (
                    this.AlternatePhone == input.AlternatePhone ||
                    (this.AlternatePhone != null &&
                    this.AlternatePhone.Equals(input.AlternatePhone))
                ) && 
                (
                    this.ApiVendorID == input.ApiVendorID ||
                    (this.ApiVendorID != null &&
                    this.ApiVendorID.Equals(input.ApiVendorID))
                ) && 
                (
                    this.BulkEmailOptOutTime == input.BulkEmailOptOutTime ||
                    (this.BulkEmailOptOutTime != null &&
                    this.BulkEmailOptOutTime.Equals(input.BulkEmailOptOutTime))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.CompanyLocationID == input.CompanyLocationID ||
                    (this.CompanyLocationID != null &&
                    this.CompanyLocationID.Equals(input.CompanyLocationID))
                ) && 
                (
                    this.CountryID == input.CountryID ||
                    (this.CountryID != null &&
                    this.CountryID.Equals(input.CountryID))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) && 
                (
                    this.EmailAddress2 == input.EmailAddress2 ||
                    (this.EmailAddress2 != null &&
                    this.EmailAddress2.Equals(input.EmailAddress2))
                ) && 
                (
                    this.EmailAddress3 == input.EmailAddress3 ||
                    (this.EmailAddress3 != null &&
                    this.EmailAddress3.Equals(input.EmailAddress3))
                ) && 
                (
                    this.Extension == input.Extension ||
                    (this.Extension != null &&
                    this.Extension.Equals(input.Extension))
                ) && 
                (
                    this.ExternalID == input.ExternalID ||
                    (this.ExternalID != null &&
                    this.ExternalID.Equals(input.ExternalID))
                ) && 
                (
                    this.FacebookUrl == input.FacebookUrl ||
                    (this.FacebookUrl != null &&
                    this.FacebookUrl.Equals(input.FacebookUrl))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.ImpersonatorCreatorResourceID == input.ImpersonatorCreatorResourceID ||
                    (this.ImpersonatorCreatorResourceID != null &&
                    this.ImpersonatorCreatorResourceID.Equals(input.ImpersonatorCreatorResourceID))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.IsOptedOutFromBulkEmail == input.IsOptedOutFromBulkEmail ||
                    (this.IsOptedOutFromBulkEmail != null &&
                    this.IsOptedOutFromBulkEmail.Equals(input.IsOptedOutFromBulkEmail))
                ) && 
                (
                    this.LastActivityDate == input.LastActivityDate ||
                    (this.LastActivityDate != null &&
                    this.LastActivityDate.Equals(input.LastActivityDate))
                ) && 
                (
                    this.LastModifiedDate == input.LastModifiedDate ||
                    (this.LastModifiedDate != null &&
                    this.LastModifiedDate.Equals(input.LastModifiedDate))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.LinkedInUrl == input.LinkedInUrl ||
                    (this.LinkedInUrl != null &&
                    this.LinkedInUrl.Equals(input.LinkedInUrl))
                ) && 
                (
                    this.MiddleInitial == input.MiddleInitial ||
                    (this.MiddleInitial != null &&
                    this.MiddleInitial.Equals(input.MiddleInitial))
                ) && 
                (
                    this.MobilePhone == input.MobilePhone ||
                    (this.MobilePhone != null &&
                    this.MobilePhone.Equals(input.MobilePhone))
                ) && 
                (
                    this.NamePrefix == input.NamePrefix ||
                    (this.NamePrefix != null &&
                    this.NamePrefix.Equals(input.NamePrefix))
                ) && 
                (
                    this.NameSuffix == input.NameSuffix ||
                    (this.NameSuffix != null &&
                    this.NameSuffix.Equals(input.NameSuffix))
                ) && 
                (
                    this.Note == input.Note ||
                    (this.Note != null &&
                    this.Note.Equals(input.Note))
                ) && 
                (
                    this.ReceivesEmailNotifications == input.ReceivesEmailNotifications ||
                    (this.ReceivesEmailNotifications != null &&
                    this.ReceivesEmailNotifications.Equals(input.ReceivesEmailNotifications))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.PrimaryContact == input.PrimaryContact ||
                    (this.PrimaryContact != null &&
                    this.PrimaryContact.Equals(input.PrimaryContact))
                ) && 
                (
                    this.RoomNumber == input.RoomNumber ||
                    (this.RoomNumber != null &&
                    this.RoomNumber.Equals(input.RoomNumber))
                ) && 
                (
                    this.SolicitationOptOut == input.SolicitationOptOut ||
                    (this.SolicitationOptOut != null &&
                    this.SolicitationOptOut.Equals(input.SolicitationOptOut))
                ) && 
                (
                    this.SolicitationOptOutTime == input.SolicitationOptOutTime ||
                    (this.SolicitationOptOutTime != null &&
                    this.SolicitationOptOutTime.Equals(input.SolicitationOptOutTime))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.SurveyOptOut == input.SurveyOptOut ||
                    (this.SurveyOptOut != null &&
                    this.SurveyOptOut.Equals(input.SurveyOptOut))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.TwitterUrl == input.TwitterUrl ||
                    (this.TwitterUrl != null &&
                    this.TwitterUrl.Equals(input.TwitterUrl))
                ) && 
                (
                    this.ZipCode == input.ZipCode ||
                    (this.ZipCode != null &&
                    this.ZipCode.Equals(input.ZipCode))
                ) && 
                (
                    this.SoapParentPropertyId == input.SoapParentPropertyId ||
                    (this.SoapParentPropertyId != null &&
                    this.SoapParentPropertyId.Equals(input.SoapParentPropertyId))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AdditionalAddressInformation != null)
                    hashCode = hashCode * 59 + this.AdditionalAddressInformation.GetHashCode();
                if (this.AddressLine != null)
                    hashCode = hashCode * 59 + this.AddressLine.GetHashCode();
                if (this.AddressLine1 != null)
                    hashCode = hashCode * 59 + this.AddressLine1.GetHashCode();
                if (this.AlternatePhone != null)
                    hashCode = hashCode * 59 + this.AlternatePhone.GetHashCode();
                if (this.ApiVendorID != null)
                    hashCode = hashCode * 59 + this.ApiVendorID.GetHashCode();
                if (this.BulkEmailOptOutTime != null)
                    hashCode = hashCode * 59 + this.BulkEmailOptOutTime.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.CompanyLocationID != null)
                    hashCode = hashCode * 59 + this.CompanyLocationID.GetHashCode();
                if (this.CountryID != null)
                    hashCode = hashCode * 59 + this.CountryID.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.EmailAddress != null)
                    hashCode = hashCode * 59 + this.EmailAddress.GetHashCode();
                if (this.EmailAddress2 != null)
                    hashCode = hashCode * 59 + this.EmailAddress2.GetHashCode();
                if (this.EmailAddress3 != null)
                    hashCode = hashCode * 59 + this.EmailAddress3.GetHashCode();
                if (this.Extension != null)
                    hashCode = hashCode * 59 + this.Extension.GetHashCode();
                if (this.ExternalID != null)
                    hashCode = hashCode * 59 + this.ExternalID.GetHashCode();
                if (this.FacebookUrl != null)
                    hashCode = hashCode * 59 + this.FacebookUrl.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.ImpersonatorCreatorResourceID != null)
                    hashCode = hashCode * 59 + this.ImpersonatorCreatorResourceID.GetHashCode();
                if (this.IsActive != null)
                    hashCode = hashCode * 59 + this.IsActive.GetHashCode();
                if (this.IsOptedOutFromBulkEmail != null)
                    hashCode = hashCode * 59 + this.IsOptedOutFromBulkEmail.GetHashCode();
                if (this.LastActivityDate != null)
                    hashCode = hashCode * 59 + this.LastActivityDate.GetHashCode();
                if (this.LastModifiedDate != null)
                    hashCode = hashCode * 59 + this.LastModifiedDate.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.LinkedInUrl != null)
                    hashCode = hashCode * 59 + this.LinkedInUrl.GetHashCode();
                if (this.MiddleInitial != null)
                    hashCode = hashCode * 59 + this.MiddleInitial.GetHashCode();
                if (this.MobilePhone != null)
                    hashCode = hashCode * 59 + this.MobilePhone.GetHashCode();
                if (this.NamePrefix != null)
                    hashCode = hashCode * 59 + this.NamePrefix.GetHashCode();
                if (this.NameSuffix != null)
                    hashCode = hashCode * 59 + this.NameSuffix.GetHashCode();
                if (this.Note != null)
                    hashCode = hashCode * 59 + this.Note.GetHashCode();
                if (this.ReceivesEmailNotifications != null)
                    hashCode = hashCode * 59 + this.ReceivesEmailNotifications.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.PrimaryContact != null)
                    hashCode = hashCode * 59 + this.PrimaryContact.GetHashCode();
                if (this.RoomNumber != null)
                    hashCode = hashCode * 59 + this.RoomNumber.GetHashCode();
                if (this.SolicitationOptOut != null)
                    hashCode = hashCode * 59 + this.SolicitationOptOut.GetHashCode();
                if (this.SolicitationOptOutTime != null)
                    hashCode = hashCode * 59 + this.SolicitationOptOutTime.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.SurveyOptOut != null)
                    hashCode = hashCode * 59 + this.SurveyOptOut.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.TwitterUrl != null)
                    hashCode = hashCode * 59 + this.TwitterUrl.GetHashCode();
                if (this.ZipCode != null)
                    hashCode = hashCode * 59 + this.ZipCode.GetHashCode();
                if (this.SoapParentPropertyId != null)
                    hashCode = hashCode * 59 + this.SoapParentPropertyId.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
