/* 
 * Datto|Autotask PSA Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ServiceModel
    /// </summary>
    [DataContract]
    public partial class ServiceModel :  IEquatable<ServiceModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="billingCodeID">billingCodeID.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="creatorResourceID">creatorResourceID.</param>
        /// <param name="description">description.</param>
        /// <param name="invoiceDescription">invoiceDescription.</param>
        /// <param name="isActive">isActive.</param>
        /// <param name="lastModifiedDate">lastModifiedDate.</param>
        /// <param name="markupRate">markupRate.</param>
        /// <param name="name">name.</param>
        /// <param name="periodType">periodType.</param>
        /// <param name="serviceLevelAgreementID">serviceLevelAgreementID.</param>
        /// <param name="unitCost">unitCost.</param>
        /// <param name="unitPrice">unitPrice.</param>
        /// <param name="updateResourceID">updateResourceID.</param>
        /// <param name="vendorCompanyID">vendorCompanyID.</param>
        /// <param name="userDefinedFields">userDefinedFields.</param>
        public ServiceModel(long? id = default(long?), int? billingCodeID = default(int?), DateTime? createDate = default(DateTime?), int? creatorResourceID = default(int?), string description = default(string), string invoiceDescription = default(string), bool? isActive = default(bool?), DateTime? lastModifiedDate = default(DateTime?), double? markupRate = default(double?), string name = default(string), int? periodType = default(int?), long? serviceLevelAgreementID = default(long?), double? unitCost = default(double?), double? unitPrice = default(double?), int? updateResourceID = default(int?), int? vendorCompanyID = default(int?), List<UserDefinedField> userDefinedFields = default(List<UserDefinedField>))
        {
            this.Id = id;
            this.BillingCodeID = billingCodeID;
            this.CreateDate = createDate;
            this.CreatorResourceID = creatorResourceID;
            this.Description = description;
            this.InvoiceDescription = invoiceDescription;
            this.IsActive = isActive;
            this.LastModifiedDate = lastModifiedDate;
            this.MarkupRate = markupRate;
            this.Name = name;
            this.PeriodType = periodType;
            this.ServiceLevelAgreementID = serviceLevelAgreementID;
            this.UnitCost = unitCost;
            this.UnitPrice = unitPrice;
            this.UpdateResourceID = updateResourceID;
            this.VendorCompanyID = vendorCompanyID;
            this.UserDefinedFields = userDefinedFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets BillingCodeID
        /// </summary>
        [DataMember(Name="billingCodeID", EmitDefaultValue=false)]
        public int? BillingCodeID { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatorResourceID
        /// </summary>
        [DataMember(Name="creatorResourceID", EmitDefaultValue=false)]
        public int? CreatorResourceID { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceDescription
        /// </summary>
        [DataMember(Name="invoiceDescription", EmitDefaultValue=false)]
        public string InvoiceDescription { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive", EmitDefaultValue=false)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDate
        /// </summary>
        [DataMember(Name="lastModifiedDate", EmitDefaultValue=false)]
        public DateTime? LastModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets MarkupRate
        /// </summary>
        [DataMember(Name="markupRate", EmitDefaultValue=false)]
        public double? MarkupRate { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets PeriodType
        /// </summary>
        [DataMember(Name="periodType", EmitDefaultValue=false)]
        public int? PeriodType { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelAgreementID
        /// </summary>
        [DataMember(Name="serviceLevelAgreementID", EmitDefaultValue=false)]
        public long? ServiceLevelAgreementID { get; set; }

        /// <summary>
        /// Gets or Sets UnitCost
        /// </summary>
        [DataMember(Name="unitCost", EmitDefaultValue=false)]
        public double? UnitCost { get; set; }

        /// <summary>
        /// Gets or Sets UnitPrice
        /// </summary>
        [DataMember(Name="unitPrice", EmitDefaultValue=false)]
        public double? UnitPrice { get; set; }

        /// <summary>
        /// Gets or Sets UpdateResourceID
        /// </summary>
        [DataMember(Name="updateResourceID", EmitDefaultValue=false)]
        public int? UpdateResourceID { get; set; }

        /// <summary>
        /// Gets or Sets VendorCompanyID
        /// </summary>
        [DataMember(Name="vendorCompanyID", EmitDefaultValue=false)]
        public int? VendorCompanyID { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedFields
        /// </summary>
        [DataMember(Name="userDefinedFields", EmitDefaultValue=false)]
        public List<UserDefinedField> UserDefinedFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ServiceModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BillingCodeID: ").Append(BillingCodeID).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatorResourceID: ").Append(CreatorResourceID).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  InvoiceDescription: ").Append(InvoiceDescription).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  MarkupRate: ").Append(MarkupRate).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PeriodType: ").Append(PeriodType).Append("\n");
            sb.Append("  ServiceLevelAgreementID: ").Append(ServiceLevelAgreementID).Append("\n");
            sb.Append("  UnitCost: ").Append(UnitCost).Append("\n");
            sb.Append("  UnitPrice: ").Append(UnitPrice).Append("\n");
            sb.Append("  UpdateResourceID: ").Append(UpdateResourceID).Append("\n");
            sb.Append("  VendorCompanyID: ").Append(VendorCompanyID).Append("\n");
            sb.Append("  UserDefinedFields: ").Append(UserDefinedFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ServiceModel);
        }

        /// <summary>
        /// Returns true if ServiceModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ServiceModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServiceModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.BillingCodeID == input.BillingCodeID ||
                    (this.BillingCodeID != null &&
                    this.BillingCodeID.Equals(input.BillingCodeID))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.CreatorResourceID == input.CreatorResourceID ||
                    (this.CreatorResourceID != null &&
                    this.CreatorResourceID.Equals(input.CreatorResourceID))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.InvoiceDescription == input.InvoiceDescription ||
                    (this.InvoiceDescription != null &&
                    this.InvoiceDescription.Equals(input.InvoiceDescription))
                ) && 
                (
                    this.IsActive == input.IsActive ||
                    (this.IsActive != null &&
                    this.IsActive.Equals(input.IsActive))
                ) && 
                (
                    this.LastModifiedDate == input.LastModifiedDate ||
                    (this.LastModifiedDate != null &&
                    this.LastModifiedDate.Equals(input.LastModifiedDate))
                ) && 
                (
                    this.MarkupRate == input.MarkupRate ||
                    (this.MarkupRate != null &&
                    this.MarkupRate.Equals(input.MarkupRate))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.PeriodType == input.PeriodType ||
                    (this.PeriodType != null &&
                    this.PeriodType.Equals(input.PeriodType))
                ) && 
                (
                    this.ServiceLevelAgreementID == input.ServiceLevelAgreementID ||
                    (this.ServiceLevelAgreementID != null &&
                    this.ServiceLevelAgreementID.Equals(input.ServiceLevelAgreementID))
                ) && 
                (
                    this.UnitCost == input.UnitCost ||
                    (this.UnitCost != null &&
                    this.UnitCost.Equals(input.UnitCost))
                ) && 
                (
                    this.UnitPrice == input.UnitPrice ||
                    (this.UnitPrice != null &&
                    this.UnitPrice.Equals(input.UnitPrice))
                ) && 
                (
                    this.UpdateResourceID == input.UpdateResourceID ||
                    (this.UpdateResourceID != null &&
                    this.UpdateResourceID.Equals(input.UpdateResourceID))
                ) && 
                (
                    this.VendorCompanyID == input.VendorCompanyID ||
                    (this.VendorCompanyID != null &&
                    this.VendorCompanyID.Equals(input.VendorCompanyID))
                ) && 
                (
                    this.UserDefinedFields == input.UserDefinedFields ||
                    this.UserDefinedFields != null &&
                    this.UserDefinedFields.SequenceEqual(input.UserDefinedFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.BillingCodeID != null)
                    hashCode = hashCode * 59 + this.BillingCodeID.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.CreatorResourceID != null)
                    hashCode = hashCode * 59 + this.CreatorResourceID.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.InvoiceDescription != null)
                    hashCode = hashCode * 59 + this.InvoiceDescription.GetHashCode();
                if (this.IsActive != null)
                    hashCode = hashCode * 59 + this.IsActive.GetHashCode();
                if (this.LastModifiedDate != null)
                    hashCode = hashCode * 59 + this.LastModifiedDate.GetHashCode();
                if (this.MarkupRate != null)
                    hashCode = hashCode * 59 + this.MarkupRate.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.PeriodType != null)
                    hashCode = hashCode * 59 + this.PeriodType.GetHashCode();
                if (this.ServiceLevelAgreementID != null)
                    hashCode = hashCode * 59 + this.ServiceLevelAgreementID.GetHashCode();
                if (this.UnitCost != null)
                    hashCode = hashCode * 59 + this.UnitCost.GetHashCode();
                if (this.UnitPrice != null)
                    hashCode = hashCode * 59 + this.UnitPrice.GetHashCode();
                if (this.UpdateResourceID != null)
                    hashCode = hashCode * 59 + this.UpdateResourceID.GetHashCode();
                if (this.VendorCompanyID != null)
                    hashCode = hashCode * 59 + this.VendorCompanyID.GetHashCode();
                if (this.UserDefinedFields != null)
                    hashCode = hashCode * 59 + this.UserDefinedFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
